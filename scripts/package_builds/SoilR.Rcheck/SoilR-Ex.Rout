
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "SoilR"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "SoilR-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('SoilR')
Loading required package: deSolve

Attaching package: ‘SoilR’

The following object is masked from ‘package:deSolve’:

    euler

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("AWBmodel")
> ### * AWBmodel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: AWBmodel
> ### Title: Implementation of the microbial model AWB (Allison, Wallenstein,
> ###   Bradford, 2010)
> ### Aliases: AWBmodel
> 
> ### ** Examples
> 
> hours=seq(0,800,0.1)
> 
> #Run the model with default parameter values
> bcmodel=AWBmodel(t=hours)
> Cpools=getC(bcmodel)
> ##Time solution
> # fixme mm:
> # the next line causes trouble on Rforge Windows patched build
> # matplot(hours,Cpools,type="l",ylab="Concentrations",xlab="Hours",lty=1,ylim=c(0,max(Cpools)*1.2))
> ##State-space diagram
> plot(as.data.frame(Cpools))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("AWBmodel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("C14Atm")
> ### * C14Atm
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: C14Atm
> ### Title: Atmospheric 14C fraction
> ### Aliases: C14Atm
> ### Keywords: datasets
> 
> ### ** Examples
> 
> #Notice that C14Atm is a shorter version of C14Atm_NH
> require("SoilR")
> data("C14Atm_NH")
> plot(C14Atm_NH,type="l")
> lines(C14Atm,col=2)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("C14Atm", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("C14Atm_NH")
> ### * C14Atm_NH
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: C14Atm_NH
> ### Title: Post-bomb atmospheric 14C fraction
> ### Aliases: C14Atm_NH
> ### Keywords: datasets
> 
> ### ** Examples
> 
> plot(C14Atm_NH,type="l")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("C14Atm_NH", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("CenturyModel")
> ### * CenturyModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: CenturyModel
> ### Title: Implementation of the Century model
> ### Aliases: CenturyModel
> 
> ### ** Examples
> 
> mnths=seq(0,100)
> APPT=50 # Assume 50 cm annual precipitation
> Pmax=-40+7.7*APPT # Max aboveground production
> Rmax=100+7.0*APPT # Max belowground production
> abvgIn=Pmax/(Pmax+Rmax)
> blgIn=Rmax/(Pmax+Rmax)
> 
> cm=CenturyModel(t=mnths, surfaceIn = abvgIn, soilIn = blgIn, LN=0.5, Ls=0.1)
> Ct=getC(cm)
> 
> poolNames=c("Surface structural", "Surface metabolic", "Belowground structural",
+                "Belowground metabolic", "Active SOM", "Slow SOM", "Passive SOM")
> matplot(mnths,Ct, type="l", lty=1, col=1:7, xlab="Time (months)", ylab="Carbon stock ")
> legend("topleft", poolNames, lty=1, col=1:7, bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("CenturyModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("CenturyModel14")
> ### * CenturyModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: CenturyModel14
> ### Title: Implementation of a radiocarbon version of the Century model
> ### Aliases: CenturyModel14
> 
> ### ** Examples
> 
> cal_yrs=seq(1900,2015, by=1/12)
> APPT=50 # Assume 50 cm annual precipitation
> Pmax=-40+7.7*APPT # Max aboveground production
> Rmax=100+7.0*APPT # Max belowground production
> abvgIn=52*Pmax/(Pmax+Rmax)
> blgIn=52*Rmax/(Pmax+Rmax)
> AtmC14=Graven2017[,c("Year.AD", "NH")]
> 
> cm=CenturyModel14(t=cal_yrs, surfaceIn = abvgIn, soilIn = blgIn, 
+                   F0_Delta14C=rep(0,7), inputFc=AtmC14, LN=0.5, Ls=0.1)
> C14t=getF14(cm)
> 
> poolNames=c("Surface structural", "Surface metabolic", "Belowground structural",
+                "Belowground metabolic", "Active SOM", "Slow SOM", "Passive SOM")
> plot(AtmC14, type="l", ylab="Delta 14C (per mil)")
> matlines(cal_yrs,C14t, lty=1, col=2:8)
> legend("topleft", poolNames, lty=1, col=2:8, bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("CenturyModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("GaudinskiModel14")
> ### * GaudinskiModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: GaudinskiModel14
> ### Title: Implementation of a the six-pool C14 model proposed by Gaudinski
> ###   et al. 2000
> ### Aliases: GaudinskiModel14
> 
> ### ** Examples
> 
> years=seq(1901,2010,by=0.5)
> 
> Ex=GaudinskiModel14(
+ t=years,
+ ks=c(kr=1/3, koi=1/1.5, koeal=1/4, koeah=1/80, kA1=1/3, kA2=1/75, kM=1/110),
+ inputFc=C14Atm_NH
+ )
> R14m=getF14R(Ex)
> C14m=getF14C(Ex)
> 
> plot(
+ C14Atm_NH,
+ type="l",
+ xlab="Year",
+ ylab=expression(paste(Delta^14,"C (per mil)")),
+ xlim=c(1940,2010)
+ ) 
> lines(years,C14m,col=4)
> points(HarvardForest14CO2[1:11,1],HarvardForest14CO2[1:11,2],pch=19,cex=0.5)
> points(HarvardForest14CO2[12:173,1],HarvardForest14CO2[12:173,2],pch=19,col=2,cex=0.5)
> points(HarvardForest14CO2[158,1],HarvardForest14CO2[158,2],pch=19,cex=0.5)
> lines(years,R14m,col=2)
> legend(
+ "topright",
+ c("Delta 14C Atmosphere",
+ "Delta 14C SOM", 
+ "Delta 14C Respired"
+ ),
+ lty=c(1,1,1), 
+ col=c(1,4,2),
+ bty="n"
+ )
> ## We now show how to bypass soilR s parameter sanity check if nacessary 
> ## (e.g in for parameter estimation ) in functions
> ## which might call it with unreasonable parameters
> years=seq(1800,2010,by=0.5)
> Ex=GaudinskiModel14(
+ t=years,
+ ks=c(kr=1/3,koi=1/1.5,koeal=1/4,koeah=1/80,kA1=1/3,kA2=1/75,kM=1/110),
+ inputFc=C14Atm_NH,
+ pass=TRUE
+ )
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("GaudinskiModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("GeneralNlModel")
> ### * GeneralNlModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: GeneralNlModel
> ### Title: Use this function to create objects of class NlModel.
> ### Aliases: GeneralNlModel
> 
> ### ** Examples
> 
> t_start=0
> t_end=20
> tn=100
> timestep=(t_end-t_start)/tn
> t=seq(t_start,t_end,timestep)
> k1=1/2
> k2=1/3
> Km=0.5
> nr=2
> 
> alpha=list()
> alpha[["1_to_2"]]=function(C,t){
+ 1/5
+ }
> alpha[["2_to_1"]]=function(C,t){
+ 1/6
+ }
> 
> f=function(C,t){
+ # The only thing to take care of is that we release a vector of the same
+ # size as C
+ S=C[[1]]
+ M=C[[2]]
+ O=matrix(byrow=TRUE,nrow=2,c(k1*M*(S/(Km+S)),
+ k2*M))
+ return(O)
+ }
> Anl=new("TransportDecompositionOperator",t_start,Inf,nr,alpha,f)
> 
> 
> c01=3
> c02=2
> iv=c(c01,c02)
> inputrates=new("TimeMap",t_start,t_end,function(t){return(matrix(
+ nrow=nr,
+ ncol=1,
+ c( 2,  2)
+ ))})
> #################################################################################
> # we check if we can reproduce the linear decomposition operator from the
> # nonlinear one
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("GeneralNlModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Graven2017")
> ### * Graven2017
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Graven2017
> ### Title: Compiled records of radicarbon in atmospheric CO2 for historical
> ###   simulations in CMIP6
> ### Aliases: Graven2017
> ### Keywords: datasets
> 
> ### ** Examples
> 
> matplot(Graven2017[,1], Graven2017[,-1],type="l",
+        lty=1, xlab="Year AD", ylab="Delta14C (per mil)", bty="n")
> legend("topleft",names(Graven2017[,-1]), lty=1, col=1:3, bty="n")
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Graven2017", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("HarvardForest14CO2")
> ### * HarvardForest14CO2
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: HarvardForest14CO2
> ### Title: Delta14C in soil CO2 efflux from Harvard Forest
> ### Aliases: HarvardForest14CO2
> ### Keywords: datasets
> 
> ### ** Examples
> 
> plot(HarvardForest14CO2[,1:2])
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("HarvardForest14CO2", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Hua2013")
> ### * Hua2013
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Hua2013
> ### Title: Atmospheric radiocarbon for the period 1950-2010 from Hua et al.
> ###   (2013)
> ### Aliases: Hua2013
> ### Keywords: datasets
> 
> ### ** Examples
> 
> plot(Hua2013$NHZone1$Year.AD, Hua2013$NHZone1$mean.Delta14C, 
+      type="l",xlab="Year AD",ylab=expression(paste(Delta^14,"C (\u2030)")))
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on 'C (‰)' in 'mbcsToSbcs': dot substituted for <b0>
> lines(Hua2013$NHZone2$Year.AD,Hua2013$NHZone2$mean.Delta14C,col=2)
> lines(Hua2013$NHZone3$Year.AD,Hua2013$NHZone3$mean.Delta14C,col=3)
> lines(Hua2013$SHZone12$Year.AD,Hua2013$SHZone12$mean.Delta14C,col=4)
> lines(Hua2013$SHZone3$Year.AD,Hua2013$SHZone3$mean.Delta14C,col=5)
> legend(
+ 	"topright",
+ 	c(
+ 		"Norther hemisphere zone 1",
+ 		"Norther hemisphere zone 2",
+ 		"Norther hemisphere zone 3",
+                 "Southern hemisphere zones 1 and 2",
+ 		"Southern Hemispher zone 3"
+ 	),
+ 	lty=1,
+ 	col=1:5,
+ 	bty="n"
+ )
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Hua2013", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Hua2021")
> ### * Hua2021
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Hua2021
> ### Title: Atmospheric radiocarbon for the period 1950-2019 from Hua et al.
> ###   (2021)
> ### Aliases: Hua2021
> ### Keywords: datasets
> 
> ### ** Examples
> 
> plot(Hua2021$NHZone1[,1:2],type="l")
> lines(Hua2021$NHZone2[,1:2],col=2)
> lines(Hua2021$NHZone3[,1:2],col=3)
> lines(Hua2021$`SHZone1-2`[,1:2],col=4)
> lines(Hua2021$SHZone3[,1:2],col=5)
> legend("topright",names(Hua2021), col=1:5,lty=1,bty="n")
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Hua2021", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("ICBMModel")
> ### * ICBMModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ICBMModel
> ### Title: Implementation of the Introductory Carbon Balance Model (ICBM)
> ### Aliases: ICBMModel
> 
> ### ** Examples
> 
> # examples from external files
> # inst/examples/exICBMModel.R exICBMModel_paper:
> 
>     # This example reproduces the simulations 
>     # presented in Table 1 of Andren and Katterer (1997).
>     # First, the model is run for different values of the 
>     # parameters representing different field experiments. 
>     times=seq(0,20,by=0.1)
>     Bare=ICBMModel(t=times) #Bare fallow
>     pNpS=ICBMModel(t=times, h=0.125, r=1,    c0=c(0.3,4.11),  In=0.19+0.095) #+N +Straw
>     mNpS=ICBMModel(t=times, h=0.125, r=1.22, c0=c(0.3, 4.05), In=0.19+0.058) #-N +Straw
>     mNmS=ICBMModel(t=times, h=0.125, r=1.17, c0=c(0.3, 3.99), In=0.057) #-N -Straw
>     pNmS=ICBMModel(t=times, h=0.125, r=1.07, c0=c(0.3, 4.02), In=0.091) #+N -Straw
>     FM=ICBMModel(t=times, h=0.250, r=1.10, c0=c(0.3, 3.99), In=0.19+0.082) #Manure
>     SwS=ICBMModel(t=times, h=0.340, r=0.97, c0=c(0.3, 4.14), In=0.19+0.106) #Sewage Sludge
>     SS=ICBMModel(t=times, h=0.125, r=1.00, c0=c(0.25, 4.16), In=0.2)  #Steady State
> 
>     #The amount of carbon for each simulation is recovered with the function getC
>     CtBare=getC(Bare)
>     CtpNpS=getC(pNpS)
>     CtmNpS=getC(mNpS)
>     CtmNmS=getC(mNmS)
>     CtpNmS=getC(pNmS)
>     CtFM=getC(FM)
>     CtSwS=getC(SwS)
>     CtSS=getC(SS)
> 
>     #This plot reproduces Figure 1 in Andren and Katterer (1997)
>     plot(times,
+       rowSums(CtBare),
+       type="l",
+       ylim=c(0,8),
+       xlim=c(0,20),
+       ylab="Topsoil carbon mass (kg m-2)",
+       xlab="Time (years)"
+     )
>     lines(times,rowSums(CtpNpS),lty=2)
>     lines(times,rowSums(CtmNpS),lty=3)
>     lines(times,rowSums(CtmNmS),lty=4)
>     lines(times,rowSums(CtpNmS),lwd=2)
>     lines(times,rowSums(CtFM),lty=2,lwd=2)
>     lines(times,rowSums(CtSwS),lty=3,lwd=2)
>     #lines(times,rowSums(CtSS),lty=4,lwd=2)
>     legend("topleft",
+       c("Bare fallow",
+         "+N +Straw",
+         "-N +Straw",
+         "-N -Straw",
+         "+N -Straw",
+         "Manure",
+        "Sludge"
+       ),
+       lty=c(1,2,3,4,1,2,3),
+       lwd=c(1,1,1,1,2,2,2),
+       bty="n"
+     )
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ICBMModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("IntCal09")
> ### * IntCal09
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: IntCal09
> ### Title: Northern Hemisphere atmospheric radiocarbon for the pre-bomb
> ###   period
> ### Aliases: IntCal09
> ### Keywords: datasets
> 
> ### ** Examples
> 
> par(mfrow=c(2,1))
> plot(IntCal09$CAL.BP, IntCal09$C14.age, type="l")
> polygon(x=c(IntCal09$CAL.BP,rev(IntCal09$CAL.BP)),
+ 	y=c(IntCal09$C14.age+IntCal09$Error,rev(IntCal09$C14.age-IntCal09$Error)),
+ 	col="gray",border=NA)
> lines(IntCal09$CAL.BP,IntCal09$C14.age)
> 
> plot(IntCal09$CAL.BP,IntCal09$Delta.14C,type="l")
> polygon(x=c(IntCal09$CAL.BP,rev(IntCal09$CAL.BP)),
+ 	y=c(IntCal09$Delta.14C+IntCal09$Sigma,rev(IntCal09$Delta.14C-IntCal09$Sigma)),
+ 	col="gray",border=NA)
> lines(IntCal09$CAL.BP,IntCal09$Delta.14C)
> par(mfrow=c(1,1))
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("IntCal09", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("IntCal13")
> ### * IntCal13
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: IntCal13
> ### Title: Atmospheric radiocarbon for the 0-50,000 yr BP period
> ### Aliases: IntCal13
> ### Keywords: datasets
> 
> ### ** Examples
> 
>      plot(IntCal13$CAL.BP,IntCal13$C14.age-IntCal13$Error,type="l",col=2,
+           xlab="cal BP",ylab="14C BP")
>      lines(IntCal13$CAL.BP,IntCal13$C14.age+IntCal13$Error,col=2)
> 
>      plot(IntCal13$CAL.BP,IntCal13$Delta.14C+IntCal13$Sigma,type="l",col=2,
+           xlab="cal BP",ylab="Delta14C")
>      lines(IntCal13$CAL.BP,IntCal13$Delta.14C-IntCal13$Sigma,col=2)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("IntCal13", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("IntCal20")
> ### * IntCal20
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: IntCal20
> ### Title: The IntCal20 northern hemisphere radiocarbon curve for the
> ###   0-55,000 yr BP period
> ### Aliases: IntCal20
> ### Keywords: datasets
> 
> ### ** Examples
> 
>     plot(IntCal20$CAL.BP, IntCal20$Delta.14C, type="l", 
+          xlab="cal BP", ylab="Delta14C (per mil)")
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("IntCal20", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Model")
> ### * Model
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Model
> ### Title: Constructor for class Model
> ### Aliases: Model
> 
> ### ** Examples
> 
> 
> # vim:set ff=unix expandtab ts=2 sw=2:
> test.all.possible.Model.arguments <- function(){
+   # This example shows different kinds of arguments to the function Model.
+   # The model objects we will build will share some common features.
+   #  - two pools 
+   #  - initial values 
+ 
+   iv<-  c(5,6)
+   times <- seq(1,10,by=0.1)
+ 
+   # The other parameters A and inputFluxes will be different
+   # The function Model will transform these arguments 
+   # into objects of the classes required by the internal constructor.
+   # This leads to a number of possible argument types. 
+   # We demonstrate some of the possibilities here.
+   # Let us first look at the choeices for argument 'A'.
+   
+   #) 
+   possibleAs  <- example.2DGeneralDecompOpArgs()
+   
+   # Since "Model" will call "InFluxes" on its "inputFluxes" 
+   # argument there are again different choices
+   # we have included a function in SoilR that produces 2D examples
+   
+   possibleInfluxes <- example.2DInFluxes.Args()
+  print(possibleInfluxes$I.vec)
+   # We can build a lot of  models from the possible combinations
+   # for instance   
+   #m1 <- Model(
+   #        t=times,
+   #        A=matrix(nrow=2,byrow=TRUE,c(-0.1,0,0,-0.2)),
+   #        ivList=iv,
+   #        inputFluxes=possibleInfluxes$I.vec) 
+   ## We now produce all combinations of As and InputFluxes
+   combinations <- listProduct(possibleAs,possibleInfluxes)
+   print(length(combinations))
+   # and a Model for each
+   models <- lapply(
+               combinations,
+               function(combi){
+                 #Model(t=times,A=combi$A,ivList=iv,inputFluxes=combi$I)
+                 Model(t=times,A=combi[[1]],ivList=iv,inputFluxes=combi[[2]])
+               }
+             )
+   ## lets check that we can compute something# 
+   lapply(models,getC)
+ }
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Model", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Model_14")
> ### * Model_14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Model_14
> ### Title: general constructor for class Model_14
> ### Aliases: Model_14
> 
> ### ** Examples
> 
> # examples from external files
> # inst/tests/requireSoilR/runit.all.possible.Model.arguments.R test.all.possible.Model.arguments:
> 
>   # This example shows different kinds of arguments to the function Model.
>   # The model objects we will build will share some common features.
>   #  - two pools 
>   #  - initial values 
> 
>        iv<-  c(5,6)
> 
>   #  - times 
> 
>        times <- seq(1,10,by=0.1)
> 
>   # The other parameters A and inputFluxes will be different
>   # The function Model will transform these arguments 
>   # into objects of the classes required by the internal constructor.
>   # This leads to a number of possible argument types. 
>   # We demonstrate some of the possibilities here.
>   # Let us first look at the choeices for argument 'A'.
>   
>   #) 
>   possibleAs  <- example.2DGeneralDecompOpArgs()
>   
>   # Since "Model" will call "InFluxes" on its "inputFluxes" 
>   # argument there are again different choices
>   # we have included a function in SoilR that produces 2D examples
>   
>   possibleInfluxes <- example.2DInFluxes.Args()
>  print(possibleInfluxes$I.vec)
[1] 5 6
>   # We can build a lot of  models from the possible combinations
>   # for instance   
>   #m1 <- Model(
>   #        t=times,
>   #        A=matrix(nrow=2,byrow=TRUE,c(-0.1,0,0,-0.2)),
>   #        ivList=iv,
>   #        inputFluxes=possibleInfluxes$I.vec) 
>   ## We now produce that all combinations of As and InputFluxes
>   combinations <- listProduct(possibleAs,possibleInfluxes)
>   print(length(combinations))
[1] 64
>   # an a Model for each
>   models <- lapply(
+               combinations,
+               function(combi){
+                 #Model(t=times,A=combi$A,ivList=iv,inputFluxes=combi$I)
+                 Model(t=times,A=combi[[1]],ivList=iv,inputFluxes=combi[[2]])
+               }
+             )
>   ## lets check that we can compute something# 
>   lapply(models,getC)
$DO_matrix.I.vec
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.447758  6.475236
 [3,]  5.891061  6.941059
 [4,]  6.329951  7.397653
 [5,]  6.764476  7.845210
 [6,]  7.194676  8.283904
 [7,]  7.620596  8.713911
 [8,]  8.042278  9.135404
 [9,]  8.459765  9.548551
[10,]  8.873097  9.953517
[11,]  9.282317 10.350464
[12,]  9.687464 10.739550
[13,] 10.088581 11.120933
[14,] 10.485706 11.494763
[15,] 10.878880 11.861192
[16,] 11.268141 12.220364
[17,] 11.653530 12.572425
[18,] 12.035084 12.917514
[19,] 12.412841 13.255770
[20,] 12.786839 13.587328
[21,] 13.157116 13.912320
[22,] 13.523709 14.230878
[23,] 13.886654 14.543127
[24,] 14.245988 14.849194
[25,] 14.601747 15.149200
[26,] 14.953965 15.443265
[27,] 15.302679 15.731508
[28,] 15.647923 16.014043
[29,] 15.989732 16.290984
[30,] 16.328140 16.562440
[31,] 16.663180 16.828522
[32,] 16.994887 17.089335
[33,] 17.323294 17.344983
[34,] 17.648432 17.595569
[35,] 17.970336 17.841193
[36,] 18.289036 18.081954
[37,] 18.604566 18.317947
[38,] 18.916955 18.549267
[39,] 19.226237 18.776007
[40,] 19.532441 18.998257
[41,] 19.835598 19.216106
[42,] 20.135739 19.429641
[43,] 20.432893 19.638948
[44,] 20.727091 19.844111
[45,] 21.018361 20.045211
[46,] 21.306733 20.242329
[47,] 21.592236 20.435544
[48,] 21.874898 20.624933
[49,] 22.154748 20.810572
[50,] 22.431812 20.992534
[51,] 22.706121 21.170894
[52,] 22.977699 21.345722
[53,] 23.246576 21.517088
[54,] 23.512777 21.685061
[55,] 23.776329 21.849708
[56,] 24.037259 22.011095
[57,] 24.295592 22.169286
[58,] 24.551355 22.324344
[59,] 24.804574 22.476332
[60,] 25.055272 22.625311
[61,] 25.303477 22.771340
[62,] 25.549211 22.914477
[63,] 25.792501 23.054779
[64,] 26.033369 23.192304
[65,] 26.271841 23.327105
[66,] 26.507940 23.459238
[67,] 26.741690 23.588753
[68,] 26.973114 23.715704
[69,] 27.202236 23.840142
[70,] 27.429077 23.962115
[71,] 27.653662 24.081673
[72,] 27.876011 24.198864
[73,] 28.096149 24.313734
[74,] 28.314096 24.426330
[75,] 28.529874 24.536696
[76,] 28.743505 24.644877
[77,] 28.955011 24.750915
[78,] 29.164412 24.854854
[79,] 29.371730 24.956735
[80,] 29.576984 25.056598
[81,] 29.780197 25.154484
[82,] 29.981387 25.250432
[83,] 30.180576 25.344479
[84,] 30.377782 25.436665
[85,] 30.573027 25.527025
[86,] 30.766328 25.615596
[87,] 30.957706 25.702413
[88,] 31.147180 25.787511
[89,] 31.334769 25.870924
[90,] 31.520491 25.952685
[91,] 31.704365 26.032827

$DO_matrix.I.vecFunc
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136029 6.164508
 [3,] 5.275214 6.314148
 [4,] 5.416615 6.446264
 [5,] 5.559268 6.558846
 [6,] 5.702191 6.650599
 [7,] 5.844394 6.720999
 [8,] 5.984891 6.770303
 [9,] 6.122708 6.799551
[10,] 6.256894 6.810524
[11,] 6.386530 6.805673
[12,] 6.510739 6.788023
[13,] 6.628691 6.761052
[14,] 6.739618 6.728560
[15,] 6.842817 6.694505
[16,] 6.937657 6.662858
[17,] 7.023589 6.637441
[18,] 7.100145 6.621780
[19,] 7.166952 6.618960
[20,] 7.223726 6.631507
[21,] 7.270282 6.661284
[22,] 7.306532 6.709422
[23,] 7.332487 6.776276
[24,] 7.348260 6.861405
[25,] 7.354059 6.963600
[26,] 7.350188 7.080926
[27,] 7.337046 7.210803
[28,] 7.315120 7.350108
[29,] 7.284981 7.495304
[30,] 7.247278 7.642578
[31,] 7.202734 7.787993
[32,] 7.152135 7.927651
[33,] 7.096326 8.057845
[34,] 7.036198 8.175205
[35,] 6.972685 8.276843
[36,] 6.906749 8.360456
[37,] 6.839374 8.424430
[38,] 6.771556 8.467896
[39,] 6.704290 8.490773
[40,] 6.638564 8.493765
[41,] 6.575347 8.478338
[42,] 6.515580 8.446660
[43,] 6.460167 8.401517
[44,] 6.409963 8.346203
[45,] 6.365771 8.284386
[46,] 6.328330 8.219963
[47,] 6.298307 8.156911
[48,] 6.276294 8.099119
[49,] 6.262799 8.050244
[50,] 6.258242 8.013557
[51,] 6.262952 7.991820
[52,] 6.277162 7.987170
[53,] 6.301005 8.001040
[54,] 6.334519 8.034100
[55,] 6.377640 8.086229
[56,] 6.430206 8.156523
[57,] 6.491957 8.243332
[58,] 6.562542 8.344322
[59,] 6.641514 8.456574
[60,] 6.728343 8.576696
[61,] 6.822418 8.700961
[62,] 6.923051 8.825459
[63,] 7.029489 8.946245
[64,] 7.140914 9.059506
[65,] 7.256460 9.161706
[66,] 7.375216 9.249734
[67,] 7.496236 9.321021
[68,] 7.618549 9.373650
[69,] 7.741169 9.406428
[70,] 7.863104 9.418936
[71,] 7.983367 9.411544
[72,] 8.100987 9.385401
[73,] 8.215015 9.342385
[74,] 8.324535 9.285030
[75,] 8.428676 9.216424
[76,] 8.526617 9.140092
[77,] 8.617598 9.059847
[78,] 8.700925 8.979644
[79,] 8.775980 8.903423
[80,] 8.842224 8.834949
[81,] 8.899204 8.777664
[82,] 8.946558 8.734550
[83,] 8.984019 8.708010
[84,] 9.011415 8.699772
[85,] 9.028674 8.710824
[86,] 9.035822 8.741368
[87,] 9.032985 8.790819
[88,] 9.020387 8.857824
[89,] 8.998347 8.940320
[90,] 8.967277 9.035611
[91,] 8.927676 9.140483

$DO_matrix.I.list1
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136789 6.154561
 [3,] 5.277847 6.278901
 [4,] 5.421711 6.376629
 [5,] 5.567010 6.451139
 [6,] 5.712455 6.505627
 [7,] 5.856839 6.543091
 [8,] 5.999040 6.566338
 [9,] 6.138013 6.577983
[10,] 6.272798 6.580459
[11,] 6.402512 6.576014
[12,] 6.526352 6.566726
[13,] 6.643589 6.554572
[14,] 6.753564 6.541505
[15,] 6.855685 6.529460
[16,] 6.949431 6.520351
[17,] 7.034345 6.516073
[18,] 7.110041 6.518503
[19,] 7.176196 6.529502
[20,] 7.232552 6.550912
[21,] 7.278918 6.584556
[22,] 7.315168 6.632208
[23,] 7.341258 6.695256
[24,] 7.357247 6.774329
[25,] 7.363296 6.869295
[26,] 7.359667 6.979289
[27,] 7.346721 7.102713
[28,] 7.324918 7.237253
[29,] 7.294818 7.379895
[30,] 7.257075 7.526937
[31,] 7.212442 7.674005
[32,] 7.161760 7.816132
[33,] 7.105928 7.948486
[34,] 7.045855 8.067109
[35,] 6.982464 8.168949
[36,] 6.916689 8.251847
[37,] 6.849475 8.314520
[38,] 6.781777 8.356543
[39,] 6.714563 8.378331
[40,] 6.648810 8.381126
[41,] 6.585505 8.366975
[42,] 6.525645 8.338682
[43,] 6.470188 8.299421
[44,] 6.420013 8.252310
[45,] 6.375917 8.200413
[46,] 6.338618 8.146741
[47,] 6.308751 8.094226
[48,] 6.286872 8.045744
[49,] 6.273459 8.004108
[50,] 6.268912 7.972074
[51,] 6.273552 7.952337
[52,] 6.287626 7.947495
[53,] 6.311287 7.959698
[54,] 6.344591 7.990237
[55,] 6.387492 8.039547
[56,] 6.439843 8.107237
[57,] 6.501400 8.192091
[58,] 6.571821 8.292086
[59,] 6.650665 8.404412
[60,] 6.737397 8.525484
[61,] 6.831386 8.650960
[62,] 6.931912 8.775820
[63,] 7.038188 8.895102
[64,] 7.149397 9.004636
[65,] 7.264687 9.101081
[66,] 7.383179 9.181918
[67,] 7.503959 9.245424
[68,] 7.626085 9.290665
[69,] 7.748585 9.317476
[70,] 7.870456 9.326448
[71,] 7.990667 9.318909
[72,] 8.108161 9.296879
[73,] 8.221910 9.262715
[74,] 8.330968 9.218707
[75,] 8.434476 9.167088
[76,] 8.531655 9.110029
[77,] 8.621812 9.049624
[78,] 8.704339 8.987899
[79,] 8.778706 8.926817
[80,] 8.844467 8.868276
[81,] 8.901256 8.814111
[82,] 8.948782 8.766103
[83,] 8.986827 8.726045
[84,] 9.015226 8.695822
[85,] 9.033866 8.677414
[86,] 9.042693 8.672887
[87,] 9.041702 8.684398
[88,] 9.030944 8.714190
[89,] 9.010520 8.764592
[90,] 8.980584 8.838018
[91,] 8.941341 8.936962

$DO_matrix.I.list2
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136789 6.154561
 [3,] 5.277847 6.278901
 [4,] 5.421711 6.376629
 [5,] 5.567010 6.451139
 [6,] 5.712455 6.505627
 [7,] 5.856839 6.543091
 [8,] 5.999040 6.566338
 [9,] 6.138013 6.577983
[10,] 6.272798 6.580459
[11,] 6.402512 6.576014
[12,] 6.526352 6.566726
[13,] 6.643589 6.554572
[14,] 6.753564 6.541505
[15,] 6.855685 6.529460
[16,] 6.949431 6.520351
[17,] 7.034345 6.516073
[18,] 7.110041 6.518503
[19,] 7.176196 6.529502
[20,] 7.232552 6.550912
[21,] 7.278918 6.584556
[22,] 7.315168 6.632208
[23,] 7.341258 6.695256
[24,] 7.357247 6.774329
[25,] 7.363296 6.869295
[26,] 7.359667 6.979289
[27,] 7.346721 7.102713
[28,] 7.324918 7.237253
[29,] 7.294818 7.379895
[30,] 7.257075 7.526937
[31,] 7.212442 7.674005
[32,] 7.161760 7.816132
[33,] 7.105928 7.948486
[34,] 7.045855 8.067109
[35,] 6.982464 8.168949
[36,] 6.916689 8.251847
[37,] 6.849475 8.314520
[38,] 6.781777 8.356543
[39,] 6.714563 8.378331
[40,] 6.648810 8.381126
[41,] 6.585505 8.366975
[42,] 6.525645 8.338682
[43,] 6.470188 8.299421
[44,] 6.420013 8.252310
[45,] 6.375917 8.200413
[46,] 6.338618 8.146741
[47,] 6.308751 8.094226
[48,] 6.286872 8.045744
[49,] 6.273459 8.004108
[50,] 6.268912 7.972074
[51,] 6.273552 7.952337
[52,] 6.287626 7.947495
[53,] 6.311287 7.959698
[54,] 6.344591 7.990237
[55,] 6.387492 8.039547
[56,] 6.439843 8.107237
[57,] 6.501400 8.192091
[58,] 6.571821 8.292086
[59,] 6.650665 8.404412
[60,] 6.737397 8.525484
[61,] 6.831386 8.650960
[62,] 6.931912 8.775820
[63,] 7.038188 8.895102
[64,] 7.149397 9.004636
[65,] 7.264687 9.101081
[66,] 7.383179 9.181918
[67,] 7.503959 9.245424
[68,] 7.626085 9.290665
[69,] 7.748585 9.317476
[70,] 7.870456 9.326448
[71,] 7.990667 9.318909
[72,] 8.108161 9.296879
[73,] 8.221910 9.262715
[74,] 8.330968 9.218707
[75,] 8.434476 9.167088
[76,] 8.531655 9.110029
[77,] 8.621812 9.049624
[78,] 8.704339 8.987899
[79,] 8.778706 8.926817
[80,] 8.844467 8.868276
[81,] 8.901256 8.814111
[82,] 8.948782 8.766103
[83,] 8.986827 8.726045
[84,] 9.015226 8.695822
[85,] 9.033866 8.677414
[86,] 9.042693 8.672887
[87,] 9.041702 8.684398
[88,] 9.030944 8.714190
[89,] 9.010520 8.764592
[90,] 8.980584 8.838018
[91,] 8.941341 8.936962

$DO_matrix.I.timeMap
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.133817 6.160958
 [3,] 5.266977 6.302230
 [4,] 5.399486 6.424209
 [5,] 5.531353 6.527279
 [6,] 5.662582 6.611812
 [7,] 5.793180 6.678177
 [8,] 5.923154 6.726732
 [9,] 6.052509 6.757830
[10,] 6.181252 6.771816
[11,] 6.309387 6.769036
[12,] 6.432754 6.760466
[13,] 6.547253 6.756782
[14,] 6.652970 6.757898
[15,] 6.749992 6.763717
[16,] 6.838404 6.774149
[17,] 6.918294 6.789100
[18,] 6.989745 6.808481
[19,] 7.052841 6.832205
[20,] 7.107667 6.860186
[21,] 7.154297 6.892375
[22,] 7.192171 6.932559
[23,] 7.220742 6.984498
[24,] 7.240094 7.047970
[25,] 7.250319 7.122747
[26,] 7.251508 7.208605
[27,] 7.243750 7.305325
[28,] 7.227136 7.412691
[29,] 7.201752 7.530493
[30,] 7.167686 7.658524
[31,] 7.125025 7.796578
[32,] 7.077321 7.930547
[33,] 7.028081 8.046680
[34,] 6.977319 8.145333
[35,] 6.925052 8.226850
[36,] 6.871293 8.291572
[37,] 6.816058 8.339831
[38,] 6.759361 8.371953
[39,] 6.701218 8.388257
[40,] 6.641642 8.389057
[41,] 6.580650 8.374663
[42,] 6.522644 8.353022
[43,] 6.471978 8.331883
[44,] 6.428576 8.311237
[45,] 6.392368 8.291073
[46,] 6.363281 8.271383
[47,] 6.341245 8.252156
[48,] 6.326189 8.233383
[49,] 6.318044 8.215056
[50,] 6.316742 8.197165
[51,] 6.322219 8.179733
[52,] 6.335676 8.170228
[53,] 6.358318 8.176041
[54,] 6.390052 8.196859
[55,] 6.430788 8.232385
[56,] 6.480436 8.282327
[57,] 6.538907 8.346401
[58,] 6.606114 8.424326
[59,] 6.681969 8.515828
[60,] 6.766387 8.620638
[61,] 6.859273 8.738449
[62,] 6.957549 8.855149
[63,] 7.058157 8.956887
[64,] 7.161071 9.043952
[65,] 7.266268 9.116635
[66,] 7.373725 9.175221
[67,] 7.483420 9.219989
[68,] 7.595331 9.251212
[69,] 7.709436 9.269159
[70,] 7.825712 9.274092
[71,] 7.944137 9.266271
[72,] 8.060159 9.249996
[73,] 8.169283 9.229457
[74,] 8.271578 9.204741
[75,] 8.367112 9.175929
[76,] 8.455951 9.143103
[77,] 8.538162 9.106342
[78,] 8.613812 9.065725
[79,] 8.682966 9.021326
[80,] 8.745688 8.973222
[81,] 8.802034 8.921528
[82,] 8.850194 8.876808
[83,] 8.888362 8.849435
[84,] 8.916637 8.839077
[85,] 8.935118 8.845399
[86,] 8.943900 8.868069
[87,] 8.943081 8.906765
[88,] 8.932757 8.961168
[89,] 8.913022 9.030969
[90,] 8.883969 9.115861
[91,]       NA       NA

$DO_matrix.I.ConstInFluxes
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.447758  6.475236
 [3,]  5.891061  6.941059
 [4,]  6.329951  7.397653
 [5,]  6.764476  7.845210
 [6,]  7.194676  8.283904
 [7,]  7.620596  8.713911
 [8,]  8.042278  9.135404
 [9,]  8.459765  9.548551
[10,]  8.873097  9.953517
[11,]  9.282317 10.350464
[12,]  9.687464 10.739550
[13,] 10.088581 11.120933
[14,] 10.485706 11.494763
[15,] 10.878880 11.861192
[16,] 11.268141 12.220364
[17,] 11.653530 12.572425
[18,] 12.035084 12.917514
[19,] 12.412841 13.255770
[20,] 12.786839 13.587328
[21,] 13.157116 13.912320
[22,] 13.523709 14.230878
[23,] 13.886654 14.543127
[24,] 14.245988 14.849194
[25,] 14.601747 15.149200
[26,] 14.953965 15.443265
[27,] 15.302679 15.731508
[28,] 15.647923 16.014043
[29,] 15.989732 16.290984
[30,] 16.328140 16.562440
[31,] 16.663180 16.828522
[32,] 16.994887 17.089335
[33,] 17.323294 17.344983
[34,] 17.648432 17.595569
[35,] 17.970336 17.841193
[36,] 18.289036 18.081954
[37,] 18.604566 18.317947
[38,] 18.916955 18.549267
[39,] 19.226237 18.776007
[40,] 19.532441 18.998257
[41,] 19.835598 19.216106
[42,] 20.135739 19.429641
[43,] 20.432893 19.638948
[44,] 20.727091 19.844111
[45,] 21.018361 20.045211
[46,] 21.306733 20.242329
[47,] 21.592236 20.435544
[48,] 21.874898 20.624933
[49,] 22.154748 20.810572
[50,] 22.431812 20.992534
[51,] 22.706121 21.170894
[52,] 22.977699 21.345722
[53,] 23.246576 21.517088
[54,] 23.512777 21.685061
[55,] 23.776329 21.849708
[56,] 24.037259 22.011095
[57,] 24.295592 22.169286
[58,] 24.551355 22.324344
[59,] 24.804574 22.476332
[60,] 25.055272 22.625311
[61,] 25.303477 22.771340
[62,] 25.549211 22.914477
[63,] 25.792501 23.054779
[64,] 26.033369 23.192304
[65,] 26.271841 23.327105
[66,] 26.507940 23.459238
[67,] 26.741690 23.588753
[68,] 26.973114 23.715704
[69,] 27.202236 23.840142
[70,] 27.429077 23.962115
[71,] 27.653662 24.081673
[72,] 27.876011 24.198864
[73,] 28.096149 24.313734
[74,] 28.314096 24.426330
[75,] 28.529874 24.536696
[76,] 28.743505 24.644877
[77,] 28.955011 24.750915
[78,] 29.164412 24.854854
[79,] 29.371730 24.956735
[80,] 29.576984 25.056598
[81,] 29.780197 25.154484
[82,] 29.981387 25.250432
[83,] 30.180576 25.344479
[84,] 30.377782 25.436665
[85,] 30.573027 25.527025
[86,] 30.766328 25.615596
[87,] 30.957706 25.702413
[88,] 31.147180 25.787511
[89,] 31.334769 25.870924
[90,] 31.520491 25.952685
[91,] 31.704365 26.032827

$DO_matrix.I.UnBoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136029 6.164508
 [3,] 5.275214 6.314148
 [4,] 5.416615 6.446264
 [5,] 5.559268 6.558846
 [6,] 5.702191 6.650599
 [7,] 5.844394 6.720999
 [8,] 5.984891 6.770303
 [9,] 6.122708 6.799551
[10,] 6.256894 6.810524
[11,] 6.386530 6.805673
[12,] 6.510739 6.788023
[13,] 6.628691 6.761052
[14,] 6.739618 6.728560
[15,] 6.842817 6.694505
[16,] 6.937657 6.662858
[17,] 7.023589 6.637441
[18,] 7.100145 6.621780
[19,] 7.166952 6.618960
[20,] 7.223726 6.631507
[21,] 7.270282 6.661284
[22,] 7.306532 6.709422
[23,] 7.332487 6.776276
[24,] 7.348260 6.861405
[25,] 7.354059 6.963600
[26,] 7.350188 7.080926
[27,] 7.337046 7.210803
[28,] 7.315120 7.350108
[29,] 7.284981 7.495304
[30,] 7.247278 7.642578
[31,] 7.202734 7.787993
[32,] 7.152135 7.927651
[33,] 7.096326 8.057845
[34,] 7.036198 8.175205
[35,] 6.972685 8.276843
[36,] 6.906749 8.360456
[37,] 6.839374 8.424430
[38,] 6.771556 8.467896
[39,] 6.704290 8.490773
[40,] 6.638564 8.493765
[41,] 6.575347 8.478338
[42,] 6.515580 8.446660
[43,] 6.460167 8.401517
[44,] 6.409963 8.346203
[45,] 6.365771 8.284386
[46,] 6.328330 8.219963
[47,] 6.298307 8.156911
[48,] 6.276294 8.099119
[49,] 6.262799 8.050244
[50,] 6.258242 8.013557
[51,] 6.262952 7.991820
[52,] 6.277162 7.987170
[53,] 6.301005 8.001040
[54,] 6.334519 8.034100
[55,] 6.377640 8.086229
[56,] 6.430206 8.156523
[57,] 6.491957 8.243332
[58,] 6.562542 8.344322
[59,] 6.641514 8.456574
[60,] 6.728343 8.576696
[61,] 6.822418 8.700961
[62,] 6.923051 8.825459
[63,] 7.029489 8.946245
[64,] 7.140914 9.059506
[65,] 7.256460 9.161706
[66,] 7.375216 9.249734
[67,] 7.496236 9.321021
[68,] 7.618549 9.373650
[69,] 7.741169 9.406428
[70,] 7.863104 9.418936
[71,] 7.983367 9.411544
[72,] 8.100987 9.385401
[73,] 8.215015 9.342385
[74,] 8.324535 9.285030
[75,] 8.428676 9.216424
[76,] 8.526617 9.140092
[77,] 8.617598 9.059847
[78,] 8.700925 8.979644
[79,] 8.775980 8.903423
[80,] 8.842224 8.834949
[81,] 8.899204 8.777664
[82,] 8.946558 8.734550
[83,] 8.984019 8.708010
[84,] 9.011415 8.699772
[85,] 9.028674 8.710824
[86,] 9.035822 8.741368
[87,] 9.032985 8.790819
[88,] 9.020387 8.857824
[89,] 8.998347 8.940320
[90,] 8.967277 9.035611
[91,] 8.927676 9.140483

$DO_matrix.I.BoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136029 6.164508
 [3,] 5.275214 6.314148
 [4,] 5.416615 6.446264
 [5,] 5.559268 6.558846
 [6,] 5.702191 6.650599
 [7,] 5.844394 6.720999
 [8,] 5.984891 6.770303
 [9,] 6.122708 6.799551
[10,] 6.256894 6.810524
[11,] 6.386530 6.805673
[12,] 6.510739 6.788023
[13,] 6.628691 6.761052
[14,] 6.739618 6.728560
[15,] 6.842817 6.694505
[16,] 6.937657 6.662858
[17,] 7.023589 6.637441
[18,] 7.100145 6.621780
[19,] 7.166952 6.618960
[20,] 7.223726 6.631507
[21,] 7.270282 6.661284
[22,] 7.306532 6.709422
[23,] 7.332487 6.776276
[24,] 7.348260 6.861405
[25,] 7.354059 6.963600
[26,] 7.350188 7.080926
[27,] 7.337046 7.210803
[28,] 7.315120 7.350108
[29,] 7.284981 7.495304
[30,] 7.247278 7.642578
[31,] 7.202734 7.787993
[32,] 7.152135 7.927651
[33,] 7.096326 8.057845
[34,] 7.036198 8.175205
[35,] 6.972685 8.276843
[36,] 6.906749 8.360456
[37,] 6.839374 8.424430
[38,] 6.771556 8.467896
[39,] 6.704290 8.490773
[40,] 6.638564 8.493765
[41,] 6.575347 8.478338
[42,] 6.515580 8.446660
[43,] 6.460167 8.401517
[44,] 6.409963 8.346203
[45,] 6.365771 8.284386
[46,] 6.328330 8.219963
[47,] 6.298307 8.156911
[48,] 6.276294 8.099119
[49,] 6.262799 8.050244
[50,] 6.258242 8.013557
[51,] 6.262952 7.991820
[52,] 6.277162 7.987170
[53,] 6.301005 8.001040
[54,] 6.334519 8.034100
[55,] 6.377640 8.086229
[56,] 6.430206 8.156523
[57,] 6.491957 8.243332
[58,] 6.562542 8.344322
[59,] 6.641514 8.456574
[60,] 6.728343 8.576696
[61,] 6.822418 8.700961
[62,] 6.923051 8.825459
[63,] 7.029489 8.946245
[64,] 7.140914 9.059506
[65,] 7.256460 9.161706
[66,] 7.375216 9.249734
[67,] 7.496236 9.321021
[68,] 7.618549 9.373650
[69,] 7.741169 9.406428
[70,] 7.863104 9.418936
[71,] 7.983367 9.411544
[72,] 8.100987 9.385401
[73,] 8.215015 9.342385
[74,] 8.324535 9.285030
[75,] 8.428676 9.216424
[76,] 8.526617 9.140092
[77,] 8.617598 9.059847
[78,] 8.700925 8.979644
[79,] 8.775980 8.903423
[80,] 8.842224 8.834949
[81,] 8.899204 8.777664
[82,] 8.946558 8.734550
[83,] 8.984019 8.708010
[84,] 9.011415 8.699772
[85,] 9.028674 8.710824
[86,] 9.035822 8.741368
[87,] 9.032985 8.790819
[88,] 9.020387 8.857824
[89,] 8.998347 8.940320
[90,] 8.967277 9.035611
[91,] 8.927676 9.140483

$DO_matrix_func.I.vec
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.447757  6.248709
 [3,]  5.891059  6.477948
 [4,]  6.329951  6.689600
 [5,]  6.764475  6.885615
 [6,]  7.194676  7.068012
 [7,]  7.620596  7.238843
 [8,]  8.042278  7.400152
 [9,]  8.459764  7.553956
[10,]  8.873096  7.702224
[11,]  9.282316  7.846854
[12,]  9.687464  7.989661
[13,] 10.088580  8.132368
[14,] 10.485705  8.276594
[15,] 10.878879  8.423850
[16,] 11.268141  8.575533
[17,] 11.653529  8.732926
[18,] 12.035083  8.897194
[19,] 12.412840  9.069379
[20,] 12.786839  9.250404
[21,] 13.157116  9.441065
[22,] 13.523709  9.642026
[23,] 13.886654  9.853820
[24,] 14.245988 10.076834
[25,] 14.601746 10.311310
[26,] 14.953964 10.557327
[27,] 15.302678 10.814798
[28,] 15.647922 11.083453
[29,] 15.989731 11.362832
[30,] 16.328139 11.652268
[31,] 16.663180 11.950882
[32,] 16.994887 12.257569
[33,] 17.323293 12.570995
[34,] 17.648432 12.889590
[35,] 17.970335 13.211548
[36,] 18.289036 13.534837
[37,] 18.604565 13.857206
[38,] 18.916955 14.176206
[39,] 19.226236 14.489217
[40,] 19.532440 14.793476
[41,] 19.835598 15.086130
[42,] 20.135738 15.364273
[43,] 20.432893 15.625009
[44,] 20.727090 15.865507
[45,] 21.018361 16.083072
[46,] 21.306733 16.275205
[47,] 21.592236 16.439674
[48,] 21.874898 16.574568
[49,] 22.154747 16.678363
[50,] 22.431812 16.749961
[51,] 22.706120 16.788733
[52,] 22.977699 16.794541
[53,] 23.246575 16.767749
[54,] 23.512776 16.709220
[55,] 23.776328 16.620299
[56,] 24.037258 16.502782
[57,] 24.295592 16.358870
[58,] 24.551355 16.191118
[59,] 24.804573 16.002372
[60,] 25.055272 15.795703
[61,] 25.303476 15.574336
[62,] 25.549211 15.341583
[63,] 25.792500 15.100775
[64,] 26.033369 14.855205
[65,] 26.271841 14.608067
[66,] 26.507940 14.362414
[67,] 26.741690 14.121121
[68,] 26.973114 13.886852
[69,] 27.202235 13.662044
[70,] 27.429077 13.448894
[71,] 27.653661 13.249356
[72,] 27.876011 13.065142
[73,] 28.096148 12.897730
[74,] 28.314095 12.748375
[75,] 28.529874 12.618127
[76,] 28.743505 12.507843
[77,] 28.955011 12.418206
[78,] 29.164412 12.349741
[79,] 29.371729 12.302832
[80,] 29.576984 12.277734
[81,] 29.780196 12.274585
[82,] 29.981387 12.293417
[83,] 30.180575 12.334160
[84,] 30.377782 12.396646
[85,] 30.573026 12.480611
[86,] 30.766328 12.585690
[87,] 30.957706 12.711414
[88,] 31.147180 12.857201
[89,] 31.334769 13.022345
[90,] 31.520491 13.206006
[91,] 31.704365 13.407198

$DO_matrix_func.I.vecFunc
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136027 5.943682
 [3,] 5.275213 5.873898
 [4,] 5.416614 5.789671
 [5,] 5.559267 5.690691
 [6,] 5.702190 5.577331
 [7,] 5.844393 5.450649
 [8,] 5.984890 5.312337
 [9,] 6.122707 5.164681
[10,] 6.256893 5.010478
[11,] 6.386530 4.852938
[12,] 6.510738 4.695576
[13,] 6.628690 4.542095
[14,] 6.739617 4.396250
[15,] 6.842816 4.261735
[16,] 6.937656 4.142060
[17,] 7.023588 4.040439
[18,] 7.100144 3.959681
[19,] 7.166951 3.902103
[20,] 7.223725 3.869455
[21,] 7.270281 3.862861
[22,] 7.306531 3.882776
[23,] 7.332487 3.928970
[24,] 7.348259 4.000522
[25,] 7.354058 4.095840
[26,] 7.350187 4.212702
[27,] 7.337045 4.348310
[28,] 7.315119 4.499366
[29,] 7.284980 4.662167
[30,] 7.247277 4.832706
[31,] 7.202733 5.006795
[32,] 7.152134 5.180189
[33,] 7.096325 5.348715
[34,] 7.036197 5.508410
[35,] 6.972684 5.655645
[36,] 6.906748 5.787248
[37,] 6.839374 5.900611
[38,] 6.771555 5.993777
[39,] 6.704289 6.065509
[40,] 6.638563 6.115330
[41,] 6.575346 6.143533
[42,] 6.515579 6.151159
[43,] 6.460166 6.139947
[44,] 6.409962 6.112248
[45,] 6.365770 6.070914
[46,] 6.328329 6.019161
[47,] 6.298306 5.960414
[48,] 6.276293 5.898144
[49,] 6.262798 5.835696
[50,] 6.258242 5.776130
[51,] 6.262952 5.722072
[52,] 6.277161 5.675588
[53,] 6.301004 5.638088
[54,] 6.334518 5.610267
[55,] 6.377639 5.592080
[56,] 6.430205 5.582761
[57,] 6.491957 5.580872
[58,] 6.562541 5.584402
[59,] 6.641513 5.590873
[60,] 6.728343 5.597493
[61,] 6.822417 5.601303
[62,] 6.923051 5.599339
[63,] 7.029488 5.588796
[64,] 7.140914 5.567171
[65,] 7.256460 5.532395
[66,] 7.375216 5.482940
[67,] 7.496236 5.417906
[68,] 7.618548 5.337063
[69,] 7.741168 5.240880
[70,] 7.863103 5.130510
[71,] 7.983367 5.007759
[72,] 8.100987 4.875018
[73,] 8.215014 4.735184
[74,] 8.324534 4.591557
[75,] 8.428675 4.447727
[76,] 8.526616 4.307453
[77,] 8.617597 4.174535
[78,] 8.700925 4.052693
[79,] 8.775979 3.945442
[80,] 8.842223 3.855982
[81,] 8.899203 3.787094
[82,] 8.946557 3.741053
[83,] 8.984018 3.719555
[84,] 9.011414 3.723656
[85,] 9.028673 3.753744
[86,] 9.035821 3.809512
[87,] 9.032985 3.889965
[88,] 9.020387 3.993441
[89,] 8.998347 4.117652
[90,] 8.967276 4.259745
[91,] 8.927675 4.416381

$DO_matrix_func.I.list1
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136790 5.933863
 [3,] 5.277845 5.839586
 [4,] 5.421709 5.722890
 [5,] 5.567007 5.589081
 [6,] 5.712452 5.443007
 [7,] 5.856837 5.289061
 [8,] 5.999037 5.131174
 [9,] 6.138011 4.972821
[10,] 6.272796 4.817041
[11,] 6.402510 4.666462
[12,] 6.526350 4.523331
[13,] 6.643587 4.389613
[14,] 6.753561 4.267089
[15,] 6.855682 4.157395
[16,] 6.949428 4.062043
[17,] 7.034343 3.982445
[18,] 7.110039 3.919938
[19,] 7.176193 3.875814
[20,] 7.232550 3.851335
[21,] 7.278916 3.847754
[22,] 7.315165 3.866300
[23,] 7.341255 3.907854
[24,] 7.357244 3.972593
[25,] 7.363293 4.060010
[26,] 7.359664 4.168931
[27,] 7.346718 4.297505
[28,] 7.324916 4.443206
[29,] 7.294816 4.602820
[30,] 7.257073 4.772432
[31,] 7.212439 4.947407
[32,] 7.161758 5.122438
[33,] 7.105925 5.292236
[34,] 7.045852 5.452263
[35,] 6.982461 5.598744
[36,] 6.916686 5.728661
[37,] 6.849472 5.839748
[38,] 6.781775 5.930502
[39,] 6.714560 6.000196
[40,] 6.648807 6.048901
[41,] 6.585503 6.077502
[42,] 6.525642 6.087681
[43,] 6.470184 6.081577
[44,] 6.420009 6.061367
[45,] 6.375914 6.029286
[46,] 6.338614 5.987631
[47,] 6.308747 5.938770
[48,] 6.286868 5.885133
[49,] 6.273456 5.829218
[50,] 6.268908 5.773568
[51,] 6.273549 5.720762
[52,] 6.287622 5.673349
[53,] 6.311283 5.633495
[54,] 6.344588 5.602539
[55,] 6.387488 5.581017
[56,] 6.439840 5.568680
[57,] 6.501397 5.564524
[58,] 6.571817 5.566828
[59,] 6.650661 5.573198
[60,] 6.737393 5.580613
[61,] 6.831383 5.585475
[62,] 6.931909 5.583721
[63,] 7.038185 5.571567
[64,] 7.149394 5.546227
[65,] 7.264684 5.505900
[66,] 7.383176 5.449712
[67,] 7.503956 5.377635
[68,] 7.626082 5.290412
[69,] 7.748582 5.189486
[70,] 7.870453 5.076925
[71,] 7.990664 4.955362
[72,] 8.108159 4.827897
[73,] 8.221908 4.697747
[74,] 8.330967 4.567805
[75,] 8.434473 4.440703
[76,] 8.531652 4.318790
[77,] 8.621810 4.204173
[78,] 8.704337 4.098739
[79,] 8.778704 4.004182
[80,] 8.844465 3.922034
[81,] 8.901253 3.853687
[82,] 8.948780 3.800434
[83,] 8.986825 3.763545
[84,] 9.015224 3.744379
[85,] 9.033864 3.744383
[86,] 9.042691 3.765112
[87,] 9.041700 3.808234
[88,] 9.030942 3.875542
[89,] 9.010518 3.968951
[90,] 8.980582 4.090502
[91,] 8.941339 4.242359

$DO_matrix_func.I.list2
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136790 5.933863
 [3,] 5.277845 5.839586
 [4,] 5.421709 5.722890
 [5,] 5.567007 5.589081
 [6,] 5.712452 5.443007
 [7,] 5.856837 5.289061
 [8,] 5.999037 5.131174
 [9,] 6.138011 4.972821
[10,] 6.272796 4.817041
[11,] 6.402510 4.666462
[12,] 6.526350 4.523331
[13,] 6.643587 4.389613
[14,] 6.753561 4.267089
[15,] 6.855682 4.157395
[16,] 6.949428 4.062043
[17,] 7.034343 3.982445
[18,] 7.110039 3.919938
[19,] 7.176193 3.875814
[20,] 7.232550 3.851335
[21,] 7.278916 3.847754
[22,] 7.315165 3.866300
[23,] 7.341255 3.907854
[24,] 7.357244 3.972593
[25,] 7.363293 4.060010
[26,] 7.359664 4.168931
[27,] 7.346718 4.297505
[28,] 7.324916 4.443206
[29,] 7.294816 4.602820
[30,] 7.257073 4.772432
[31,] 7.212439 4.947407
[32,] 7.161758 5.122438
[33,] 7.105925 5.292236
[34,] 7.045852 5.452263
[35,] 6.982461 5.598744
[36,] 6.916686 5.728661
[37,] 6.849472 5.839748
[38,] 6.781775 5.930502
[39,] 6.714560 6.000196
[40,] 6.648807 6.048901
[41,] 6.585503 6.077502
[42,] 6.525642 6.087681
[43,] 6.470184 6.081577
[44,] 6.420009 6.061367
[45,] 6.375914 6.029286
[46,] 6.338614 5.987631
[47,] 6.308747 5.938770
[48,] 6.286868 5.885133
[49,] 6.273456 5.829218
[50,] 6.268908 5.773568
[51,] 6.273549 5.720762
[52,] 6.287622 5.673349
[53,] 6.311283 5.633495
[54,] 6.344588 5.602539
[55,] 6.387488 5.581017
[56,] 6.439840 5.568680
[57,] 6.501397 5.564524
[58,] 6.571817 5.566828
[59,] 6.650661 5.573198
[60,] 6.737393 5.580613
[61,] 6.831383 5.585475
[62,] 6.931909 5.583721
[63,] 7.038185 5.571567
[64,] 7.149394 5.546227
[65,] 7.264684 5.505900
[66,] 7.383176 5.449712
[67,] 7.503956 5.377635
[68,] 7.626082 5.290412
[69,] 7.748582 5.189486
[70,] 7.870453 5.076925
[71,] 7.990664 4.955362
[72,] 8.108159 4.827897
[73,] 8.221908 4.697747
[74,] 8.330967 4.567805
[75,] 8.434473 4.440703
[76,] 8.531652 4.318790
[77,] 8.621810 4.204173
[78,] 8.704337 4.098739
[79,] 8.778704 4.004182
[80,] 8.844465 3.922034
[81,] 8.901253 3.853687
[82,] 8.948780 3.800434
[83,] 8.986825 3.763545
[84,] 9.015224 3.744379
[85,] 9.033864 3.744383
[86,] 9.042691 3.765112
[87,] 9.041700 3.808234
[88,] 9.030942 3.875542
[89,] 9.010518 3.968951
[90,] 8.980582 4.090502
[91,] 8.941339 4.242359

$DO_matrix_func.I.timeMap
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.133817 5.940182
 [3,] 5.266976 5.862300
 [4,] 5.399486 5.768562
 [5,] 5.531353 5.661051
 [6,] 5.662582 5.541733
 [7,] 5.793180 5.412427
 [8,] 5.923154 5.274784
 [9,] 6.052509 5.130278
[10,] 6.181252 4.980199
[11,] 6.309388 4.825649
[12,] 6.432757 4.678062
[13,] 6.547257 4.547912
[14,] 6.652974 4.434718
[15,] 6.749995 4.337965
[16,] 6.838408 4.257131
[17,] 6.918297 4.191688
[18,] 6.989748 4.141118
[19,] 7.052845 4.104913
[20,] 7.107670 4.082583
[21,] 7.154304 4.073661
[22,] 7.192187 4.081574
[23,] 7.220758 4.109600
[24,] 7.240109 4.157055
[25,] 7.250334 4.223311
[26,] 7.251523 4.307790
[27,] 7.243766 4.409946
[28,] 7.227151 4.529247
[29,] 7.201767 4.665162
[30,] 7.167701 4.817143
[31,] 7.125039 4.984607
[32,] 7.077336 5.153012
[33,] 7.028096 5.308167
[34,] 6.977335 5.449827
[35,] 6.925068 5.577589
[36,] 6.871309 5.690918
[37,] 6.816073 5.789135
[38,] 6.759377 5.871493
[39,] 6.701233 5.937178
[40,] 6.641657 5.985346
[41,] 6.580662 6.015152
[42,] 6.522657 6.033444
[43,] 6.471990 6.046911
[44,] 6.428589 6.054553
[45,] 6.392380 6.055463
[46,] 6.363293 6.048839
[47,] 6.341257 6.034002
[48,] 6.326201 6.010417
[49,] 6.318056 5.977701
[50,] 6.316754 5.935633
[51,] 6.322226 5.884168
[52,] 6.335684 5.830932
[53,] 6.358327 5.783340
[54,] 6.390061 5.741220
[55,] 6.430796 5.704487
[56,] 6.480444 5.673140
[57,] 6.538915 5.647259
[58,] 6.606122 5.626991
[59,] 6.681977 5.612546
[60,] 6.766395 5.604189
[61,] 6.859290 5.602230
[62,] 6.957568 5.593252
[63,] 7.058175 5.564872
[64,] 7.161089 5.519027
[65,] 7.266286 5.457660
[66,] 7.373743 5.382686
[67,] 7.483438 5.295954
[68,] 7.595349 5.199228
[69,] 7.709453 5.094156
[70,] 7.825729 4.982258
[71,] 7.944155 4.864911
[72,] 8.060177 4.747333
[73,] 8.169301 4.634282
[74,] 8.271596 4.526241
[75,] 8.367129 4.423585
[76,] 8.455968 4.326587
[77,] 8.538179 4.235427
[78,] 8.613829 4.150203
[79,] 8.682983 4.070936
[80,] 8.745704 3.997582
[81,] 8.802057 3.930040
[82,] 8.850219 3.878612
[83,] 8.888387 3.852963
[84,] 8.916662 3.852058
[85,] 8.935142 3.874970
[86,] 8.943924 3.920877
[87,] 8.943105 3.989051
[88,] 8.932780 4.078837
[89,] 8.913045 4.189647
[90,] 8.883992 4.320938
[91,]       NA       NA

$DO_matrix_func.I.ConstInFluxes
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.447757  6.248709
 [3,]  5.891059  6.477948
 [4,]  6.329951  6.689600
 [5,]  6.764475  6.885615
 [6,]  7.194676  7.068012
 [7,]  7.620596  7.238843
 [8,]  8.042278  7.400152
 [9,]  8.459764  7.553956
[10,]  8.873096  7.702224
[11,]  9.282316  7.846854
[12,]  9.687464  7.989661
[13,] 10.088580  8.132368
[14,] 10.485705  8.276594
[15,] 10.878879  8.423850
[16,] 11.268141  8.575533
[17,] 11.653529  8.732926
[18,] 12.035083  8.897194
[19,] 12.412840  9.069379
[20,] 12.786839  9.250404
[21,] 13.157116  9.441065
[22,] 13.523709  9.642026
[23,] 13.886654  9.853820
[24,] 14.245988 10.076834
[25,] 14.601746 10.311310
[26,] 14.953964 10.557327
[27,] 15.302678 10.814798
[28,] 15.647922 11.083453
[29,] 15.989731 11.362832
[30,] 16.328139 11.652268
[31,] 16.663180 11.950882
[32,] 16.994887 12.257569
[33,] 17.323293 12.570995
[34,] 17.648432 12.889590
[35,] 17.970335 13.211548
[36,] 18.289036 13.534837
[37,] 18.604565 13.857206
[38,] 18.916955 14.176206
[39,] 19.226236 14.489217
[40,] 19.532440 14.793476
[41,] 19.835598 15.086130
[42,] 20.135738 15.364273
[43,] 20.432893 15.625009
[44,] 20.727090 15.865507
[45,] 21.018361 16.083072
[46,] 21.306733 16.275205
[47,] 21.592236 16.439674
[48,] 21.874898 16.574568
[49,] 22.154747 16.678363
[50,] 22.431812 16.749961
[51,] 22.706120 16.788733
[52,] 22.977699 16.794541
[53,] 23.246575 16.767749
[54,] 23.512776 16.709220
[55,] 23.776328 16.620299
[56,] 24.037258 16.502782
[57,] 24.295592 16.358870
[58,] 24.551355 16.191118
[59,] 24.804573 16.002372
[60,] 25.055272 15.795703
[61,] 25.303476 15.574336
[62,] 25.549211 15.341583
[63,] 25.792500 15.100775
[64,] 26.033369 14.855205
[65,] 26.271841 14.608067
[66,] 26.507940 14.362414
[67,] 26.741690 14.121121
[68,] 26.973114 13.886852
[69,] 27.202235 13.662044
[70,] 27.429077 13.448894
[71,] 27.653661 13.249356
[72,] 27.876011 13.065142
[73,] 28.096148 12.897730
[74,] 28.314095 12.748375
[75,] 28.529874 12.618127
[76,] 28.743505 12.507843
[77,] 28.955011 12.418206
[78,] 29.164412 12.349741
[79,] 29.371729 12.302832
[80,] 29.576984 12.277734
[81,] 29.780196 12.274585
[82,] 29.981387 12.293417
[83,] 30.180575 12.334160
[84,] 30.377782 12.396646
[85,] 30.573026 12.480611
[86,] 30.766328 12.585690
[87,] 30.957706 12.711414
[88,] 31.147180 12.857201
[89,] 31.334769 13.022345
[90,] 31.520491 13.206006
[91,] 31.704365 13.407198

$DO_matrix_func.I.UnBoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136027 5.943682
 [3,] 5.275213 5.873898
 [4,] 5.416614 5.789671
 [5,] 5.559267 5.690691
 [6,] 5.702190 5.577331
 [7,] 5.844393 5.450649
 [8,] 5.984890 5.312337
 [9,] 6.122707 5.164681
[10,] 6.256893 5.010478
[11,] 6.386530 4.852938
[12,] 6.510738 4.695576
[13,] 6.628690 4.542095
[14,] 6.739617 4.396250
[15,] 6.842816 4.261735
[16,] 6.937656 4.142060
[17,] 7.023588 4.040439
[18,] 7.100144 3.959681
[19,] 7.166951 3.902103
[20,] 7.223725 3.869455
[21,] 7.270281 3.862861
[22,] 7.306531 3.882776
[23,] 7.332487 3.928970
[24,] 7.348259 4.000522
[25,] 7.354058 4.095840
[26,] 7.350187 4.212702
[27,] 7.337045 4.348310
[28,] 7.315119 4.499366
[29,] 7.284980 4.662167
[30,] 7.247277 4.832706
[31,] 7.202733 5.006795
[32,] 7.152134 5.180189
[33,] 7.096325 5.348715
[34,] 7.036197 5.508410
[35,] 6.972684 5.655645
[36,] 6.906748 5.787248
[37,] 6.839374 5.900611
[38,] 6.771555 5.993777
[39,] 6.704289 6.065509
[40,] 6.638563 6.115330
[41,] 6.575346 6.143533
[42,] 6.515579 6.151159
[43,] 6.460166 6.139947
[44,] 6.409962 6.112248
[45,] 6.365770 6.070914
[46,] 6.328329 6.019161
[47,] 6.298306 5.960414
[48,] 6.276293 5.898144
[49,] 6.262798 5.835696
[50,] 6.258242 5.776130
[51,] 6.262952 5.722072
[52,] 6.277161 5.675588
[53,] 6.301004 5.638088
[54,] 6.334518 5.610267
[55,] 6.377639 5.592080
[56,] 6.430205 5.582761
[57,] 6.491957 5.580872
[58,] 6.562541 5.584402
[59,] 6.641513 5.590873
[60,] 6.728343 5.597493
[61,] 6.822417 5.601303
[62,] 6.923051 5.599339
[63,] 7.029488 5.588796
[64,] 7.140914 5.567171
[65,] 7.256460 5.532395
[66,] 7.375216 5.482940
[67,] 7.496236 5.417906
[68,] 7.618548 5.337063
[69,] 7.741168 5.240880
[70,] 7.863103 5.130510
[71,] 7.983367 5.007759
[72,] 8.100987 4.875018
[73,] 8.215014 4.735184
[74,] 8.324534 4.591557
[75,] 8.428675 4.447727
[76,] 8.526616 4.307453
[77,] 8.617597 4.174535
[78,] 8.700925 4.052693
[79,] 8.775979 3.945442
[80,] 8.842223 3.855982
[81,] 8.899203 3.787094
[82,] 8.946557 3.741053
[83,] 8.984018 3.719555
[84,] 9.011414 3.723656
[85,] 9.028673 3.753744
[86,] 9.035821 3.809512
[87,] 9.032985 3.889965
[88,] 9.020387 3.993441
[89,] 8.998347 4.117652
[90,] 8.967276 4.259745
[91,] 8.927675 4.416381

$DO_matrix_func.I.BoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136027 5.943682
 [3,] 5.275213 5.873898
 [4,] 5.416614 5.789671
 [5,] 5.559267 5.690691
 [6,] 5.702190 5.577331
 [7,] 5.844393 5.450649
 [8,] 5.984890 5.312337
 [9,] 6.122707 5.164681
[10,] 6.256893 5.010478
[11,] 6.386530 4.852938
[12,] 6.510738 4.695576
[13,] 6.628690 4.542095
[14,] 6.739617 4.396250
[15,] 6.842816 4.261735
[16,] 6.937656 4.142060
[17,] 7.023588 4.040439
[18,] 7.100144 3.959681
[19,] 7.166951 3.902103
[20,] 7.223725 3.869455
[21,] 7.270281 3.862861
[22,] 7.306531 3.882776
[23,] 7.332487 3.928970
[24,] 7.348259 4.000522
[25,] 7.354058 4.095840
[26,] 7.350187 4.212702
[27,] 7.337045 4.348310
[28,] 7.315119 4.499366
[29,] 7.284980 4.662167
[30,] 7.247277 4.832706
[31,] 7.202733 5.006795
[32,] 7.152134 5.180189
[33,] 7.096325 5.348715
[34,] 7.036197 5.508410
[35,] 6.972684 5.655645
[36,] 6.906748 5.787248
[37,] 6.839374 5.900611
[38,] 6.771555 5.993777
[39,] 6.704289 6.065509
[40,] 6.638563 6.115330
[41,] 6.575346 6.143533
[42,] 6.515579 6.151159
[43,] 6.460166 6.139947
[44,] 6.409962 6.112248
[45,] 6.365770 6.070914
[46,] 6.328329 6.019161
[47,] 6.298306 5.960414
[48,] 6.276293 5.898144
[49,] 6.262798 5.835696
[50,] 6.258242 5.776130
[51,] 6.262952 5.722072
[52,] 6.277161 5.675588
[53,] 6.301004 5.638088
[54,] 6.334518 5.610267
[55,] 6.377639 5.592080
[56,] 6.430205 5.582761
[57,] 6.491957 5.580872
[58,] 6.562541 5.584402
[59,] 6.641513 5.590873
[60,] 6.728343 5.597493
[61,] 6.822417 5.601303
[62,] 6.923051 5.599339
[63,] 7.029488 5.588796
[64,] 7.140914 5.567171
[65,] 7.256460 5.532395
[66,] 7.375216 5.482940
[67,] 7.496236 5.417906
[68,] 7.618548 5.337063
[69,] 7.741168 5.240880
[70,] 7.863103 5.130510
[71,] 7.983367 5.007759
[72,] 8.100987 4.875018
[73,] 8.215014 4.735184
[74,] 8.324534 4.591557
[75,] 8.428675 4.447727
[76,] 8.526616 4.307453
[77,] 8.617597 4.174535
[78,] 8.700925 4.052693
[79,] 8.775979 3.945442
[80,] 8.842223 3.855982
[81,] 8.899203 3.787094
[82,] 8.946557 3.741053
[83,] 8.984018 3.719555
[84,] 9.011414 3.723656
[85,] 9.028673 3.753744
[86,] 9.035821 3.809512
[87,] 9.032985 3.889965
[88,] 9.020387 3.993441
[89,] 8.998347 4.117652
[90,] 8.967276 4.259745
[91,] 8.927675 4.416381

$DO_list_times_Array.I.vec
           [,1]        [,2]
 [1,]  5.000000  6.00000000
 [2,]  5.221602  6.04914272
 [3,]  5.431388  6.07137537
 [4,]  5.631446  6.07041405
 [5,]  5.823864  6.05004699
 [6,]  6.010695  6.01406220
 [7,]  6.193918  5.96618685
 [8,]  6.375406  5.91003589
 [9,]  6.556910  5.84907734
[10,]  6.740049  5.78661285
[11,]  6.926295  5.72575549
[12,]  7.116983  5.66943950
[13,]  7.313321  5.62042422
[14,]  7.516380  5.58128586
[15,]  7.727123  5.55444604
[16,]  7.946417  5.54218201
[17,]  8.175037  5.54663398
[18,]  8.413687  5.56981610
[19,]  8.663007  5.61362399
[20,]  8.923584  5.67983676
[21,]  9.195960  5.77011462
[22,]  9.480635  5.88599165
[23,]  9.778067  6.02886209
[24,] 10.088668  6.19996041
[25,] 10.412797  6.40033423
[26,] 10.750745  6.63081090
[27,] 11.102720  6.89195703
[28,] 11.468822  7.18403134
[29,] 11.849019  7.50693140
[30,] 12.243111  7.86013534
[31,] 12.650702  8.24263972
[32,] 13.071158  8.65289574
[33,] 13.503570  9.08874617
[34,] 13.946724  9.54736642
[35,] 14.399059 10.02521340
[36,] 14.858651 10.51798697
[37,] 15.323184 11.02060844
[38,] 15.789957 11.52722156
[39,] 16.255882 12.03122086
[40,] 16.717518 12.52531141
[41,] 17.171114 13.00160367
[42,] 17.612680 13.45174503
[43,] 18.038066 13.86708798
[44,] 18.443078 14.23889215
[45,] 18.823595 14.55855496
[46,] 19.175706 14.81786283
[47,] 19.495848 15.00925242
[48,] 19.780949 15.12606960
[49,] 20.028558 15.16281213
[50,] 20.236954 15.11534231
[51,] 20.405245 14.98105637
[52,] 20.533421 14.75899952
[53,] 20.622379 14.44991874
[54,] 20.673914 14.05624911
[55,] 20.690668 13.58203383
[56,] 20.676044 13.03278264
[57,] 20.634093 12.41527709
[58,] 20.569377 11.73733473
[59,] 20.486812 11.00754624
[60,] 20.391514 10.23500073
[61,] 20.288638  9.42901412
[62,] 20.183227  8.59887425
[63,] 20.080084  7.75361391
[64,] 19.983658  6.90182026
[65,] 19.897955  6.05148572
[66,] 19.826478  5.20990231
[67,] 19.772189  4.38359852
[68,] 19.737494  3.57831523
[69,] 19.724251  2.79901565
[70,] 19.733796  2.04992288
[71,] 19.766977  1.33457832
[72,] 19.824208  0.65591415
[73,] 19.905521  0.01633357
[74,] 20.010628 -0.58220677
[75,] 20.138976 -1.13811665
[76,] 20.289813 -1.65009821
[77,] 20.462239 -2.11708035
[78,] 20.655261 -2.53816338
[79,] 20.867838 -2.91257494
[80,] 21.098927 -3.23963728
[81,] 21.347514 -3.51874602
[82,] 21.612646 -3.74935976
[83,] 21.893452 -3.93099994
[84,] 22.189163 -4.06326030
[85,] 22.499116 -4.14582512
[86,] 22.822762 -4.17849566
[87,] 23.159657 -4.16122408
[88,] 23.509453 -4.09415440
[89,] 23.871876 -3.97766991
[90,] 24.246705 -3.81244649
[91,] 24.633735 -3.59951090

$DO_list_times_Array.I.vecFunc
          [,1]      [,2]
 [1,] 5.000000 6.0000000
 [2,] 4.915840 5.7507398
 [3,] 4.839222 5.4932484
 [4,] 4.770933 5.2273834
 [5,] 4.711609 4.9534308
 [6,] 4.661737 4.6721472
 [7,] 4.621628 4.3847976
 [8,] 4.591403 4.0931507
 [9,] 4.570979 3.7994688
[10,] 4.560064 3.5064721
[11,] 4.558155 3.2172790
[12,] 4.564551 2.9353292
[13,] 4.578373 2.6642916
[14,] 4.598585 2.4079602
[15,] 4.624029 2.1701442
[16,] 4.653469 1.9545441
[17,] 4.685628 1.7646372
[18,] 4.719235 1.6035666
[19,] 4.753071 1.4740323
[20,] 4.786008 1.3781945
[21,] 4.817047 1.3175930
[22,] 4.845352 1.2930834
[23,] 4.870264 1.3047926
[24,] 4.891323 1.3520959
[25,] 4.908261 1.4336169
[26,] 4.921004 1.5472496
[27,] 4.929649 1.6902040
[28,] 4.934443 1.8590715
[29,] 4.935752 2.0499110
[30,] 4.934026 2.2583513
[31,] 4.929760 2.4797075
[32,] 4.923464 2.7091081
[33,] 4.915622 2.9416283
[34,] 4.906667 3.1724262
[35,] 4.896958 3.3968767
[36,] 4.886764 3.6106993
[37,] 4.876258 3.8100754
[38,] 4.865517 3.9917497
[39,] 4.854534 4.1531138
[40,] 4.843229 4.2922662
[41,] 4.831471 4.4080471
[42,] 4.819100 4.5000452
[43,] 4.805950 4.5685751
[44,] 4.791870 4.6146262
[45,] 4.776741 4.6397834
[46,] 4.760490 4.6461224
[47,] 4.743098 4.6360843
[48,] 4.724600 4.6123356
[49,] 4.705083 4.5776185
[50,] 4.684680 4.5346015
[51,] 4.663555 4.4857363
[52,] 4.641898 4.4331301
[53,] 4.619915 4.3784403
[54,] 4.597816 4.3227969
[55,] 4.575819 4.2667572
[56,] 4.554146 4.2102961
[57,] 4.533027 4.1528298
[58,] 4.512713 4.0932729
[59,] 4.493483 4.0301246
[60,] 4.475652 3.9615768
[61,] 4.459579 3.8856398
[62,] 4.445675 3.8002767
[63,] 4.434395 3.7035394
[64,] 4.426235 3.5937002
[65,] 4.421718 3.4693711
[66,] 4.421369 3.3296074
[67,] 4.425693 3.1739907
[68,] 4.435147 3.0026879
[69,] 4.450105 2.8164867
[70,] 4.470832 2.6168044
[71,] 4.497454 2.4056732
[72,] 4.529939 2.1857009
[73,] 4.568079 1.9600109
[74,] 4.611486 1.7321624
[75,] 4.659594 1.5060554
[76,] 4.711671 1.2858217
[77,] 4.766844 1.0757073
[78,] 4.824121 0.8799490
[79,] 4.882438 0.7026484
[80,] 4.940688 0.5476492
[81,] 4.997774 0.4184188
[82,] 5.052649 0.3179401
[83,] 5.104354 0.2486165
[84,] 5.152057 0.2121916
[85,] 5.195084 0.2096890
[86,] 5.232936 0.2413717
[87,] 5.265302 0.3067242
[88,] 5.292065 0.4044571
[89,] 5.313289 0.5325360
[90,] 5.329205 0.6882308
[91,] 5.340186 0.8681888

$DO_list_times_Array.I.list1
          [,1]       [,2]
 [1,] 5.000000 6.00000000
 [2,] 4.916690 5.74084623
 [3,] 4.842571 5.45841634
 [4,] 4.778249 5.15900190
 [5,] 4.724130 4.84836513
 [6,] 4.680408 4.53170523
 [7,] 4.647054 4.21367100
 [8,] 4.623834 3.89838141
 [9,] 4.610316 3.58945349
[10,] 4.605892 3.29003948
[11,] 4.609806 3.00287082
[12,] 4.621184 2.73030998
[13,] 4.639053 2.47444959
[14,] 4.662372 2.23723979
[15,] 4.690052 2.02050994
[16,] 4.720985 1.82600119
[17,] 4.754066 1.65538957
[18,] 4.788216 1.51030601
[19,] 4.822407 1.39235272
[20,] 4.855675 1.30311380
[21,] 4.887140 1.24416513
[22,] 4.916022 1.21704811
[23,] 4.941668 1.22292234
[24,] 4.963594 1.26222056
[25,] 4.981488 1.33462424
[26,] 4.995216 1.43906045
[27,] 5.004812 1.57369199
[28,] 5.010467 1.73590083
[29,] 5.012504 1.92226547
[30,] 5.011359 2.12853756
[31,] 5.007545 2.34961059
[32,] 5.001627 2.57956137
[33,] 4.994152 2.81235437
[34,] 4.985585 3.04254703
[35,] 4.976288 3.26534202
[36,] 4.966515 3.47658676
[37,] 4.956410 3.67278464
[38,] 4.946024 3.85111845
[39,] 4.935330 4.00948389
[40,] 4.924250 4.14652764
[41,] 4.912684 4.26169727
[42,] 4.900535 4.35524054
[43,] 4.887700 4.42790622
[44,] 4.874048 4.48054065
[45,] 4.859450 4.51413845
[46,] 4.843797 4.52987081
[47,] 4.827025 4.52911573
[48,] 4.809121 4.51348349
[49,] 4.790139 4.48483189
[50,] 4.770198 4.44527171
[51,] 4.749476 4.39716213
[52,] 4.728202 4.34305137
[53,] 4.706631 4.28532661
[54,] 4.685019 4.22574158
[55,] 4.663617 4.16542830
[56,] 4.642674 4.10488014
[57,] 4.622436 4.04395224
[58,] 4.603153 3.98186624
[59,] 4.585086 3.91721880
[60,] 4.568520 3.84799276
[61,] 4.553779 3.77156992
[62,] 4.541239 3.68482041
[63,] 4.531359 3.58478577
[64,] 4.524690 3.46943542
[65,] 4.521827 3.33762326
[66,] 4.523375 3.18903196
[67,] 4.529894 3.02410382
[68,] 4.541859 2.84397707
[69,] 4.559615 2.65042948
[70,] 4.583337 2.44582532
[71,] 4.612999 2.23307767
[72,] 4.648355 2.01558851
[73,] 4.688977 1.79687307
[74,] 4.734313 1.58020899
[75,] 4.783707 1.36862346
[76,] 4.836417 1.16491390
[77,] 4.891632 0.97167128
[78,] 4.948502 0.79130234
[79,] 5.006152 0.62605020
[80,] 5.063708 0.47801262
[81,] 5.120320 0.34916003
[82,] 5.175180 0.24135704
[83,] 5.227530 0.15643328
[84,] 5.276663 0.09628471
[85,] 5.321942 0.06286227
[86,] 5.362803 0.05818846
[87,] 5.398770 0.08435541
[88,] 5.429458 0.14352760
[89,] 5.454580 0.23794190
[90,] 5.473943 0.36990606
[91,] 5.487452 0.54179525

$DO_list_times_Array.I.list2
          [,1]       [,2]
 [1,] 5.000000 6.00000000
 [2,] 4.916690 5.74084623
 [3,] 4.842571 5.45841634
 [4,] 4.778249 5.15900190
 [5,] 4.724130 4.84836513
 [6,] 4.680408 4.53170523
 [7,] 4.647054 4.21367100
 [8,] 4.623834 3.89838141
 [9,] 4.610316 3.58945349
[10,] 4.605892 3.29003948
[11,] 4.609806 3.00287082
[12,] 4.621184 2.73030998
[13,] 4.639053 2.47444959
[14,] 4.662372 2.23723979
[15,] 4.690052 2.02050994
[16,] 4.720985 1.82600119
[17,] 4.754066 1.65538957
[18,] 4.788216 1.51030601
[19,] 4.822407 1.39235272
[20,] 4.855675 1.30311380
[21,] 4.887140 1.24416513
[22,] 4.916022 1.21704811
[23,] 4.941668 1.22292234
[24,] 4.963594 1.26222056
[25,] 4.981488 1.33462424
[26,] 4.995216 1.43906045
[27,] 5.004812 1.57369199
[28,] 5.010467 1.73590083
[29,] 5.012504 1.92226547
[30,] 5.011359 2.12853756
[31,] 5.007545 2.34961059
[32,] 5.001627 2.57956137
[33,] 4.994152 2.81235437
[34,] 4.985585 3.04254703
[35,] 4.976288 3.26534202
[36,] 4.966515 3.47658676
[37,] 4.956410 3.67278464
[38,] 4.946024 3.85111845
[39,] 4.935330 4.00948389
[40,] 4.924250 4.14652764
[41,] 4.912684 4.26169727
[42,] 4.900535 4.35524054
[43,] 4.887700 4.42790622
[44,] 4.874048 4.48054065
[45,] 4.859450 4.51413845
[46,] 4.843797 4.52987081
[47,] 4.827025 4.52911573
[48,] 4.809121 4.51348349
[49,] 4.790139 4.48483189
[50,] 4.770198 4.44527171
[51,] 4.749476 4.39716213
[52,] 4.728202 4.34305137
[53,] 4.706631 4.28532661
[54,] 4.685019 4.22574158
[55,] 4.663617 4.16542830
[56,] 4.642674 4.10488014
[57,] 4.622436 4.04395224
[58,] 4.603153 3.98186624
[59,] 4.585086 3.91721880
[60,] 4.568520 3.84799276
[61,] 4.553779 3.77156992
[62,] 4.541239 3.68482041
[63,] 4.531359 3.58478577
[64,] 4.524690 3.46943542
[65,] 4.521827 3.33762326
[66,] 4.523375 3.18903196
[67,] 4.529894 3.02410382
[68,] 4.541859 2.84397707
[69,] 4.559615 2.65042948
[70,] 4.583337 2.44582532
[71,] 4.612999 2.23307767
[72,] 4.648355 2.01558851
[73,] 4.688977 1.79687307
[74,] 4.734313 1.58020899
[75,] 4.783707 1.36862346
[76,] 4.836417 1.16491390
[77,] 4.891632 0.97167128
[78,] 4.948502 0.79130234
[79,] 5.006152 0.62605020
[80,] 5.063708 0.47801262
[81,] 5.120320 0.34916003
[82,] 5.175180 0.24135704
[83,] 5.227530 0.15643328
[84,] 5.276663 0.09628471
[85,] 5.321942 0.06286227
[86,] 5.362803 0.05818846
[87,] 5.398770 0.08435541
[88,] 5.429458 0.14352760
[89,] 5.454580 0.23794190
[90,] 5.473943 0.36990606
[91,] 5.487452 0.54179525

$DO_list_times_Array.I.timeMap
          [,1]      [,2]
 [1,] 5.000000 6.0000000
 [2,] 4.913664 5.7472578
 [3,] 4.831290 5.4818434
 [4,] 4.754720 5.2069200
 [5,] 4.685585 4.9252906
 [6,] 4.625301 4.6393901
 [7,] 4.575060 4.3512751
 [8,] 4.535836 4.0626495
 [9,] 4.508391 3.7748777
[10,] 4.493289 3.4890143
[11,] 4.490912 3.2058434
[12,] 4.497219 2.9365597
[13,] 4.507734 2.6919163
[14,] 4.522006 2.4717872
[15,] 4.539540 2.2759682
[16,] 4.559813 2.1041998
[17,] 4.582294 1.9561892
[18,] 4.606459 1.8316229
[19,] 4.631801 1.7301736
[20,] 4.657841 1.6515040
[21,] 4.684131 1.5952713
[22,] 4.709595 1.5650427
[23,] 4.733120 1.5642870
[24,] 4.754289 1.5925016
[25,] 4.772749 1.6491838
[26,] 4.788199 1.7338158
[27,] 4.800382 1.8458472
[28,] 4.809067 1.9846777
[29,] 4.814037 2.1496357
[30,] 4.815068 2.3399603
[31,] 4.811910 2.5547781
[32,] 4.807764 2.7791082
[33,] 4.805817 2.9979075
[34,] 4.805662 3.2099532
[35,] 4.806754 3.4138148
[36,] 4.808421 3.6078611
[37,] 4.809863 3.7902772
[38,] 4.810172 3.9590880
[39,] 4.808345 4.1121911
[40,] 4.803312 4.2473965
[41,] 4.793960 4.3624770
[42,] 4.783568 4.4629053
[43,] 4.775399 4.5541373
[44,] 4.768330 4.6339801
[45,] 4.761290 4.7003569
[46,] 4.753290 4.7513603
[47,] 4.743461 4.7853025
[48,] 4.731072 4.8007573
[49,] 4.715562 4.7966066
[50,] 4.696562 4.7720759
[51,] 4.673911 4.7267634
[52,] 4.648913 4.6681819
[53,] 4.622916 4.6039577
[54,] 4.596096 4.5343331
[55,] 4.568764 4.4598070
[56,] 4.541356 4.3811196
[57,] 4.514414 4.2992110
[58,] 4.488559 4.2151819
[59,] 4.464474 4.1302609
[60,] 4.442884 4.0457673
[61,] 4.424534 3.9630682
[62,] 4.407282 3.8697329
[63,] 4.389565 3.7542950
[64,] 4.372967 3.6194803
[65,] 4.359033 3.4679549
[66,] 4.349231 3.3022552
[67,] 4.344923 3.1247394
[68,] 4.347348 2.9375670
[69,] 4.357610 2.7426813
[70,] 4.376659 2.5417899
[71,] 4.405298 2.3363847
[72,] 4.439630 2.1318565
[73,] 4.475576 1.9335311
[74,] 4.513453 1.7425113
[75,] 4.553463 1.5597201
[76,] 4.595700 1.3859213
[77,] 4.640168 1.2217375
[78,] 4.686796 1.0676719
[79,] 4.735452 0.9241180
[80,] 4.785953 0.7913728
[81,] 4.838084 0.6696497
[82,] 4.889635 0.5696310
[83,] 4.938158 0.5016591
[84,] 4.983086 0.4653713
[85,] 5.023946 0.4604466
[86,] 5.060348 0.4865826
[87,] 5.091980 0.5434833
[88,] 5.118601 0.6308431
[89,] 5.140029 0.7483305
[90,] 5.156130 0.8955709
[91,]       NA        NA

$DO_list_times_Array.I.ConstInFluxes
           [,1]        [,2]
 [1,]  5.000000  6.00000000
 [2,]  5.221602  6.04914272
 [3,]  5.431388  6.07137537
 [4,]  5.631446  6.07041405
 [5,]  5.823864  6.05004699
 [6,]  6.010695  6.01406220
 [7,]  6.193918  5.96618685
 [8,]  6.375406  5.91003589
 [9,]  6.556910  5.84907734
[10,]  6.740049  5.78661285
[11,]  6.926295  5.72575549
[12,]  7.116983  5.66943950
[13,]  7.313321  5.62042422
[14,]  7.516380  5.58128586
[15,]  7.727123  5.55444604
[16,]  7.946417  5.54218201
[17,]  8.175037  5.54663398
[18,]  8.413687  5.56981610
[19,]  8.663007  5.61362399
[20,]  8.923584  5.67983676
[21,]  9.195960  5.77011462
[22,]  9.480635  5.88599165
[23,]  9.778067  6.02886209
[24,] 10.088668  6.19996041
[25,] 10.412797  6.40033423
[26,] 10.750745  6.63081090
[27,] 11.102720  6.89195703
[28,] 11.468822  7.18403134
[29,] 11.849019  7.50693140
[30,] 12.243111  7.86013534
[31,] 12.650702  8.24263972
[32,] 13.071158  8.65289574
[33,] 13.503570  9.08874617
[34,] 13.946724  9.54736642
[35,] 14.399059 10.02521340
[36,] 14.858651 10.51798697
[37,] 15.323184 11.02060844
[38,] 15.789957 11.52722156
[39,] 16.255882 12.03122086
[40,] 16.717518 12.52531141
[41,] 17.171114 13.00160367
[42,] 17.612680 13.45174503
[43,] 18.038066 13.86708798
[44,] 18.443078 14.23889215
[45,] 18.823595 14.55855496
[46,] 19.175706 14.81786283
[47,] 19.495848 15.00925242
[48,] 19.780949 15.12606960
[49,] 20.028558 15.16281213
[50,] 20.236954 15.11534231
[51,] 20.405245 14.98105637
[52,] 20.533421 14.75899952
[53,] 20.622379 14.44991874
[54,] 20.673914 14.05624911
[55,] 20.690668 13.58203383
[56,] 20.676044 13.03278264
[57,] 20.634093 12.41527709
[58,] 20.569377 11.73733473
[59,] 20.486812 11.00754624
[60,] 20.391514 10.23500073
[61,] 20.288638  9.42901412
[62,] 20.183227  8.59887425
[63,] 20.080084  7.75361391
[64,] 19.983658  6.90182026
[65,] 19.897955  6.05148572
[66,] 19.826478  5.20990231
[67,] 19.772189  4.38359852
[68,] 19.737494  3.57831523
[69,] 19.724251  2.79901565
[70,] 19.733796  2.04992288
[71,] 19.766977  1.33457832
[72,] 19.824208  0.65591415
[73,] 19.905521  0.01633357
[74,] 20.010628 -0.58220677
[75,] 20.138976 -1.13811665
[76,] 20.289813 -1.65009821
[77,] 20.462239 -2.11708035
[78,] 20.655261 -2.53816338
[79,] 20.867838 -2.91257494
[80,] 21.098927 -3.23963728
[81,] 21.347514 -3.51874602
[82,] 21.612646 -3.74935976
[83,] 21.893452 -3.93099994
[84,] 22.189163 -4.06326030
[85,] 22.499116 -4.14582512
[86,] 22.822762 -4.17849566
[87,] 23.159657 -4.16122408
[88,] 23.509453 -4.09415440
[89,] 23.871876 -3.97766991
[90,] 24.246705 -3.81244649
[91,] 24.633735 -3.59951090

$DO_list_times_Array.I.UnBoundInFluxes
          [,1]      [,2]
 [1,] 5.000000 6.0000000
 [2,] 4.915840 5.7507398
 [3,] 4.839222 5.4932484
 [4,] 4.770933 5.2273834
 [5,] 4.711609 4.9534308
 [6,] 4.661737 4.6721472
 [7,] 4.621628 4.3847976
 [8,] 4.591403 4.0931507
 [9,] 4.570979 3.7994688
[10,] 4.560064 3.5064721
[11,] 4.558155 3.2172790
[12,] 4.564551 2.9353292
[13,] 4.578373 2.6642916
[14,] 4.598585 2.4079602
[15,] 4.624029 2.1701442
[16,] 4.653469 1.9545441
[17,] 4.685628 1.7646372
[18,] 4.719235 1.6035666
[19,] 4.753071 1.4740323
[20,] 4.786008 1.3781945
[21,] 4.817047 1.3175930
[22,] 4.845352 1.2930834
[23,] 4.870264 1.3047926
[24,] 4.891323 1.3520959
[25,] 4.908261 1.4336169
[26,] 4.921004 1.5472496
[27,] 4.929649 1.6902040
[28,] 4.934443 1.8590715
[29,] 4.935752 2.0499110
[30,] 4.934026 2.2583513
[31,] 4.929760 2.4797075
[32,] 4.923464 2.7091081
[33,] 4.915622 2.9416283
[34,] 4.906667 3.1724262
[35,] 4.896958 3.3968767
[36,] 4.886764 3.6106993
[37,] 4.876258 3.8100754
[38,] 4.865517 3.9917497
[39,] 4.854534 4.1531138
[40,] 4.843229 4.2922662
[41,] 4.831471 4.4080471
[42,] 4.819100 4.5000452
[43,] 4.805950 4.5685751
[44,] 4.791870 4.6146262
[45,] 4.776741 4.6397834
[46,] 4.760490 4.6461224
[47,] 4.743098 4.6360843
[48,] 4.724600 4.6123356
[49,] 4.705083 4.5776185
[50,] 4.684680 4.5346015
[51,] 4.663555 4.4857363
[52,] 4.641898 4.4331301
[53,] 4.619915 4.3784403
[54,] 4.597816 4.3227969
[55,] 4.575819 4.2667572
[56,] 4.554146 4.2102961
[57,] 4.533027 4.1528298
[58,] 4.512713 4.0932729
[59,] 4.493483 4.0301246
[60,] 4.475652 3.9615768
[61,] 4.459579 3.8856398
[62,] 4.445675 3.8002767
[63,] 4.434395 3.7035394
[64,] 4.426235 3.5937002
[65,] 4.421718 3.4693711
[66,] 4.421369 3.3296074
[67,] 4.425693 3.1739907
[68,] 4.435147 3.0026879
[69,] 4.450105 2.8164867
[70,] 4.470832 2.6168044
[71,] 4.497454 2.4056732
[72,] 4.529939 2.1857009
[73,] 4.568079 1.9600109
[74,] 4.611486 1.7321624
[75,] 4.659594 1.5060554
[76,] 4.711671 1.2858217
[77,] 4.766844 1.0757073
[78,] 4.824121 0.8799490
[79,] 4.882438 0.7026484
[80,] 4.940688 0.5476492
[81,] 4.997774 0.4184188
[82,] 5.052649 0.3179401
[83,] 5.104354 0.2486165
[84,] 5.152057 0.2121916
[85,] 5.195084 0.2096890
[86,] 5.232936 0.2413717
[87,] 5.265302 0.3067242
[88,] 5.292065 0.4044571
[89,] 5.313289 0.5325360
[90,] 5.329205 0.6882308
[91,] 5.340186 0.8681888

$DO_list_times_Array.I.BoundInFluxes
          [,1]      [,2]
 [1,] 5.000000 6.0000000
 [2,] 4.915840 5.7507398
 [3,] 4.839222 5.4932484
 [4,] 4.770933 5.2273834
 [5,] 4.711609 4.9534308
 [6,] 4.661737 4.6721472
 [7,] 4.621628 4.3847976
 [8,] 4.591403 4.0931507
 [9,] 4.570979 3.7994688
[10,] 4.560064 3.5064721
[11,] 4.558155 3.2172790
[12,] 4.564551 2.9353292
[13,] 4.578373 2.6642916
[14,] 4.598585 2.4079602
[15,] 4.624029 2.1701442
[16,] 4.653469 1.9545441
[17,] 4.685628 1.7646372
[18,] 4.719235 1.6035666
[19,] 4.753071 1.4740323
[20,] 4.786008 1.3781945
[21,] 4.817047 1.3175930
[22,] 4.845352 1.2930834
[23,] 4.870264 1.3047926
[24,] 4.891323 1.3520959
[25,] 4.908261 1.4336169
[26,] 4.921004 1.5472496
[27,] 4.929649 1.6902040
[28,] 4.934443 1.8590715
[29,] 4.935752 2.0499110
[30,] 4.934026 2.2583513
[31,] 4.929760 2.4797075
[32,] 4.923464 2.7091081
[33,] 4.915622 2.9416283
[34,] 4.906667 3.1724262
[35,] 4.896958 3.3968767
[36,] 4.886764 3.6106993
[37,] 4.876258 3.8100754
[38,] 4.865517 3.9917497
[39,] 4.854534 4.1531138
[40,] 4.843229 4.2922662
[41,] 4.831471 4.4080471
[42,] 4.819100 4.5000452
[43,] 4.805950 4.5685751
[44,] 4.791870 4.6146262
[45,] 4.776741 4.6397834
[46,] 4.760490 4.6461224
[47,] 4.743098 4.6360843
[48,] 4.724600 4.6123356
[49,] 4.705083 4.5776185
[50,] 4.684680 4.5346015
[51,] 4.663555 4.4857363
[52,] 4.641898 4.4331301
[53,] 4.619915 4.3784403
[54,] 4.597816 4.3227969
[55,] 4.575819 4.2667572
[56,] 4.554146 4.2102961
[57,] 4.533027 4.1528298
[58,] 4.512713 4.0932729
[59,] 4.493483 4.0301246
[60,] 4.475652 3.9615768
[61,] 4.459579 3.8856398
[62,] 4.445675 3.8002767
[63,] 4.434395 3.7035394
[64,] 4.426235 3.5937002
[65,] 4.421718 3.4693711
[66,] 4.421369 3.3296074
[67,] 4.425693 3.1739907
[68,] 4.435147 3.0026879
[69,] 4.450105 2.8164867
[70,] 4.470832 2.6168044
[71,] 4.497454 2.4056732
[72,] 4.529939 2.1857009
[73,] 4.568079 1.9600109
[74,] 4.611486 1.7321624
[75,] 4.659594 1.5060554
[76,] 4.711671 1.2858217
[77,] 4.766844 1.0757073
[78,] 4.824121 0.8799490
[79,] 4.882438 0.7026484
[80,] 4.940688 0.5476492
[81,] 4.997774 0.4184188
[82,] 5.052649 0.3179401
[83,] 5.104354 0.2486165
[84,] 5.152057 0.2121916
[85,] 5.195084 0.2096890
[86,] 5.232936 0.2413717
[87,] 5.265302 0.3067242
[88,] 5.292065 0.4044571
[89,] 5.313289 0.5325360
[90,] 5.329205 0.6882308
[91,] 5.340186 0.8681888

$DO_list_times_Matrice.I.vec
           [,1]      [,2]
 [1,] 5.0000000 6.0000000
 [2,] 2.8389829 2.1677115
 [3,] 1.7371323 1.0189991
 [4,] 1.2054631 0.6751747
 [5,] 0.9593609 0.5762769
 [6,] 0.8524666 0.5541652
 [7,] 0.8135585 0.5577391
 [8,] 0.8088710 0.5712432
 [9,] 0.8225929 0.5897718
[10,] 0.8473830 0.6118241
[11,] 0.8798838 0.6369958
[12,] 0.9186104 0.6652346
[13,] 0.9628385 0.6964788
[14,] 1.0120246 0.7304969
[15,] 1.0655557 0.7668519
[16,] 1.1225757 0.8048505
[17,] 1.1818416 0.8434750
[18,] 1.2415910 0.8813186
[19,] 1.2994347 0.9165425
[20,] 1.3522950 0.9468791
[21,] 1.3964367 0.9697189
[22,] 1.4277031 0.9823741
[23,] 1.4426034 0.9830671
[24,] 1.4393228 0.9715713
[25,] 1.4178297 0.9489621
[26,] 1.3797524 0.9172632
[27,] 1.3280469 0.8790366
[28,] 1.2665084 0.8369730
[29,] 1.1992145 0.7935448
[30,] 1.1300184 0.7507822
[31,] 1.0621712 0.7101782
[32,] 0.9981268 0.6727062
[33,] 0.9395055 0.6389008
[34,] 0.8871923 0.6089744
[35,] 0.8415176 0.5829389
[36,] 0.8024450 0.5606991
[37,] 0.7697333 0.5421172
[38,] 0.7430696 0.5270655
[39,] 0.7221577 0.5154524
[40,] 0.7067793 0.5072456
[41,] 0.6968369 0.5024909
[42,] 0.6923560 0.5013042
[43,] 0.6932540 0.5036513
[44,] 0.6992626 0.5093434
[45,] 0.7101119 0.5182064
[46,] 0.7256085 0.5301311
[47,] 0.7456476 0.5450655
[48,] 0.7702015 0.5630003
[49,] 0.7992982 0.5839514
[50,] 0.8329946 0.6079387
[51,] 0.8713450 0.6349634
[52,] 0.9143617 0.6649746
[53,] 0.9619610 0.6978375
[54,] 1.0138858 0.7332618
[55,] 1.0696360 0.7707625
[56,] 1.1283763 0.8095949
[57,] 1.1888281 0.8486828
[58,] 1.2491680 0.8865663
[59,] 1.3069397 0.9213642
[60,] 1.3590142 0.9507929
[61,] 1.4016598 0.9722852
[62,] 1.4307985 0.9832539
[63,] 1.4431180 0.9820942
[64,] 1.4370756 0.9687987
[65,] 1.4129706 0.9446702
[66,] 1.3727624 0.9119205
[67,] 1.3196811 0.8732299
[68,] 1.2576920 0.8313233
[69,] 1.1909236 0.7886370
[70,] 1.1231708 0.7471183
[71,] 1.0575530 0.7081606
[72,] 0.9963496 0.6726351
[73,] 0.9409013 0.6408985
[74,] 0.8917216 0.6129237
[75,] 0.8487976 0.5885172
[76,] 0.8118273 0.5674369
[77,] 0.7803880 0.5494462
[78,] 0.7540413 0.5343408
[79,] 0.7323926 0.5219601
[80,] 0.7151222 0.5121898
[81,] 0.7019992 0.5049656
[82,] 0.6928902 0.5002784
[83,] 0.6877801 0.4981928
[84,] 0.6867862 0.4988576
[85,] 0.6901628 0.5025090
[86,] 0.6983237 0.5094920
[87,] 0.7118821 0.5202941
[88,] 0.7317172 0.5355990
[89,] 0.7590748 0.5563678
[90,] 0.7957239 0.5839658
[91,] 0.8442076 0.6203660

$DO_list_times_Matrice.I.vecFunc
            [,1]       [,2]
 [1,] 5.00000000 6.00000000
 [2,] 2.61475111 1.98379570
 [3,] 1.40560178 0.77031336
 [4,] 0.82118487 0.39458307
 [5,] 0.54609182 0.27109966
 [6,] 0.41932882 0.22424762
 [7,] 0.36279919 0.20087394
 [8,] 0.33946531 0.18483695
 [9,] 0.33188527 0.17138614
[10,] 0.33182445 0.15937546
[11,] 0.33535993 0.14884997
[12,] 0.34059329 0.14027564
[13,] 0.34654291 0.13426015
[14,] 0.35261665 0.13145085
[15,] 0.35838306 0.13249050
[16,] 0.36345937 0.13796472
[17,] 0.36745179 0.14832936
[18,] 0.36992044 0.16381803
[19,] 0.37036019 0.18432822
[20,] 0.36819553 0.20930630
[21,] 0.36279289 0.23763386
[22,] 0.35351522 0.26760386
[23,] 0.33996353 0.29715108
[24,] 0.32216277 0.32420551
[25,] 0.30051691 0.34690635
[26,] 0.27574191 0.36381636
[27,] 0.24877828 0.37406128
[28,] 0.22068603 0.37737302
[29,] 0.19253116 0.37403034
[30,] 0.16528400 0.36473002
[31,] 0.13973959 0.35042814
[32,] 0.11647616 0.33219296
[33,] 0.09584762 0.31108573
[34,] 0.07800812 0.28809089
[35,] 0.06295636 0.26408534
[36,] 0.05058531 0.23983171
[37,] 0.04072809 0.21598491
[38,] 0.03319525 0.19310521
[39,] 0.02780188 0.17167299
[40,] 0.02438592 0.15210363
[41,] 0.02282010 0.13476216
[42,] 0.02302039 0.11996930
[43,] 0.02494207 0.10796925
[44,] 0.02857743 0.09896367
[45,] 0.03396157 0.09317344
[46,] 0.04117240 0.09084354
[47,] 0.05032705 0.09223251
[48,] 0.06157838 0.09759491
[49,] 0.07510739 0.10716100
[50,] 0.09111722 0.12111533
[51,] 0.10982124 0.13957505
[52,] 0.13143040 0.16254977
[53,] 0.15612827 0.18990992
[54,] 0.18403963 0.22133344
[55,] 0.21518673 0.25625438
[56,] 0.24943356 0.29380490
[57,] 0.28641617 0.33275995
[58,] 0.32546754 0.37150181
[59,] 0.36553662 0.40800569
[60,] 0.40513530 0.43990801
[61,] 0.44232417 0.46463691
[62,] 0.47479916 0.47969576
[63,] 0.50032046 0.48333539
[64,] 0.51722246 0.47506776
[65,] 0.52463619 0.45563774
[66,] 0.52258175 0.42681805
[67,] 0.51191381 0.39106686
[68,] 0.49413011 0.35112519
[69,] 0.47109783 0.30964633
[70,] 0.44475910 0.26892082
[71,] 0.41688781 0.23073644
[72,] 0.38892637 0.19634510
[73,] 0.36188023 0.16649608
[74,] 0.33633167 0.14155022
[75,] 0.31255591 0.12161616
[76,] 0.29062674 0.10663374
[77,] 0.27049689 0.09642998
[78,] 0.25206124 0.09075704
[79,] 0.23518910 0.08931181
[80,] 0.21974884 0.09175652
[81,] 0.20561944 0.09773342
[82,] 0.19269693 0.10687766
[83,] 0.18090105 0.11883369
[84,] 0.17017698 0.13327049
[85,] 0.16049314 0.14989589
[86,] 0.15184217 0.16847414
[87,] 0.14424507 0.18884752
[88,] 0.13775873 0.21096462
[89,] 0.13248843 0.23491918
[90,] 0.12860788 0.26100711
[91,] 0.12639266 0.28981480

$DO_list_times_Matrice.I.list1
            [,1]       [,2]
 [1,] 5.00000000 6.00000000
 [2,] 2.61512771 1.97688023
 [3,] 1.40620526 0.75236341
 [4,] 0.82159848 0.36757288
 [5,] 0.54605027 0.23844934
 [6,] 0.41873209 0.18944419
 [7,] 0.36166573 0.16705137
 [8,] 0.33789270 0.15463529
 [9,] 0.33002359 0.14689095
[10,] 0.32985743 0.14208070
[11,] 0.33348959 0.13962946
[12,] 0.33902510 0.13936591
[13,] 0.34546943 0.14129919
[14,] 0.35220218 0.14553908
[15,] 0.35874840 0.15224035
[16,] 0.36466531 0.16156521
[17,] 0.36948242 0.17364720
[18,] 0.37267155 0.18854804
[19,] 0.37363367 0.20620322
[20,] 0.37170912 0.22636271
[21,] 0.36620750 0.24853271
[22,] 0.35648471 0.27192076
[23,] 0.34220727 0.29536298
[24,] 0.32351979 0.31743323
[25,] 0.30096543 0.33669297
[26,] 0.27539012 0.35190149
[27,] 0.24783165 0.36215233
[28,] 0.21940088 0.36692457
[29,] 0.19116464 0.36605302
[30,] 0.16405145 0.35964196
[31,] 0.13878620 0.34795372
[32,] 0.11586338 0.33135516
[33,] 0.09554575 0.31070415
[34,] 0.07792704 0.28732697
[35,] 0.06299111 0.26255756
[36,] 0.05064677 0.23752619
[37,] 0.04075360 0.21312438
[38,] 0.03314993 0.19003824
[39,] 0.02767746 0.16880459
[40,] 0.02420239 0.14986728
[41,] 0.02263226 0.13362845
[42,] 0.02292489 0.12046145
[43,] 0.02505219 0.11047382
[44,] 0.02897625 0.10354141
[45,] 0.03468082 0.09955197
[46,] 0.04219044 0.09847748
[47,] 0.05157483 0.10038326
[48,] 0.06294792 0.10542182
[49,] 0.07647006 0.11383923
[50,] 0.09233687 0.12595283
[51,] 0.11077649 0.14215850
[52,] 0.13203840 0.16288447
[53,] 0.15635782 0.18831231
[54,] 0.18389991 0.21823770
[55,] 0.21471692 0.25215520
[56,] 0.24869804 0.28924810
[57,] 0.28550307 0.32831914
[58,] 0.32448244 0.36772027
[59,] 0.36459375 0.40529857
[60,] 0.40433300 0.43839781
[61,] 0.44170731 0.46394948
[62,] 0.47431131 0.47878784
[63,] 0.49980042 0.48088502
[64,] 0.51646720 0.47012631
[65,] 0.52348583 0.44792435
[66,] 0.52097881 0.41673829
[67,] 0.50992389 0.37956374
[68,] 0.49192376 0.33945703
[69,] 0.46890281 0.29916260
[70,] 0.44280386 0.26089228
[71,] 0.41534848 0.22625741
[72,] 0.38789217 0.19629054
[73,] 0.36136900 0.17130438
[74,] 0.33631629 0.15102295
[75,] 0.31297268 0.13495219
[76,] 0.29138329 0.12257337
[77,] 0.27148578 0.11342188
[78,] 0.25316865 0.10711368
[79,] 0.23630635 0.10334774
[80,] 0.22077924 0.10189933
[81,] 0.20648227 0.10261495
[82,] 0.19332868 0.10541311
[83,] 0.18124972 0.11032909
[84,] 0.17019660 0.11752306
[85,] 0.16014303 0.12725521
[86,] 0.15108809 0.13989572
[87,] 0.14306218 0.15595534
[88,] 0.13613776 0.17613688
[89,] 0.13044711 0.20141539
[90,] 0.12621169 0.23316364
[91,] 0.12379215 0.27335351

$DO_list_times_Matrice.I.list2
            [,1]       [,2]
 [1,] 5.00000000 6.00000000
 [2,] 2.61512771 1.97688023
 [3,] 1.40620526 0.75236341
 [4,] 0.82159848 0.36757288
 [5,] 0.54605027 0.23844934
 [6,] 0.41873209 0.18944419
 [7,] 0.36166573 0.16705137
 [8,] 0.33789270 0.15463529
 [9,] 0.33002359 0.14689095
[10,] 0.32985743 0.14208070
[11,] 0.33348959 0.13962946
[12,] 0.33902510 0.13936591
[13,] 0.34546943 0.14129919
[14,] 0.35220218 0.14553908
[15,] 0.35874840 0.15224035
[16,] 0.36466531 0.16156521
[17,] 0.36948242 0.17364720
[18,] 0.37267155 0.18854804
[19,] 0.37363367 0.20620322
[20,] 0.37170912 0.22636271
[21,] 0.36620750 0.24853271
[22,] 0.35648471 0.27192076
[23,] 0.34220727 0.29536298
[24,] 0.32351979 0.31743323
[25,] 0.30096543 0.33669297
[26,] 0.27539012 0.35190149
[27,] 0.24783165 0.36215233
[28,] 0.21940088 0.36692457
[29,] 0.19116464 0.36605302
[30,] 0.16405145 0.35964196
[31,] 0.13878620 0.34795372
[32,] 0.11586338 0.33135516
[33,] 0.09554575 0.31070415
[34,] 0.07792704 0.28732697
[35,] 0.06299111 0.26255756
[36,] 0.05064677 0.23752619
[37,] 0.04075360 0.21312438
[38,] 0.03314993 0.19003824
[39,] 0.02767746 0.16880459
[40,] 0.02420239 0.14986728
[41,] 0.02263226 0.13362845
[42,] 0.02292489 0.12046145
[43,] 0.02505219 0.11047382
[44,] 0.02897625 0.10354141
[45,] 0.03468082 0.09955197
[46,] 0.04219044 0.09847748
[47,] 0.05157483 0.10038326
[48,] 0.06294792 0.10542182
[49,] 0.07647006 0.11383923
[50,] 0.09233687 0.12595283
[51,] 0.11077649 0.14215850
[52,] 0.13203840 0.16288447
[53,] 0.15635782 0.18831231
[54,] 0.18389991 0.21823770
[55,] 0.21471692 0.25215520
[56,] 0.24869804 0.28924810
[57,] 0.28550307 0.32831914
[58,] 0.32448244 0.36772027
[59,] 0.36459375 0.40529857
[60,] 0.40433300 0.43839781
[61,] 0.44170731 0.46394948
[62,] 0.47431131 0.47878784
[63,] 0.49980042 0.48088502
[64,] 0.51646720 0.47012631
[65,] 0.52348583 0.44792435
[66,] 0.52097881 0.41673829
[67,] 0.50992389 0.37956374
[68,] 0.49192376 0.33945703
[69,] 0.46890281 0.29916260
[70,] 0.44280386 0.26089228
[71,] 0.41534848 0.22625741
[72,] 0.38789217 0.19629054
[73,] 0.36136900 0.17130438
[74,] 0.33631629 0.15102295
[75,] 0.31297268 0.13495219
[76,] 0.29138329 0.12257337
[77,] 0.27148578 0.11342188
[78,] 0.25316865 0.10711368
[79,] 0.23630635 0.10334774
[80,] 0.22077924 0.10189933
[81,] 0.20648227 0.10261495
[82,] 0.19332868 0.10541311
[83,] 0.18124972 0.11032909
[84,] 0.17019660 0.11752306
[85,] 0.16014303 0.12725521
[86,] 0.15108809 0.13989572
[87,] 0.14306218 0.15595534
[88,] 0.13613776 0.17613688
[89,] 0.13044711 0.20141539
[90,] 0.12621169 0.23316364
[91,] 0.12379215 0.27335351

$DO_list_times_Matrice.I.timeMap
            [,1]      [,2]
 [1,] 5.00000000 6.0000000
 [2,] 2.61294883 1.9813359
 [3,] 1.40010779 0.7643692
 [4,] 0.81174460 0.3864778
 [5,] 0.53326865 0.2625553
 [6,] 0.40408445 0.2167678
 [7,] 0.34629620 0.1955158
 [8,] 0.32297950 0.1820962
 [9,] 0.31676826 0.1711142
[10,] 0.31948722 0.1607061
[11,] 0.32726348 0.1501315
[12,] 0.33501331 0.1471977
[13,] 0.34103286 0.1534619
[14,] 0.34667657 0.1639795
[15,] 0.35227492 0.1768193
[16,] 0.35771702 0.1911239
[17,] 0.36265715 0.2063782
[18,] 0.36658458 0.2221184
[19,] 0.36884962 0.2378047
[20,] 0.36868540 0.2527649
[21,] 0.36524525 0.2661854
[22,] 0.35722339 0.2804312
[23,] 0.34411020 0.2959297
[24,] 0.32627902 0.3101511
[25,] 0.30430547 0.3217434
[26,] 0.27901383 0.3301551
[27,] 0.25142349 0.3353995
[28,] 0.22264317 0.3378621
[29,] 0.19374504 0.3381378
[30,] 0.16565516 0.3368948
[31,] 0.13907761 0.3347754
[32,] 0.11700082 0.3218400
[33,] 0.09969274 0.2977877
[34,] 0.08528188 0.2710906
[35,] 0.07300483 0.2452229
[36,] 0.06248268 0.2213897
[37,] 0.05345050 0.1998386
[38,] 0.04567630 0.1804505
[39,] 0.03894660 0.1629868
[40,] 0.03306819 0.1471863
[41,] 0.02787074 0.1327991
[42,] 0.02679966 0.1249511
[43,] 0.03085399 0.1232920
[44,] 0.03763711 0.1240449
[45,] 0.04601712 0.1260500
[46,] 0.05552990 0.1289472
[47,] 0.06603873 0.1326240
[48,] 0.07756198 0.1370487
[49,] 0.09019155 0.1422165
[50,] 0.10405338 0.1481304
[51,] 0.11928662 0.1547912
[52,] 0.13727721 0.1679971
[53,] 0.15913271 0.1890462
[54,] 0.18453163 0.2145853
[55,] 0.21321898 0.2433238
[56,] 0.24497548 0.2746428
[57,] 0.27952273 0.3080476
[58,] 0.31642066 0.3429263
[59,] 0.35496967 0.3784222
[60,] 0.39412893 0.4133667
[61,] 0.43246122 0.4462593
[62,] 0.46514093 0.4637930
[63,] 0.48770415 0.4604215
[64,] 0.49984418 0.4431753
[65,] 0.50217568 0.4168559
[66,] 0.49600351 0.3850786
[67,] 0.48309981 0.3506678
[68,] 0.46545701 0.3157838
[69,] 0.44504503 0.2819734
[70,] 0.42361254 0.2502295
[71,] 0.40255855 0.2210844
[72,] 0.37925334 0.1977674
[73,] 0.35336618 0.1804268
[74,] 0.32774631 0.1664694
[75,] 0.30375430 0.1546639
[76,] 0.28192927 0.1444080
[77,] 0.26238040 0.1353814
[78,] 0.24501049 0.1273905
[79,] 0.22963926 0.1203011
[80,] 0.21606520 0.1140124
[81,] 0.20409782 0.1084440
[82,] 0.19231608 0.1109240
[83,] 0.18076363 0.1211835
[84,] 0.17018923 0.1342553
[85,] 0.16070287 0.1488556
[86,] 0.15227715 0.1648653
[87,] 0.14488131 0.1825797
[88,] 0.13851679 0.2025123
[89,] 0.13323346 0.2253840
[90,] 0.12914842 0.2521875
[91,]         NA        NA

$DO_list_times_Matrice.I.ConstInFluxes
           [,1]      [,2]
 [1,] 5.0000000 6.0000000
 [2,] 2.8389829 2.1677115
 [3,] 1.7371323 1.0189991
 [4,] 1.2054631 0.6751747
 [5,] 0.9593609 0.5762769
 [6,] 0.8524666 0.5541652
 [7,] 0.8135585 0.5577391
 [8,] 0.8088710 0.5712432
 [9,] 0.8225929 0.5897718
[10,] 0.8473830 0.6118241
[11,] 0.8798838 0.6369958
[12,] 0.9186104 0.6652346
[13,] 0.9628385 0.6964788
[14,] 1.0120246 0.7304969
[15,] 1.0655557 0.7668519
[16,] 1.1225757 0.8048505
[17,] 1.1818416 0.8434750
[18,] 1.2415910 0.8813186
[19,] 1.2994347 0.9165425
[20,] 1.3522950 0.9468791
[21,] 1.3964367 0.9697189
[22,] 1.4277031 0.9823741
[23,] 1.4426034 0.9830671
[24,] 1.4393228 0.9715713
[25,] 1.4178297 0.9489621
[26,] 1.3797524 0.9172632
[27,] 1.3280469 0.8790366
[28,] 1.2665084 0.8369730
[29,] 1.1992145 0.7935448
[30,] 1.1300184 0.7507822
[31,] 1.0621712 0.7101782
[32,] 0.9981268 0.6727062
[33,] 0.9395055 0.6389008
[34,] 0.8871923 0.6089744
[35,] 0.8415176 0.5829389
[36,] 0.8024450 0.5606991
[37,] 0.7697333 0.5421172
[38,] 0.7430696 0.5270655
[39,] 0.7221577 0.5154524
[40,] 0.7067793 0.5072456
[41,] 0.6968369 0.5024909
[42,] 0.6923560 0.5013042
[43,] 0.6932540 0.5036513
[44,] 0.6992626 0.5093434
[45,] 0.7101119 0.5182064
[46,] 0.7256085 0.5301311
[47,] 0.7456476 0.5450655
[48,] 0.7702015 0.5630003
[49,] 0.7992982 0.5839514
[50,] 0.8329946 0.6079387
[51,] 0.8713450 0.6349634
[52,] 0.9143617 0.6649746
[53,] 0.9619610 0.6978375
[54,] 1.0138858 0.7332618
[55,] 1.0696360 0.7707625
[56,] 1.1283763 0.8095949
[57,] 1.1888281 0.8486828
[58,] 1.2491680 0.8865663
[59,] 1.3069397 0.9213642
[60,] 1.3590142 0.9507929
[61,] 1.4016598 0.9722852
[62,] 1.4307985 0.9832539
[63,] 1.4431180 0.9820942
[64,] 1.4370756 0.9687987
[65,] 1.4129706 0.9446702
[66,] 1.3727624 0.9119205
[67,] 1.3196811 0.8732299
[68,] 1.2576920 0.8313233
[69,] 1.1909236 0.7886370
[70,] 1.1231708 0.7471183
[71,] 1.0575530 0.7081606
[72,] 0.9963496 0.6726351
[73,] 0.9409013 0.6408985
[74,] 0.8917216 0.6129237
[75,] 0.8487976 0.5885172
[76,] 0.8118273 0.5674369
[77,] 0.7803880 0.5494462
[78,] 0.7540413 0.5343408
[79,] 0.7323926 0.5219601
[80,] 0.7151222 0.5121898
[81,] 0.7019992 0.5049656
[82,] 0.6928902 0.5002784
[83,] 0.6877801 0.4981928
[84,] 0.6867862 0.4988576
[85,] 0.6901628 0.5025090
[86,] 0.6983237 0.5094920
[87,] 0.7118821 0.5202941
[88,] 0.7317172 0.5355990
[89,] 0.7590748 0.5563678
[90,] 0.7957239 0.5839658
[91,] 0.8442076 0.6203660

$DO_list_times_Matrice.I.UnBoundInFluxes
            [,1]       [,2]
 [1,] 5.00000000 6.00000000
 [2,] 2.61475111 1.98379570
 [3,] 1.40560178 0.77031336
 [4,] 0.82118487 0.39458307
 [5,] 0.54609182 0.27109966
 [6,] 0.41932882 0.22424762
 [7,] 0.36279919 0.20087394
 [8,] 0.33946531 0.18483695
 [9,] 0.33188527 0.17138614
[10,] 0.33182445 0.15937546
[11,] 0.33535993 0.14884997
[12,] 0.34059329 0.14027564
[13,] 0.34654291 0.13426015
[14,] 0.35261665 0.13145085
[15,] 0.35838306 0.13249050
[16,] 0.36345937 0.13796472
[17,] 0.36745179 0.14832936
[18,] 0.36992044 0.16381803
[19,] 0.37036019 0.18432822
[20,] 0.36819553 0.20930630
[21,] 0.36279289 0.23763386
[22,] 0.35351522 0.26760386
[23,] 0.33996353 0.29715108
[24,] 0.32216277 0.32420551
[25,] 0.30051691 0.34690635
[26,] 0.27574191 0.36381636
[27,] 0.24877828 0.37406128
[28,] 0.22068603 0.37737302
[29,] 0.19253116 0.37403034
[30,] 0.16528400 0.36473002
[31,] 0.13973959 0.35042814
[32,] 0.11647616 0.33219296
[33,] 0.09584762 0.31108573
[34,] 0.07800812 0.28809089
[35,] 0.06295636 0.26408534
[36,] 0.05058531 0.23983171
[37,] 0.04072809 0.21598491
[38,] 0.03319525 0.19310521
[39,] 0.02780188 0.17167299
[40,] 0.02438592 0.15210363
[41,] 0.02282010 0.13476216
[42,] 0.02302039 0.11996930
[43,] 0.02494207 0.10796925
[44,] 0.02857743 0.09896367
[45,] 0.03396157 0.09317344
[46,] 0.04117240 0.09084354
[47,] 0.05032705 0.09223251
[48,] 0.06157838 0.09759491
[49,] 0.07510739 0.10716100
[50,] 0.09111722 0.12111533
[51,] 0.10982124 0.13957505
[52,] 0.13143040 0.16254977
[53,] 0.15612827 0.18990992
[54,] 0.18403963 0.22133344
[55,] 0.21518673 0.25625438
[56,] 0.24943356 0.29380490
[57,] 0.28641617 0.33275995
[58,] 0.32546754 0.37150181
[59,] 0.36553662 0.40800569
[60,] 0.40513530 0.43990801
[61,] 0.44232417 0.46463691
[62,] 0.47479916 0.47969576
[63,] 0.50032046 0.48333539
[64,] 0.51722246 0.47506776
[65,] 0.52463619 0.45563774
[66,] 0.52258175 0.42681805
[67,] 0.51191381 0.39106686
[68,] 0.49413011 0.35112519
[69,] 0.47109783 0.30964633
[70,] 0.44475910 0.26892082
[71,] 0.41688781 0.23073644
[72,] 0.38892637 0.19634510
[73,] 0.36188023 0.16649608
[74,] 0.33633167 0.14155022
[75,] 0.31255591 0.12161616
[76,] 0.29062674 0.10663374
[77,] 0.27049689 0.09642998
[78,] 0.25206124 0.09075704
[79,] 0.23518910 0.08931181
[80,] 0.21974884 0.09175652
[81,] 0.20561944 0.09773342
[82,] 0.19269693 0.10687766
[83,] 0.18090105 0.11883369
[84,] 0.17017698 0.13327049
[85,] 0.16049314 0.14989589
[86,] 0.15184217 0.16847414
[87,] 0.14424507 0.18884752
[88,] 0.13775873 0.21096462
[89,] 0.13248843 0.23491918
[90,] 0.12860788 0.26100711
[91,] 0.12639266 0.28981480

$DO_list_times_Matrice.I.BoundInFluxes
            [,1]       [,2]
 [1,] 5.00000000 6.00000000
 [2,] 2.61475111 1.98379570
 [3,] 1.40560178 0.77031336
 [4,] 0.82118487 0.39458307
 [5,] 0.54609182 0.27109966
 [6,] 0.41932882 0.22424762
 [7,] 0.36279919 0.20087394
 [8,] 0.33946531 0.18483695
 [9,] 0.33188527 0.17138614
[10,] 0.33182445 0.15937546
[11,] 0.33535993 0.14884997
[12,] 0.34059329 0.14027564
[13,] 0.34654291 0.13426015
[14,] 0.35261665 0.13145085
[15,] 0.35838306 0.13249050
[16,] 0.36345937 0.13796472
[17,] 0.36745179 0.14832936
[18,] 0.36992044 0.16381803
[19,] 0.37036019 0.18432822
[20,] 0.36819553 0.20930630
[21,] 0.36279289 0.23763386
[22,] 0.35351522 0.26760386
[23,] 0.33996353 0.29715108
[24,] 0.32216277 0.32420551
[25,] 0.30051691 0.34690635
[26,] 0.27574191 0.36381636
[27,] 0.24877828 0.37406128
[28,] 0.22068603 0.37737302
[29,] 0.19253116 0.37403034
[30,] 0.16528400 0.36473002
[31,] 0.13973959 0.35042814
[32,] 0.11647616 0.33219296
[33,] 0.09584762 0.31108573
[34,] 0.07800812 0.28809089
[35,] 0.06295636 0.26408534
[36,] 0.05058531 0.23983171
[37,] 0.04072809 0.21598491
[38,] 0.03319525 0.19310521
[39,] 0.02780188 0.17167299
[40,] 0.02438592 0.15210363
[41,] 0.02282010 0.13476216
[42,] 0.02302039 0.11996930
[43,] 0.02494207 0.10796925
[44,] 0.02857743 0.09896367
[45,] 0.03396157 0.09317344
[46,] 0.04117240 0.09084354
[47,] 0.05032705 0.09223251
[48,] 0.06157838 0.09759491
[49,] 0.07510739 0.10716100
[50,] 0.09111722 0.12111533
[51,] 0.10982124 0.13957505
[52,] 0.13143040 0.16254977
[53,] 0.15612827 0.18990992
[54,] 0.18403963 0.22133344
[55,] 0.21518673 0.25625438
[56,] 0.24943356 0.29380490
[57,] 0.28641617 0.33275995
[58,] 0.32546754 0.37150181
[59,] 0.36553662 0.40800569
[60,] 0.40513530 0.43990801
[61,] 0.44232417 0.46463691
[62,] 0.47479916 0.47969576
[63,] 0.50032046 0.48333539
[64,] 0.51722246 0.47506776
[65,] 0.52463619 0.45563774
[66,] 0.52258175 0.42681805
[67,] 0.51191381 0.39106686
[68,] 0.49413011 0.35112519
[69,] 0.47109783 0.30964633
[70,] 0.44475910 0.26892082
[71,] 0.41688781 0.23073644
[72,] 0.38892637 0.19634510
[73,] 0.36188023 0.16649608
[74,] 0.33633167 0.14155022
[75,] 0.31255591 0.12161616
[76,] 0.29062674 0.10663374
[77,] 0.27049689 0.09642998
[78,] 0.25206124 0.09075704
[79,] 0.23518910 0.08931181
[80,] 0.21974884 0.09175652
[81,] 0.20561944 0.09773342
[82,] 0.19269693 0.10687766
[83,] 0.18090105 0.11883369
[84,] 0.17017698 0.13327049
[85,] 0.16049314 0.14989589
[86,] 0.15184217 0.16847414
[87,] 0.14424507 0.18884752
[88,] 0.13775873 0.21096462
[89,] 0.13248843 0.23491918
[90,] 0.12860788 0.26100711
[91,] 0.12639266 0.28981480

$DO_TimeMap.I.vec
           [,1]        [,2]
 [1,]  5.000000  6.00000000
 [2,]  5.221602  6.04914272
 [3,]  5.431388  6.07137537
 [4,]  5.631446  6.07041405
 [5,]  5.823864  6.05004699
 [6,]  6.010695  6.01406220
 [7,]  6.193918  5.96618685
 [8,]  6.375406  5.91003589
 [9,]  6.556910  5.84907734
[10,]  6.740049  5.78661285
[11,]  6.926295  5.72575549
[12,]  7.116983  5.66943950
[13,]  7.313321  5.62042422
[14,]  7.516380  5.58128586
[15,]  7.727123  5.55444604
[16,]  7.946417  5.54218201
[17,]  8.175037  5.54663398
[18,]  8.413687  5.56981610
[19,]  8.663007  5.61362399
[20,]  8.923584  5.67983676
[21,]  9.195960  5.77011462
[22,]  9.480635  5.88599165
[23,]  9.778067  6.02886209
[24,] 10.088668  6.19996041
[25,] 10.412797  6.40033423
[26,] 10.750745  6.63081090
[27,] 11.102720  6.89195703
[28,] 11.468822  7.18403134
[29,] 11.849019  7.50693140
[30,] 12.243111  7.86013534
[31,] 12.650702  8.24263972
[32,] 13.071158  8.65289574
[33,] 13.503570  9.08874617
[34,] 13.946724  9.54736642
[35,] 14.399059 10.02521340
[36,] 14.858651 10.51798697
[37,] 15.323184 11.02060844
[38,] 15.789957 11.52722156
[39,] 16.255882 12.03122086
[40,] 16.717518 12.52531141
[41,] 17.171114 13.00160367
[42,] 17.612680 13.45174503
[43,] 18.038066 13.86708798
[44,] 18.443078 14.23889215
[45,] 18.823595 14.55855496
[46,] 19.175706 14.81786283
[47,] 19.495848 15.00925242
[48,] 19.780949 15.12606960
[49,] 20.028558 15.16281213
[50,] 20.236954 15.11534231
[51,] 20.405245 14.98105637
[52,] 20.533421 14.75899952
[53,] 20.622379 14.44991874
[54,] 20.673914 14.05624911
[55,] 20.690668 13.58203383
[56,] 20.676044 13.03278264
[57,] 20.634093 12.41527709
[58,] 20.569377 11.73733473
[59,] 20.486812 11.00754624
[60,] 20.391514 10.23500073
[61,] 20.288638  9.42901412
[62,] 20.183227  8.59887425
[63,] 20.080084  7.75361391
[64,] 19.983658  6.90182026
[65,] 19.897955  6.05148572
[66,] 19.826478  5.20990231
[67,] 19.772189  4.38359852
[68,] 19.737494  3.57831523
[69,] 19.724251  2.79901565
[70,] 19.733796  2.04992288
[71,] 19.766977  1.33457832
[72,] 19.824208  0.65591415
[73,] 19.905521  0.01633357
[74,] 20.010628 -0.58220677
[75,] 20.138976 -1.13811665
[76,] 20.289813 -1.65009821
[77,] 20.462239 -2.11708035
[78,] 20.655261 -2.53816338
[79,] 20.867838 -2.91257494
[80,] 21.098927 -3.23963728
[81,] 21.347514 -3.51874602
[82,] 21.612646 -3.74935976
[83,] 21.893452 -3.93099994
[84,] 22.189163 -4.06326030
[85,] 22.499116 -4.14582512
[86,] 22.822762 -4.17849566
[87,] 23.159657 -4.16122408
[88,] 23.509453 -4.09415440
[89,] 23.871876 -3.97766991
[90,] 24.246705 -3.81244649
[91,] 24.633735 -3.59951090

$DO_TimeMap.I.vecFunc
          [,1]      [,2]
 [1,] 5.000000 6.0000000
 [2,] 4.915840 5.7507398
 [3,] 4.839222 5.4932484
 [4,] 4.770933 5.2273834
 [5,] 4.711609 4.9534308
 [6,] 4.661737 4.6721472
 [7,] 4.621628 4.3847976
 [8,] 4.591403 4.0931507
 [9,] 4.570979 3.7994688
[10,] 4.560064 3.5064721
[11,] 4.558155 3.2172790
[12,] 4.564551 2.9353292
[13,] 4.578373 2.6642916
[14,] 4.598585 2.4079602
[15,] 4.624029 2.1701442
[16,] 4.653469 1.9545441
[17,] 4.685628 1.7646372
[18,] 4.719235 1.6035666
[19,] 4.753071 1.4740323
[20,] 4.786008 1.3781945
[21,] 4.817047 1.3175930
[22,] 4.845352 1.2930834
[23,] 4.870264 1.3047926
[24,] 4.891323 1.3520959
[25,] 4.908261 1.4336169
[26,] 4.921004 1.5472496
[27,] 4.929649 1.6902040
[28,] 4.934443 1.8590715
[29,] 4.935752 2.0499110
[30,] 4.934026 2.2583513
[31,] 4.929760 2.4797075
[32,] 4.923464 2.7091081
[33,] 4.915622 2.9416283
[34,] 4.906667 3.1724262
[35,] 4.896958 3.3968767
[36,] 4.886764 3.6106993
[37,] 4.876258 3.8100754
[38,] 4.865517 3.9917497
[39,] 4.854534 4.1531138
[40,] 4.843229 4.2922662
[41,] 4.831471 4.4080471
[42,] 4.819100 4.5000452
[43,] 4.805950 4.5685751
[44,] 4.791870 4.6146262
[45,] 4.776741 4.6397834
[46,] 4.760490 4.6461224
[47,] 4.743098 4.6360843
[48,] 4.724600 4.6123356
[49,] 4.705083 4.5776185
[50,] 4.684680 4.5346015
[51,] 4.663555 4.4857363
[52,] 4.641898 4.4331301
[53,] 4.619915 4.3784403
[54,] 4.597816 4.3227969
[55,] 4.575819 4.2667572
[56,] 4.554146 4.2102961
[57,] 4.533027 4.1528298
[58,] 4.512713 4.0932729
[59,] 4.493483 4.0301246
[60,] 4.475652 3.9615768
[61,] 4.459579 3.8856398
[62,] 4.445675 3.8002767
[63,] 4.434395 3.7035394
[64,] 4.426235 3.5937002
[65,] 4.421718 3.4693711
[66,] 4.421369 3.3296074
[67,] 4.425693 3.1739907
[68,] 4.435147 3.0026879
[69,] 4.450105 2.8164867
[70,] 4.470832 2.6168044
[71,] 4.497454 2.4056732
[72,] 4.529939 2.1857009
[73,] 4.568079 1.9600109
[74,] 4.611486 1.7321624
[75,] 4.659594 1.5060554
[76,] 4.711671 1.2858217
[77,] 4.766844 1.0757073
[78,] 4.824121 0.8799490
[79,] 4.882438 0.7026484
[80,] 4.940688 0.5476492
[81,] 4.997774 0.4184188
[82,] 5.052649 0.3179401
[83,] 5.104354 0.2486165
[84,] 5.152057 0.2121916
[85,] 5.195084 0.2096890
[86,] 5.232936 0.2413717
[87,] 5.265302 0.3067242
[88,] 5.292065 0.4044571
[89,] 5.313289 0.5325360
[90,] 5.329205 0.6882308
[91,] 5.340186 0.8681888

$DO_TimeMap.I.list1
          [,1]       [,2]
 [1,] 5.000000 6.00000000
 [2,] 4.916690 5.74084623
 [3,] 4.842571 5.45841634
 [4,] 4.778249 5.15900190
 [5,] 4.724130 4.84836513
 [6,] 4.680408 4.53170523
 [7,] 4.647054 4.21367100
 [8,] 4.623834 3.89838141
 [9,] 4.610316 3.58945349
[10,] 4.605892 3.29003948
[11,] 4.609806 3.00287082
[12,] 4.621184 2.73030998
[13,] 4.639053 2.47444959
[14,] 4.662372 2.23723979
[15,] 4.690052 2.02050994
[16,] 4.720985 1.82600119
[17,] 4.754066 1.65538957
[18,] 4.788216 1.51030601
[19,] 4.822407 1.39235272
[20,] 4.855675 1.30311380
[21,] 4.887140 1.24416513
[22,] 4.916022 1.21704811
[23,] 4.941668 1.22292234
[24,] 4.963594 1.26222056
[25,] 4.981488 1.33462424
[26,] 4.995216 1.43906045
[27,] 5.004812 1.57369199
[28,] 5.010467 1.73590083
[29,] 5.012504 1.92226547
[30,] 5.011359 2.12853756
[31,] 5.007545 2.34961059
[32,] 5.001627 2.57956137
[33,] 4.994152 2.81235437
[34,] 4.985585 3.04254703
[35,] 4.976288 3.26534202
[36,] 4.966515 3.47658676
[37,] 4.956410 3.67278464
[38,] 4.946024 3.85111845
[39,] 4.935330 4.00948389
[40,] 4.924250 4.14652764
[41,] 4.912684 4.26169727
[42,] 4.900535 4.35524054
[43,] 4.887700 4.42790622
[44,] 4.874048 4.48054065
[45,] 4.859450 4.51413845
[46,] 4.843797 4.52987081
[47,] 4.827025 4.52911573
[48,] 4.809121 4.51348349
[49,] 4.790139 4.48483189
[50,] 4.770198 4.44527171
[51,] 4.749476 4.39716213
[52,] 4.728202 4.34305137
[53,] 4.706631 4.28532661
[54,] 4.685019 4.22574158
[55,] 4.663617 4.16542830
[56,] 4.642674 4.10488014
[57,] 4.622436 4.04395224
[58,] 4.603153 3.98186624
[59,] 4.585086 3.91721880
[60,] 4.568520 3.84799276
[61,] 4.553779 3.77156992
[62,] 4.541239 3.68482041
[63,] 4.531359 3.58478577
[64,] 4.524690 3.46943542
[65,] 4.521827 3.33762326
[66,] 4.523375 3.18903196
[67,] 4.529894 3.02410382
[68,] 4.541859 2.84397707
[69,] 4.559615 2.65042948
[70,] 4.583337 2.44582532
[71,] 4.612999 2.23307767
[72,] 4.648355 2.01558851
[73,] 4.688977 1.79687307
[74,] 4.734313 1.58020899
[75,] 4.783707 1.36862346
[76,] 4.836417 1.16491390
[77,] 4.891632 0.97167128
[78,] 4.948502 0.79130234
[79,] 5.006152 0.62605020
[80,] 5.063708 0.47801262
[81,] 5.120320 0.34916003
[82,] 5.175180 0.24135704
[83,] 5.227530 0.15643328
[84,] 5.276663 0.09628471
[85,] 5.321942 0.06286227
[86,] 5.362803 0.05818846
[87,] 5.398770 0.08435541
[88,] 5.429458 0.14352760
[89,] 5.454580 0.23794190
[90,] 5.473943 0.36990606
[91,] 5.487452 0.54179525

$DO_TimeMap.I.list2
          [,1]       [,2]
 [1,] 5.000000 6.00000000
 [2,] 4.916690 5.74084623
 [3,] 4.842571 5.45841634
 [4,] 4.778249 5.15900190
 [5,] 4.724130 4.84836513
 [6,] 4.680408 4.53170523
 [7,] 4.647054 4.21367100
 [8,] 4.623834 3.89838141
 [9,] 4.610316 3.58945349
[10,] 4.605892 3.29003948
[11,] 4.609806 3.00287082
[12,] 4.621184 2.73030998
[13,] 4.639053 2.47444959
[14,] 4.662372 2.23723979
[15,] 4.690052 2.02050994
[16,] 4.720985 1.82600119
[17,] 4.754066 1.65538957
[18,] 4.788216 1.51030601
[19,] 4.822407 1.39235272
[20,] 4.855675 1.30311380
[21,] 4.887140 1.24416513
[22,] 4.916022 1.21704811
[23,] 4.941668 1.22292234
[24,] 4.963594 1.26222056
[25,] 4.981488 1.33462424
[26,] 4.995216 1.43906045
[27,] 5.004812 1.57369199
[28,] 5.010467 1.73590083
[29,] 5.012504 1.92226547
[30,] 5.011359 2.12853756
[31,] 5.007545 2.34961059
[32,] 5.001627 2.57956137
[33,] 4.994152 2.81235437
[34,] 4.985585 3.04254703
[35,] 4.976288 3.26534202
[36,] 4.966515 3.47658676
[37,] 4.956410 3.67278464
[38,] 4.946024 3.85111845
[39,] 4.935330 4.00948389
[40,] 4.924250 4.14652764
[41,] 4.912684 4.26169727
[42,] 4.900535 4.35524054
[43,] 4.887700 4.42790622
[44,] 4.874048 4.48054065
[45,] 4.859450 4.51413845
[46,] 4.843797 4.52987081
[47,] 4.827025 4.52911573
[48,] 4.809121 4.51348349
[49,] 4.790139 4.48483189
[50,] 4.770198 4.44527171
[51,] 4.749476 4.39716213
[52,] 4.728202 4.34305137
[53,] 4.706631 4.28532661
[54,] 4.685019 4.22574158
[55,] 4.663617 4.16542830
[56,] 4.642674 4.10488014
[57,] 4.622436 4.04395224
[58,] 4.603153 3.98186624
[59,] 4.585086 3.91721880
[60,] 4.568520 3.84799276
[61,] 4.553779 3.77156992
[62,] 4.541239 3.68482041
[63,] 4.531359 3.58478577
[64,] 4.524690 3.46943542
[65,] 4.521827 3.33762326
[66,] 4.523375 3.18903196
[67,] 4.529894 3.02410382
[68,] 4.541859 2.84397707
[69,] 4.559615 2.65042948
[70,] 4.583337 2.44582532
[71,] 4.612999 2.23307767
[72,] 4.648355 2.01558851
[73,] 4.688977 1.79687307
[74,] 4.734313 1.58020899
[75,] 4.783707 1.36862346
[76,] 4.836417 1.16491390
[77,] 4.891632 0.97167128
[78,] 4.948502 0.79130234
[79,] 5.006152 0.62605020
[80,] 5.063708 0.47801262
[81,] 5.120320 0.34916003
[82,] 5.175180 0.24135704
[83,] 5.227530 0.15643328
[84,] 5.276663 0.09628471
[85,] 5.321942 0.06286227
[86,] 5.362803 0.05818846
[87,] 5.398770 0.08435541
[88,] 5.429458 0.14352760
[89,] 5.454580 0.23794190
[90,] 5.473943 0.36990606
[91,] 5.487452 0.54179525

$DO_TimeMap.I.timeMap
          [,1]      [,2]
 [1,] 5.000000 6.0000000
 [2,] 4.913664 5.7472578
 [3,] 4.831290 5.4818434
 [4,] 4.754720 5.2069200
 [5,] 4.685585 4.9252906
 [6,] 4.625301 4.6393901
 [7,] 4.575060 4.3512751
 [8,] 4.535836 4.0626495
 [9,] 4.508391 3.7748777
[10,] 4.493289 3.4890143
[11,] 4.490912 3.2058434
[12,] 4.497219 2.9365597
[13,] 4.507734 2.6919163
[14,] 4.522006 2.4717872
[15,] 4.539540 2.2759682
[16,] 4.559813 2.1041998
[17,] 4.582294 1.9561892
[18,] 4.606459 1.8316229
[19,] 4.631801 1.7301736
[20,] 4.657841 1.6515040
[21,] 4.684131 1.5952713
[22,] 4.709595 1.5650427
[23,] 4.733120 1.5642870
[24,] 4.754289 1.5925016
[25,] 4.772749 1.6491838
[26,] 4.788199 1.7338158
[27,] 4.800382 1.8458472
[28,] 4.809067 1.9846777
[29,] 4.814037 2.1496357
[30,] 4.815068 2.3399603
[31,] 4.811910 2.5547781
[32,] 4.807764 2.7791082
[33,] 4.805817 2.9979075
[34,] 4.805662 3.2099532
[35,] 4.806754 3.4138148
[36,] 4.808421 3.6078611
[37,] 4.809863 3.7902772
[38,] 4.810172 3.9590880
[39,] 4.808345 4.1121911
[40,] 4.803312 4.2473965
[41,] 4.793960 4.3624770
[42,] 4.783568 4.4629053
[43,] 4.775399 4.5541373
[44,] 4.768330 4.6339801
[45,] 4.761290 4.7003569
[46,] 4.753290 4.7513603
[47,] 4.743461 4.7853025
[48,] 4.731072 4.8007573
[49,] 4.715562 4.7966066
[50,] 4.696562 4.7720759
[51,] 4.673911 4.7267634
[52,] 4.648913 4.6681819
[53,] 4.622916 4.6039577
[54,] 4.596096 4.5343331
[55,] 4.568764 4.4598070
[56,] 4.541356 4.3811196
[57,] 4.514414 4.2992110
[58,] 4.488559 4.2151819
[59,] 4.464474 4.1302609
[60,] 4.442884 4.0457673
[61,] 4.424534 3.9630682
[62,] 4.407282 3.8697329
[63,] 4.389565 3.7542950
[64,] 4.372967 3.6194803
[65,] 4.359033 3.4679549
[66,] 4.349231 3.3022552
[67,] 4.344923 3.1247394
[68,] 4.347348 2.9375670
[69,] 4.357610 2.7426813
[70,] 4.376659 2.5417899
[71,] 4.405298 2.3363847
[72,] 4.439630 2.1318565
[73,] 4.475576 1.9335311
[74,] 4.513453 1.7425113
[75,] 4.553463 1.5597201
[76,] 4.595700 1.3859213
[77,] 4.640168 1.2217375
[78,] 4.686796 1.0676719
[79,] 4.735452 0.9241180
[80,] 4.785953 0.7913728
[81,] 4.838084 0.6696497
[82,] 4.889635 0.5696310
[83,] 4.938158 0.5016591
[84,] 4.983086 0.4653713
[85,] 5.023946 0.4604466
[86,] 5.060348 0.4865826
[87,] 5.091980 0.5434833
[88,] 5.118601 0.6308431
[89,] 5.140029 0.7483305
[90,] 5.156130 0.8955709
[91,]       NA        NA

$DO_TimeMap.I.ConstInFluxes
           [,1]        [,2]
 [1,]  5.000000  6.00000000
 [2,]  5.221602  6.04914272
 [3,]  5.431388  6.07137537
 [4,]  5.631446  6.07041405
 [5,]  5.823864  6.05004699
 [6,]  6.010695  6.01406220
 [7,]  6.193918  5.96618685
 [8,]  6.375406  5.91003589
 [9,]  6.556910  5.84907734
[10,]  6.740049  5.78661285
[11,]  6.926295  5.72575549
[12,]  7.116983  5.66943950
[13,]  7.313321  5.62042422
[14,]  7.516380  5.58128586
[15,]  7.727123  5.55444604
[16,]  7.946417  5.54218201
[17,]  8.175037  5.54663398
[18,]  8.413687  5.56981610
[19,]  8.663007  5.61362399
[20,]  8.923584  5.67983676
[21,]  9.195960  5.77011462
[22,]  9.480635  5.88599165
[23,]  9.778067  6.02886209
[24,] 10.088668  6.19996041
[25,] 10.412797  6.40033423
[26,] 10.750745  6.63081090
[27,] 11.102720  6.89195703
[28,] 11.468822  7.18403134
[29,] 11.849019  7.50693140
[30,] 12.243111  7.86013534
[31,] 12.650702  8.24263972
[32,] 13.071158  8.65289574
[33,] 13.503570  9.08874617
[34,] 13.946724  9.54736642
[35,] 14.399059 10.02521340
[36,] 14.858651 10.51798697
[37,] 15.323184 11.02060844
[38,] 15.789957 11.52722156
[39,] 16.255882 12.03122086
[40,] 16.717518 12.52531141
[41,] 17.171114 13.00160367
[42,] 17.612680 13.45174503
[43,] 18.038066 13.86708798
[44,] 18.443078 14.23889215
[45,] 18.823595 14.55855496
[46,] 19.175706 14.81786283
[47,] 19.495848 15.00925242
[48,] 19.780949 15.12606960
[49,] 20.028558 15.16281213
[50,] 20.236954 15.11534231
[51,] 20.405245 14.98105637
[52,] 20.533421 14.75899952
[53,] 20.622379 14.44991874
[54,] 20.673914 14.05624911
[55,] 20.690668 13.58203383
[56,] 20.676044 13.03278264
[57,] 20.634093 12.41527709
[58,] 20.569377 11.73733473
[59,] 20.486812 11.00754624
[60,] 20.391514 10.23500073
[61,] 20.288638  9.42901412
[62,] 20.183227  8.59887425
[63,] 20.080084  7.75361391
[64,] 19.983658  6.90182026
[65,] 19.897955  6.05148572
[66,] 19.826478  5.20990231
[67,] 19.772189  4.38359852
[68,] 19.737494  3.57831523
[69,] 19.724251  2.79901565
[70,] 19.733796  2.04992288
[71,] 19.766977  1.33457832
[72,] 19.824208  0.65591415
[73,] 19.905521  0.01633357
[74,] 20.010628 -0.58220677
[75,] 20.138976 -1.13811665
[76,] 20.289813 -1.65009821
[77,] 20.462239 -2.11708035
[78,] 20.655261 -2.53816338
[79,] 20.867838 -2.91257494
[80,] 21.098927 -3.23963728
[81,] 21.347514 -3.51874602
[82,] 21.612646 -3.74935976
[83,] 21.893452 -3.93099994
[84,] 22.189163 -4.06326030
[85,] 22.499116 -4.14582512
[86,] 22.822762 -4.17849566
[87,] 23.159657 -4.16122408
[88,] 23.509453 -4.09415440
[89,] 23.871876 -3.97766991
[90,] 24.246705 -3.81244649
[91,] 24.633735 -3.59951090

$DO_TimeMap.I.UnBoundInFluxes
          [,1]      [,2]
 [1,] 5.000000 6.0000000
 [2,] 4.915840 5.7507398
 [3,] 4.839222 5.4932484
 [4,] 4.770933 5.2273834
 [5,] 4.711609 4.9534308
 [6,] 4.661737 4.6721472
 [7,] 4.621628 4.3847976
 [8,] 4.591403 4.0931507
 [9,] 4.570979 3.7994688
[10,] 4.560064 3.5064721
[11,] 4.558155 3.2172790
[12,] 4.564551 2.9353292
[13,] 4.578373 2.6642916
[14,] 4.598585 2.4079602
[15,] 4.624029 2.1701442
[16,] 4.653469 1.9545441
[17,] 4.685628 1.7646372
[18,] 4.719235 1.6035666
[19,] 4.753071 1.4740323
[20,] 4.786008 1.3781945
[21,] 4.817047 1.3175930
[22,] 4.845352 1.2930834
[23,] 4.870264 1.3047926
[24,] 4.891323 1.3520959
[25,] 4.908261 1.4336169
[26,] 4.921004 1.5472496
[27,] 4.929649 1.6902040
[28,] 4.934443 1.8590715
[29,] 4.935752 2.0499110
[30,] 4.934026 2.2583513
[31,] 4.929760 2.4797075
[32,] 4.923464 2.7091081
[33,] 4.915622 2.9416283
[34,] 4.906667 3.1724262
[35,] 4.896958 3.3968767
[36,] 4.886764 3.6106993
[37,] 4.876258 3.8100754
[38,] 4.865517 3.9917497
[39,] 4.854534 4.1531138
[40,] 4.843229 4.2922662
[41,] 4.831471 4.4080471
[42,] 4.819100 4.5000452
[43,] 4.805950 4.5685751
[44,] 4.791870 4.6146262
[45,] 4.776741 4.6397834
[46,] 4.760490 4.6461224
[47,] 4.743098 4.6360843
[48,] 4.724600 4.6123356
[49,] 4.705083 4.5776185
[50,] 4.684680 4.5346015
[51,] 4.663555 4.4857363
[52,] 4.641898 4.4331301
[53,] 4.619915 4.3784403
[54,] 4.597816 4.3227969
[55,] 4.575819 4.2667572
[56,] 4.554146 4.2102961
[57,] 4.533027 4.1528298
[58,] 4.512713 4.0932729
[59,] 4.493483 4.0301246
[60,] 4.475652 3.9615768
[61,] 4.459579 3.8856398
[62,] 4.445675 3.8002767
[63,] 4.434395 3.7035394
[64,] 4.426235 3.5937002
[65,] 4.421718 3.4693711
[66,] 4.421369 3.3296074
[67,] 4.425693 3.1739907
[68,] 4.435147 3.0026879
[69,] 4.450105 2.8164867
[70,] 4.470832 2.6168044
[71,] 4.497454 2.4056732
[72,] 4.529939 2.1857009
[73,] 4.568079 1.9600109
[74,] 4.611486 1.7321624
[75,] 4.659594 1.5060554
[76,] 4.711671 1.2858217
[77,] 4.766844 1.0757073
[78,] 4.824121 0.8799490
[79,] 4.882438 0.7026484
[80,] 4.940688 0.5476492
[81,] 4.997774 0.4184188
[82,] 5.052649 0.3179401
[83,] 5.104354 0.2486165
[84,] 5.152057 0.2121916
[85,] 5.195084 0.2096890
[86,] 5.232936 0.2413717
[87,] 5.265302 0.3067242
[88,] 5.292065 0.4044571
[89,] 5.313289 0.5325360
[90,] 5.329205 0.6882308
[91,] 5.340186 0.8681888

$DO_TimeMap.I.BoundInFluxes
          [,1]      [,2]
 [1,] 5.000000 6.0000000
 [2,] 4.915840 5.7507398
 [3,] 4.839222 5.4932484
 [4,] 4.770933 5.2273834
 [5,] 4.711609 4.9534308
 [6,] 4.661737 4.6721472
 [7,] 4.621628 4.3847976
 [8,] 4.591403 4.0931507
 [9,] 4.570979 3.7994688
[10,] 4.560064 3.5064721
[11,] 4.558155 3.2172790
[12,] 4.564551 2.9353292
[13,] 4.578373 2.6642916
[14,] 4.598585 2.4079602
[15,] 4.624029 2.1701442
[16,] 4.653469 1.9545441
[17,] 4.685628 1.7646372
[18,] 4.719235 1.6035666
[19,] 4.753071 1.4740323
[20,] 4.786008 1.3781945
[21,] 4.817047 1.3175930
[22,] 4.845352 1.2930834
[23,] 4.870264 1.3047926
[24,] 4.891323 1.3520959
[25,] 4.908261 1.4336169
[26,] 4.921004 1.5472496
[27,] 4.929649 1.6902040
[28,] 4.934443 1.8590715
[29,] 4.935752 2.0499110
[30,] 4.934026 2.2583513
[31,] 4.929760 2.4797075
[32,] 4.923464 2.7091081
[33,] 4.915622 2.9416283
[34,] 4.906667 3.1724262
[35,] 4.896958 3.3968767
[36,] 4.886764 3.6106993
[37,] 4.876258 3.8100754
[38,] 4.865517 3.9917497
[39,] 4.854534 4.1531138
[40,] 4.843229 4.2922662
[41,] 4.831471 4.4080471
[42,] 4.819100 4.5000452
[43,] 4.805950 4.5685751
[44,] 4.791870 4.6146262
[45,] 4.776741 4.6397834
[46,] 4.760490 4.6461224
[47,] 4.743098 4.6360843
[48,] 4.724600 4.6123356
[49,] 4.705083 4.5776185
[50,] 4.684680 4.5346015
[51,] 4.663555 4.4857363
[52,] 4.641898 4.4331301
[53,] 4.619915 4.3784403
[54,] 4.597816 4.3227969
[55,] 4.575819 4.2667572
[56,] 4.554146 4.2102961
[57,] 4.533027 4.1528298
[58,] 4.512713 4.0932729
[59,] 4.493483 4.0301246
[60,] 4.475652 3.9615768
[61,] 4.459579 3.8856398
[62,] 4.445675 3.8002767
[63,] 4.434395 3.7035394
[64,] 4.426235 3.5937002
[65,] 4.421718 3.4693711
[66,] 4.421369 3.3296074
[67,] 4.425693 3.1739907
[68,] 4.435147 3.0026879
[69,] 4.450105 2.8164867
[70,] 4.470832 2.6168044
[71,] 4.497454 2.4056732
[72,] 4.529939 2.1857009
[73,] 4.568079 1.9600109
[74,] 4.611486 1.7321624
[75,] 4.659594 1.5060554
[76,] 4.711671 1.2858217
[77,] 4.766844 1.0757073
[78,] 4.824121 0.8799490
[79,] 4.882438 0.7026484
[80,] 4.940688 0.5476492
[81,] 4.997774 0.4184188
[82,] 5.052649 0.3179401
[83,] 5.104354 0.2486165
[84,] 5.152057 0.2121916
[85,] 5.195084 0.2096890
[86,] 5.232936 0.2413717
[87,] 5.265302 0.3067242
[88,] 5.292065 0.4044571
[89,] 5.313289 0.5325360
[90,] 5.329205 0.6882308
[91,] 5.340186 0.8681888

$DO_ConstlinDecompOp.I.vec
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.447758  6.475236
 [3,]  5.891061  6.941059
 [4,]  6.329951  7.397653
 [5,]  6.764476  7.845210
 [6,]  7.194676  8.283904
 [7,]  7.620596  8.713911
 [8,]  8.042278  9.135404
 [9,]  8.459765  9.548551
[10,]  8.873097  9.953517
[11,]  9.282317 10.350464
[12,]  9.687464 10.739550
[13,] 10.088581 11.120933
[14,] 10.485706 11.494763
[15,] 10.878880 11.861192
[16,] 11.268141 12.220364
[17,] 11.653530 12.572425
[18,] 12.035084 12.917514
[19,] 12.412841 13.255770
[20,] 12.786839 13.587328
[21,] 13.157116 13.912320
[22,] 13.523709 14.230878
[23,] 13.886654 14.543127
[24,] 14.245988 14.849194
[25,] 14.601747 15.149200
[26,] 14.953965 15.443265
[27,] 15.302679 15.731508
[28,] 15.647923 16.014043
[29,] 15.989732 16.290984
[30,] 16.328140 16.562440
[31,] 16.663180 16.828522
[32,] 16.994887 17.089335
[33,] 17.323294 17.344983
[34,] 17.648432 17.595569
[35,] 17.970336 17.841193
[36,] 18.289036 18.081954
[37,] 18.604566 18.317947
[38,] 18.916955 18.549267
[39,] 19.226237 18.776007
[40,] 19.532441 18.998257
[41,] 19.835598 19.216106
[42,] 20.135739 19.429641
[43,] 20.432893 19.638948
[44,] 20.727091 19.844111
[45,] 21.018361 20.045211
[46,] 21.306733 20.242329
[47,] 21.592236 20.435544
[48,] 21.874898 20.624933
[49,] 22.154748 20.810572
[50,] 22.431812 20.992534
[51,] 22.706121 21.170894
[52,] 22.977699 21.345722
[53,] 23.246576 21.517088
[54,] 23.512777 21.685061
[55,] 23.776329 21.849708
[56,] 24.037259 22.011095
[57,] 24.295592 22.169286
[58,] 24.551355 22.324344
[59,] 24.804574 22.476332
[60,] 25.055272 22.625311
[61,] 25.303477 22.771340
[62,] 25.549211 22.914477
[63,] 25.792501 23.054779
[64,] 26.033369 23.192304
[65,] 26.271841 23.327105
[66,] 26.507940 23.459238
[67,] 26.741690 23.588753
[68,] 26.973114 23.715704
[69,] 27.202236 23.840142
[70,] 27.429077 23.962115
[71,] 27.653662 24.081673
[72,] 27.876011 24.198864
[73,] 28.096149 24.313734
[74,] 28.314096 24.426330
[75,] 28.529874 24.536696
[76,] 28.743505 24.644877
[77,] 28.955011 24.750915
[78,] 29.164412 24.854854
[79,] 29.371730 24.956735
[80,] 29.576984 25.056598
[81,] 29.780197 25.154484
[82,] 29.981387 25.250432
[83,] 30.180576 25.344479
[84,] 30.377782 25.436665
[85,] 30.573027 25.527025
[86,] 30.766328 25.615596
[87,] 30.957706 25.702413
[88,] 31.147180 25.787511
[89,] 31.334769 25.870924
[90,] 31.520491 25.952685
[91,] 31.704365 26.032827

$DO_ConstlinDecompOp.I.vecFunc
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136029 6.164508
 [3,] 5.275214 6.314148
 [4,] 5.416615 6.446264
 [5,] 5.559268 6.558846
 [6,] 5.702191 6.650599
 [7,] 5.844394 6.720999
 [8,] 5.984891 6.770303
 [9,] 6.122708 6.799551
[10,] 6.256894 6.810524
[11,] 6.386530 6.805673
[12,] 6.510739 6.788023
[13,] 6.628691 6.761052
[14,] 6.739618 6.728560
[15,] 6.842817 6.694505
[16,] 6.937657 6.662858
[17,] 7.023589 6.637441
[18,] 7.100145 6.621780
[19,] 7.166952 6.618960
[20,] 7.223726 6.631507
[21,] 7.270282 6.661284
[22,] 7.306532 6.709422
[23,] 7.332487 6.776276
[24,] 7.348260 6.861405
[25,] 7.354059 6.963600
[26,] 7.350188 7.080926
[27,] 7.337046 7.210803
[28,] 7.315120 7.350108
[29,] 7.284981 7.495304
[30,] 7.247278 7.642578
[31,] 7.202734 7.787993
[32,] 7.152135 7.927651
[33,] 7.096326 8.057845
[34,] 7.036198 8.175205
[35,] 6.972685 8.276843
[36,] 6.906749 8.360456
[37,] 6.839374 8.424430
[38,] 6.771556 8.467896
[39,] 6.704290 8.490773
[40,] 6.638564 8.493765
[41,] 6.575347 8.478338
[42,] 6.515580 8.446660
[43,] 6.460167 8.401517
[44,] 6.409963 8.346203
[45,] 6.365771 8.284386
[46,] 6.328330 8.219963
[47,] 6.298307 8.156911
[48,] 6.276294 8.099119
[49,] 6.262799 8.050244
[50,] 6.258242 8.013557
[51,] 6.262952 7.991820
[52,] 6.277162 7.987170
[53,] 6.301005 8.001040
[54,] 6.334519 8.034100
[55,] 6.377640 8.086229
[56,] 6.430206 8.156523
[57,] 6.491957 8.243332
[58,] 6.562542 8.344322
[59,] 6.641514 8.456574
[60,] 6.728343 8.576696
[61,] 6.822418 8.700961
[62,] 6.923051 8.825459
[63,] 7.029489 8.946245
[64,] 7.140914 9.059506
[65,] 7.256460 9.161706
[66,] 7.375216 9.249734
[67,] 7.496236 9.321021
[68,] 7.618549 9.373650
[69,] 7.741169 9.406428
[70,] 7.863104 9.418936
[71,] 7.983367 9.411544
[72,] 8.100987 9.385401
[73,] 8.215015 9.342385
[74,] 8.324535 9.285030
[75,] 8.428676 9.216424
[76,] 8.526617 9.140092
[77,] 8.617598 9.059847
[78,] 8.700925 8.979644
[79,] 8.775980 8.903423
[80,] 8.842224 8.834949
[81,] 8.899204 8.777664
[82,] 8.946558 8.734550
[83,] 8.984019 8.708010
[84,] 9.011415 8.699772
[85,] 9.028674 8.710824
[86,] 9.035822 8.741368
[87,] 9.032985 8.790819
[88,] 9.020387 8.857824
[89,] 8.998347 8.940320
[90,] 8.967277 9.035611
[91,] 8.927676 9.140483

$DO_ConstlinDecompOp.I.list1
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136789 6.154561
 [3,] 5.277847 6.278901
 [4,] 5.421711 6.376629
 [5,] 5.567010 6.451139
 [6,] 5.712455 6.505627
 [7,] 5.856839 6.543091
 [8,] 5.999040 6.566338
 [9,] 6.138013 6.577983
[10,] 6.272798 6.580459
[11,] 6.402512 6.576014
[12,] 6.526352 6.566726
[13,] 6.643589 6.554572
[14,] 6.753564 6.541505
[15,] 6.855685 6.529460
[16,] 6.949431 6.520351
[17,] 7.034345 6.516073
[18,] 7.110041 6.518503
[19,] 7.176196 6.529502
[20,] 7.232552 6.550912
[21,] 7.278918 6.584556
[22,] 7.315168 6.632208
[23,] 7.341258 6.695256
[24,] 7.357247 6.774329
[25,] 7.363296 6.869295
[26,] 7.359667 6.979289
[27,] 7.346721 7.102713
[28,] 7.324918 7.237253
[29,] 7.294818 7.379895
[30,] 7.257075 7.526937
[31,] 7.212442 7.674005
[32,] 7.161760 7.816132
[33,] 7.105928 7.948486
[34,] 7.045855 8.067109
[35,] 6.982464 8.168949
[36,] 6.916689 8.251847
[37,] 6.849475 8.314520
[38,] 6.781777 8.356543
[39,] 6.714563 8.378331
[40,] 6.648810 8.381126
[41,] 6.585505 8.366975
[42,] 6.525645 8.338682
[43,] 6.470188 8.299421
[44,] 6.420013 8.252310
[45,] 6.375917 8.200413
[46,] 6.338618 8.146741
[47,] 6.308751 8.094226
[48,] 6.286872 8.045744
[49,] 6.273459 8.004108
[50,] 6.268912 7.972074
[51,] 6.273552 7.952337
[52,] 6.287626 7.947495
[53,] 6.311287 7.959698
[54,] 6.344591 7.990237
[55,] 6.387492 8.039547
[56,] 6.439843 8.107237
[57,] 6.501400 8.192091
[58,] 6.571821 8.292086
[59,] 6.650665 8.404412
[60,] 6.737397 8.525484
[61,] 6.831386 8.650960
[62,] 6.931912 8.775820
[63,] 7.038188 8.895102
[64,] 7.149397 9.004636
[65,] 7.264687 9.101081
[66,] 7.383179 9.181918
[67,] 7.503959 9.245424
[68,] 7.626085 9.290665
[69,] 7.748585 9.317476
[70,] 7.870456 9.326448
[71,] 7.990667 9.318909
[72,] 8.108161 9.296879
[73,] 8.221910 9.262715
[74,] 8.330968 9.218707
[75,] 8.434476 9.167088
[76,] 8.531655 9.110029
[77,] 8.621812 9.049624
[78,] 8.704339 8.987899
[79,] 8.778706 8.926817
[80,] 8.844467 8.868276
[81,] 8.901256 8.814111
[82,] 8.948782 8.766103
[83,] 8.986827 8.726045
[84,] 9.015226 8.695822
[85,] 9.033866 8.677414
[86,] 9.042693 8.672887
[87,] 9.041702 8.684398
[88,] 9.030944 8.714190
[89,] 9.010520 8.764592
[90,] 8.980584 8.838018
[91,] 8.941341 8.936962

$DO_ConstlinDecompOp.I.list2
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136789 6.154561
 [3,] 5.277847 6.278901
 [4,] 5.421711 6.376629
 [5,] 5.567010 6.451139
 [6,] 5.712455 6.505627
 [7,] 5.856839 6.543091
 [8,] 5.999040 6.566338
 [9,] 6.138013 6.577983
[10,] 6.272798 6.580459
[11,] 6.402512 6.576014
[12,] 6.526352 6.566726
[13,] 6.643589 6.554572
[14,] 6.753564 6.541505
[15,] 6.855685 6.529460
[16,] 6.949431 6.520351
[17,] 7.034345 6.516073
[18,] 7.110041 6.518503
[19,] 7.176196 6.529502
[20,] 7.232552 6.550912
[21,] 7.278918 6.584556
[22,] 7.315168 6.632208
[23,] 7.341258 6.695256
[24,] 7.357247 6.774329
[25,] 7.363296 6.869295
[26,] 7.359667 6.979289
[27,] 7.346721 7.102713
[28,] 7.324918 7.237253
[29,] 7.294818 7.379895
[30,] 7.257075 7.526937
[31,] 7.212442 7.674005
[32,] 7.161760 7.816132
[33,] 7.105928 7.948486
[34,] 7.045855 8.067109
[35,] 6.982464 8.168949
[36,] 6.916689 8.251847
[37,] 6.849475 8.314520
[38,] 6.781777 8.356543
[39,] 6.714563 8.378331
[40,] 6.648810 8.381126
[41,] 6.585505 8.366975
[42,] 6.525645 8.338682
[43,] 6.470188 8.299421
[44,] 6.420013 8.252310
[45,] 6.375917 8.200413
[46,] 6.338618 8.146741
[47,] 6.308751 8.094226
[48,] 6.286872 8.045744
[49,] 6.273459 8.004108
[50,] 6.268912 7.972074
[51,] 6.273552 7.952337
[52,] 6.287626 7.947495
[53,] 6.311287 7.959698
[54,] 6.344591 7.990237
[55,] 6.387492 8.039547
[56,] 6.439843 8.107237
[57,] 6.501400 8.192091
[58,] 6.571821 8.292086
[59,] 6.650665 8.404412
[60,] 6.737397 8.525484
[61,] 6.831386 8.650960
[62,] 6.931912 8.775820
[63,] 7.038188 8.895102
[64,] 7.149397 9.004636
[65,] 7.264687 9.101081
[66,] 7.383179 9.181918
[67,] 7.503959 9.245424
[68,] 7.626085 9.290665
[69,] 7.748585 9.317476
[70,] 7.870456 9.326448
[71,] 7.990667 9.318909
[72,] 8.108161 9.296879
[73,] 8.221910 9.262715
[74,] 8.330968 9.218707
[75,] 8.434476 9.167088
[76,] 8.531655 9.110029
[77,] 8.621812 9.049624
[78,] 8.704339 8.987899
[79,] 8.778706 8.926817
[80,] 8.844467 8.868276
[81,] 8.901256 8.814111
[82,] 8.948782 8.766103
[83,] 8.986827 8.726045
[84,] 9.015226 8.695822
[85,] 9.033866 8.677414
[86,] 9.042693 8.672887
[87,] 9.041702 8.684398
[88,] 9.030944 8.714190
[89,] 9.010520 8.764592
[90,] 8.980584 8.838018
[91,] 8.941341 8.936962

$DO_ConstlinDecompOp.I.timeMap
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.133817 6.160958
 [3,] 5.266977 6.302230
 [4,] 5.399486 6.424209
 [5,] 5.531353 6.527279
 [6,] 5.662582 6.611812
 [7,] 5.793180 6.678177
 [8,] 5.923154 6.726732
 [9,] 6.052509 6.757830
[10,] 6.181252 6.771816
[11,] 6.309387 6.769036
[12,] 6.432754 6.760466
[13,] 6.547253 6.756782
[14,] 6.652970 6.757898
[15,] 6.749992 6.763717
[16,] 6.838404 6.774149
[17,] 6.918294 6.789100
[18,] 6.989745 6.808481
[19,] 7.052841 6.832205
[20,] 7.107667 6.860186
[21,] 7.154297 6.892375
[22,] 7.192171 6.932559
[23,] 7.220742 6.984498
[24,] 7.240094 7.047970
[25,] 7.250319 7.122747
[26,] 7.251508 7.208605
[27,] 7.243750 7.305325
[28,] 7.227136 7.412691
[29,] 7.201752 7.530493
[30,] 7.167686 7.658524
[31,] 7.125025 7.796578
[32,] 7.077321 7.930547
[33,] 7.028081 8.046680
[34,] 6.977319 8.145333
[35,] 6.925052 8.226850
[36,] 6.871293 8.291572
[37,] 6.816058 8.339831
[38,] 6.759361 8.371953
[39,] 6.701218 8.388257
[40,] 6.641642 8.389057
[41,] 6.580650 8.374663
[42,] 6.522644 8.353022
[43,] 6.471978 8.331883
[44,] 6.428576 8.311237
[45,] 6.392368 8.291073
[46,] 6.363281 8.271383
[47,] 6.341245 8.252156
[48,] 6.326189 8.233383
[49,] 6.318044 8.215056
[50,] 6.316742 8.197165
[51,] 6.322219 8.179733
[52,] 6.335676 8.170228
[53,] 6.358318 8.176041
[54,] 6.390052 8.196859
[55,] 6.430788 8.232385
[56,] 6.480436 8.282327
[57,] 6.538907 8.346401
[58,] 6.606114 8.424326
[59,] 6.681969 8.515828
[60,] 6.766387 8.620638
[61,] 6.859273 8.738449
[62,] 6.957549 8.855149
[63,] 7.058157 8.956887
[64,] 7.161071 9.043952
[65,] 7.266268 9.116635
[66,] 7.373725 9.175221
[67,] 7.483420 9.219989
[68,] 7.595331 9.251212
[69,] 7.709436 9.269159
[70,] 7.825712 9.274092
[71,] 7.944137 9.266271
[72,] 8.060159 9.249996
[73,] 8.169283 9.229457
[74,] 8.271578 9.204741
[75,] 8.367112 9.175929
[76,] 8.455951 9.143103
[77,] 8.538162 9.106342
[78,] 8.613812 9.065725
[79,] 8.682966 9.021326
[80,] 8.745688 8.973222
[81,] 8.802034 8.921528
[82,] 8.850194 8.876808
[83,] 8.888362 8.849435
[84,] 8.916637 8.839077
[85,] 8.935118 8.845399
[86,] 8.943900 8.868069
[87,] 8.943081 8.906765
[88,] 8.932757 8.961168
[89,] 8.913022 9.030969
[90,] 8.883969 9.115861
[91,]       NA       NA

$DO_ConstlinDecompOp.I.ConstInFluxes
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.447758  6.475236
 [3,]  5.891061  6.941059
 [4,]  6.329951  7.397653
 [5,]  6.764476  7.845210
 [6,]  7.194676  8.283904
 [7,]  7.620596  8.713911
 [8,]  8.042278  9.135404
 [9,]  8.459765  9.548551
[10,]  8.873097  9.953517
[11,]  9.282317 10.350464
[12,]  9.687464 10.739550
[13,] 10.088581 11.120933
[14,] 10.485706 11.494763
[15,] 10.878880 11.861192
[16,] 11.268141 12.220364
[17,] 11.653530 12.572425
[18,] 12.035084 12.917514
[19,] 12.412841 13.255770
[20,] 12.786839 13.587328
[21,] 13.157116 13.912320
[22,] 13.523709 14.230878
[23,] 13.886654 14.543127
[24,] 14.245988 14.849194
[25,] 14.601747 15.149200
[26,] 14.953965 15.443265
[27,] 15.302679 15.731508
[28,] 15.647923 16.014043
[29,] 15.989732 16.290984
[30,] 16.328140 16.562440
[31,] 16.663180 16.828522
[32,] 16.994887 17.089335
[33,] 17.323294 17.344983
[34,] 17.648432 17.595569
[35,] 17.970336 17.841193
[36,] 18.289036 18.081954
[37,] 18.604566 18.317947
[38,] 18.916955 18.549267
[39,] 19.226237 18.776007
[40,] 19.532441 18.998257
[41,] 19.835598 19.216106
[42,] 20.135739 19.429641
[43,] 20.432893 19.638948
[44,] 20.727091 19.844111
[45,] 21.018361 20.045211
[46,] 21.306733 20.242329
[47,] 21.592236 20.435544
[48,] 21.874898 20.624933
[49,] 22.154748 20.810572
[50,] 22.431812 20.992534
[51,] 22.706121 21.170894
[52,] 22.977699 21.345722
[53,] 23.246576 21.517088
[54,] 23.512777 21.685061
[55,] 23.776329 21.849708
[56,] 24.037259 22.011095
[57,] 24.295592 22.169286
[58,] 24.551355 22.324344
[59,] 24.804574 22.476332
[60,] 25.055272 22.625311
[61,] 25.303477 22.771340
[62,] 25.549211 22.914477
[63,] 25.792501 23.054779
[64,] 26.033369 23.192304
[65,] 26.271841 23.327105
[66,] 26.507940 23.459238
[67,] 26.741690 23.588753
[68,] 26.973114 23.715704
[69,] 27.202236 23.840142
[70,] 27.429077 23.962115
[71,] 27.653662 24.081673
[72,] 27.876011 24.198864
[73,] 28.096149 24.313734
[74,] 28.314096 24.426330
[75,] 28.529874 24.536696
[76,] 28.743505 24.644877
[77,] 28.955011 24.750915
[78,] 29.164412 24.854854
[79,] 29.371730 24.956735
[80,] 29.576984 25.056598
[81,] 29.780197 25.154484
[82,] 29.981387 25.250432
[83,] 30.180576 25.344479
[84,] 30.377782 25.436665
[85,] 30.573027 25.527025
[86,] 30.766328 25.615596
[87,] 30.957706 25.702413
[88,] 31.147180 25.787511
[89,] 31.334769 25.870924
[90,] 31.520491 25.952685
[91,] 31.704365 26.032827

$DO_ConstlinDecompOp.I.UnBoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136029 6.164508
 [3,] 5.275214 6.314148
 [4,] 5.416615 6.446264
 [5,] 5.559268 6.558846
 [6,] 5.702191 6.650599
 [7,] 5.844394 6.720999
 [8,] 5.984891 6.770303
 [9,] 6.122708 6.799551
[10,] 6.256894 6.810524
[11,] 6.386530 6.805673
[12,] 6.510739 6.788023
[13,] 6.628691 6.761052
[14,] 6.739618 6.728560
[15,] 6.842817 6.694505
[16,] 6.937657 6.662858
[17,] 7.023589 6.637441
[18,] 7.100145 6.621780
[19,] 7.166952 6.618960
[20,] 7.223726 6.631507
[21,] 7.270282 6.661284
[22,] 7.306532 6.709422
[23,] 7.332487 6.776276
[24,] 7.348260 6.861405
[25,] 7.354059 6.963600
[26,] 7.350188 7.080926
[27,] 7.337046 7.210803
[28,] 7.315120 7.350108
[29,] 7.284981 7.495304
[30,] 7.247278 7.642578
[31,] 7.202734 7.787993
[32,] 7.152135 7.927651
[33,] 7.096326 8.057845
[34,] 7.036198 8.175205
[35,] 6.972685 8.276843
[36,] 6.906749 8.360456
[37,] 6.839374 8.424430
[38,] 6.771556 8.467896
[39,] 6.704290 8.490773
[40,] 6.638564 8.493765
[41,] 6.575347 8.478338
[42,] 6.515580 8.446660
[43,] 6.460167 8.401517
[44,] 6.409963 8.346203
[45,] 6.365771 8.284386
[46,] 6.328330 8.219963
[47,] 6.298307 8.156911
[48,] 6.276294 8.099119
[49,] 6.262799 8.050244
[50,] 6.258242 8.013557
[51,] 6.262952 7.991820
[52,] 6.277162 7.987170
[53,] 6.301005 8.001040
[54,] 6.334519 8.034100
[55,] 6.377640 8.086229
[56,] 6.430206 8.156523
[57,] 6.491957 8.243332
[58,] 6.562542 8.344322
[59,] 6.641514 8.456574
[60,] 6.728343 8.576696
[61,] 6.822418 8.700961
[62,] 6.923051 8.825459
[63,] 7.029489 8.946245
[64,] 7.140914 9.059506
[65,] 7.256460 9.161706
[66,] 7.375216 9.249734
[67,] 7.496236 9.321021
[68,] 7.618549 9.373650
[69,] 7.741169 9.406428
[70,] 7.863104 9.418936
[71,] 7.983367 9.411544
[72,] 8.100987 9.385401
[73,] 8.215015 9.342385
[74,] 8.324535 9.285030
[75,] 8.428676 9.216424
[76,] 8.526617 9.140092
[77,] 8.617598 9.059847
[78,] 8.700925 8.979644
[79,] 8.775980 8.903423
[80,] 8.842224 8.834949
[81,] 8.899204 8.777664
[82,] 8.946558 8.734550
[83,] 8.984019 8.708010
[84,] 9.011415 8.699772
[85,] 9.028674 8.710824
[86,] 9.035822 8.741368
[87,] 9.032985 8.790819
[88,] 9.020387 8.857824
[89,] 8.998347 8.940320
[90,] 8.967277 9.035611
[91,] 8.927676 9.140483

$DO_ConstlinDecompOp.I.BoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.136029 6.164508
 [3,] 5.275214 6.314148
 [4,] 5.416615 6.446264
 [5,] 5.559268 6.558846
 [6,] 5.702191 6.650599
 [7,] 5.844394 6.720999
 [8,] 5.984891 6.770303
 [9,] 6.122708 6.799551
[10,] 6.256894 6.810524
[11,] 6.386530 6.805673
[12,] 6.510739 6.788023
[13,] 6.628691 6.761052
[14,] 6.739618 6.728560
[15,] 6.842817 6.694505
[16,] 6.937657 6.662858
[17,] 7.023589 6.637441
[18,] 7.100145 6.621780
[19,] 7.166952 6.618960
[20,] 7.223726 6.631507
[21,] 7.270282 6.661284
[22,] 7.306532 6.709422
[23,] 7.332487 6.776276
[24,] 7.348260 6.861405
[25,] 7.354059 6.963600
[26,] 7.350188 7.080926
[27,] 7.337046 7.210803
[28,] 7.315120 7.350108
[29,] 7.284981 7.495304
[30,] 7.247278 7.642578
[31,] 7.202734 7.787993
[32,] 7.152135 7.927651
[33,] 7.096326 8.057845
[34,] 7.036198 8.175205
[35,] 6.972685 8.276843
[36,] 6.906749 8.360456
[37,] 6.839374 8.424430
[38,] 6.771556 8.467896
[39,] 6.704290 8.490773
[40,] 6.638564 8.493765
[41,] 6.575347 8.478338
[42,] 6.515580 8.446660
[43,] 6.460167 8.401517
[44,] 6.409963 8.346203
[45,] 6.365771 8.284386
[46,] 6.328330 8.219963
[47,] 6.298307 8.156911
[48,] 6.276294 8.099119
[49,] 6.262799 8.050244
[50,] 6.258242 8.013557
[51,] 6.262952 7.991820
[52,] 6.277162 7.987170
[53,] 6.301005 8.001040
[54,] 6.334519 8.034100
[55,] 6.377640 8.086229
[56,] 6.430206 8.156523
[57,] 6.491957 8.243332
[58,] 6.562542 8.344322
[59,] 6.641514 8.456574
[60,] 6.728343 8.576696
[61,] 6.822418 8.700961
[62,] 6.923051 8.825459
[63,] 7.029489 8.946245
[64,] 7.140914 9.059506
[65,] 7.256460 9.161706
[66,] 7.375216 9.249734
[67,] 7.496236 9.321021
[68,] 7.618549 9.373650
[69,] 7.741169 9.406428
[70,] 7.863104 9.418936
[71,] 7.983367 9.411544
[72,] 8.100987 9.385401
[73,] 8.215015 9.342385
[74,] 8.324535 9.285030
[75,] 8.428676 9.216424
[76,] 8.526617 9.140092
[77,] 8.617598 9.059847
[78,] 8.700925 8.979644
[79,] 8.775980 8.903423
[80,] 8.842224 8.834949
[81,] 8.899204 8.777664
[82,] 8.946558 8.734550
[83,] 8.984019 8.708010
[84,] 9.011415 8.699772
[85,] 9.028674 8.710824
[86,] 9.035822 8.741368
[87,] 9.032985 8.790819
[88,] 9.020387 8.857824
[89,] 8.998347 8.940320
[90,] 8.967277 9.035611
[91,] 8.927676 9.140483

$DO_BoundLinDecompOp.I.vec
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.397703  6.344735
 [3,]  5.785152  6.669726
 [4,]  6.162746  6.976450
 [5,]  6.531006  7.266552
 [6,]  6.890577  7.541849
 [7,]  7.242212  7.804285
 [8,]  7.586762  8.055891
 [9,]  7.925155  8.298753
[10,]  8.258393  8.534988
[11,]  8.587532  8.766711
[12,]  8.913667  8.996017
[13,]  9.237922  9.224961
[14,]  9.561436  9.455540
[15,]  9.885349  9.689683
[16,] 10.210788  9.929236
[17,] 10.538857 10.175954
[18,] 10.870626 10.431496
[19,] 11.207118 10.697412
[20,] 11.549295 10.975139
[21,] 11.898056 11.265991
[22,] 12.254215 11.571148
[23,] 12.618498 11.891651
[24,] 12.991530 12.228383
[25,] 13.373823 12.582055
[26,] 13.765765 12.953195
[27,] 14.167614 13.342123
[28,] 14.579479 13.748931
[29,] 15.001319 14.173466
[30,] 15.432927 14.615301
[31,] 15.873924 15.073717
[32,] 16.323752 15.547676
[33,] 16.781669 16.035805
[34,] 17.246743 16.536378
[35,] 17.717853 17.047302
[36,] 18.193690 17.566114
[37,] 18.672763 18.089980
[38,] 19.153406 18.615707
[39,] 19.633793 19.139767
[40,] 20.111953 19.658329
[41,] 20.585795 20.167302
[42,] 21.053127 20.662399
[43,] 21.511691 21.139203
[44,] 21.959195 21.593252
[45,] 22.393348 22.020126
[46,] 22.811897 22.415549
[47,] 23.212674 22.775489
[48,] 23.593627 23.096261
[49,] 23.952869 23.374623
[50,] 24.288709 23.607871
[51,] 24.599695 23.793916
[52,] 24.884638 23.931348
[53,] 25.142647 24.019483
[54,] 25.373143 24.058392
[55,] 25.575879 24.048900
[56,] 25.750944 23.992572
[57,] 25.898766 23.891673
[58,] 26.020108 23.749112
[59,] 26.116051 23.568368
[60,] 26.187978 23.353404
[61,] 26.237549 23.108568
[62,] 26.266672 22.838495
[63,] 26.277471 22.548005
[64,] 26.272251 22.242006
[65,] 26.253461 21.925396
[66,] 26.223657 21.602986
[67,] 26.185469 21.279424
[68,] 26.141559 20.959136
[69,] 26.094596 20.646276
[70,] 26.047219 20.344697
[71,] 26.002014 20.057924
[72,] 25.961489 19.789144
[73,] 25.928050 19.541207
[74,] 25.903988 19.316630
[75,] 25.891462 19.117613
[76,] 25.892486 18.946054
[77,] 25.908925 18.803571
[78,] 25.942482 18.691524
[79,] 25.994694 18.611039
[80,] 26.066932 18.563027
[81,] 26.160390 18.548203
[82,] 26.276090 18.567101
[83,] 26.414873 18.620088
[84,] 26.577400 18.707370
[85,] 26.764144 18.828995
[86,] 26.975389 18.984854
[87,] 27.211227 19.174671
[88,] 27.471544 19.397995
[89,] 27.756025 19.654185
[90,] 28.064139 19.942388
[91,] 28.395134 20.261523

$DO_BoundLinDecompOp.I.vecFunc
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.087489 6.037289
 [3,] 5.175461 6.056213
 [4,] 5.263392 6.055659
 [5,] 5.350782 6.035239
 [6,] 5.437151 5.995305
 [7,] 5.522048 5.936957
 [8,] 5.605053 5.861991
 [9,] 5.685781 5.772864
[10,] 5.763884 5.672605
[11,] 5.839051 5.564719
[12,] 5.911011 5.453069
[13,] 5.979531 5.341758
[14,] 6.044413 5.234994
[15,] 6.105500 5.136965
[16,] 6.162669 5.051703
[17,] 6.215828 4.982965
[18,] 6.264921 4.934133
[19,] 6.309922 4.908101
[20,] 6.350831 4.907200
[21,] 6.387679 4.933128
[22,] 6.420520 4.986902
[23,] 6.449435 5.068826
[24,] 6.474525 5.178485
[25,] 6.495918 5.314750
[26,] 6.513759 5.475812
[27,] 6.528216 5.659227
[28,] 6.539477 5.861986
[29,] 6.547750 6.080594
[30,] 6.553260 6.311173
[31,] 6.556252 6.549573
[32,] 6.556988 6.791487
[33,] 6.555747 7.032585
[34,] 6.552823 7.268641
[35,] 6.548526 7.495661
[36,] 6.543176 7.710006
[37,] 6.537105 7.908506
[38,] 6.530653 8.088553
[39,] 6.524165 8.248185
[40,] 6.517987 8.386133
[41,] 6.512465 8.501854
[42,] 6.507939 8.595523
[43,] 6.504738 8.668007
[44,] 6.503179 8.720799
[45,] 6.503558 8.755930
[46,] 6.506149 8.775853
[47,] 6.511199 8.783307
[48,] 6.518922 8.781171
[49,] 6.529497 8.772308
[50,] 6.543065 8.759416
[51,] 6.559726 8.744880
[52,] 6.579537 8.730653
[53,] 6.602512 8.718155
[54,] 6.628619 8.708204
[55,] 6.657784 8.700984
[56,] 6.689893 8.696043
[57,] 6.724790 8.692338
[58,] 6.762286 8.688305
[59,] 6.802156 8.681956
[60,] 6.844152 8.671012
[61,] 6.888000 8.653038
[62,] 6.933408 8.625591
[63,] 6.980071 8.586376
[64,] 7.027678 8.533377
[65,] 7.075912 8.464994
[66,] 7.124462 8.380139
[67,] 7.173018 8.278325
[68,] 7.221284 8.159715
[69,] 7.268974 8.025148
[70,] 7.315821 7.876133
[71,] 7.361573 7.714818
[72,] 7.406000 7.543932
[73,] 7.448892 7.366705
[74,] 7.490063 7.186774
[75,] 7.529348 7.008069
[76,] 7.566602 6.834695
[77,] 7.601706 6.670808
[78,] 7.634561 6.520491
[79,] 7.665088 6.387628
[80,] 7.693228 6.275796
[81,] 7.718941 6.188152
[82,] 7.742208 6.127347
[83,] 7.763023 6.095447
[84,] 7.781400 6.093867
[85,] 7.797367 6.123334
[86,] 7.810967 6.183854
[87,] 7.822257 6.274715
[88,] 7.831310 6.394495
[89,] 7.838212 6.541097
[90,] 7.843060 6.711798
[91,] 7.845966 6.903325

$DO_BoundLinDecompOp.I.list1
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.088248 6.027416
 [3,] 5.178074 6.021515
 [4,] 5.268429 5.987722
 [5,] 5.358397 5.931200
 [6,] 5.447193 5.856803
 [7,] 5.534152 5.769043
 [8,] 5.618723 5.672079
 [9,] 5.700458 5.569695
[10,] 5.779008 5.465310
[11,] 5.854107 5.361976
[12,] 5.925562 5.262403
[13,] 5.993244 5.169043
[14,] 6.057070 5.084178
[15,] 6.116995 5.009952
[16,] 6.173002 4.948384
[17,] 6.225095 4.901395
[18,] 6.273292 4.870826
[19,] 6.317617 4.858469
[20,] 6.358096 4.866077
[21,] 6.394748 4.895394
[22,] 6.427592 4.948128
[23,] 6.456649 5.025637
[24,] 6.481973 5.128570
[25,] 6.503639 5.256862
[26,] 6.521753 5.409742
[27,] 6.536445 5.585726
[28,] 6.547876 5.782598
[29,] 6.556242 5.997388
[30,] 6.561771 6.226346
[31,] 6.564739 6.464910
[32,] 6.565463 6.707732
[33,] 6.564273 6.949375
[34,] 6.561483 7.185029
[35,] 6.557391 7.410540
[36,] 6.552288 7.622410
[37,] 6.546468 7.817805
[38,] 6.540229 7.994571
[39,] 6.533885 8.151261
[40,] 6.527772 8.287172
[41,] 6.522252 8.402379
[42,] 6.517718 8.497740
[43,] 6.514555 8.574560
[44,] 6.513101 8.634211
[45,] 6.513648 8.678139
[46,] 6.516447 8.707909
[47,] 6.521711 8.725210
[48,] 6.529619 8.731876
[49,] 6.540318 8.729894
[50,] 6.553929 8.721405
[51,] 6.570543 8.708707
[52,] 6.590230 8.694201
[53,] 6.613023 8.680022
[54,] 6.638911 8.667617
[55,] 6.667838 8.657735
[56,] 6.699704 8.650444
[57,] 6.734370 8.645139
[58,] 6.771657 8.640557
[59,] 6.811348 8.634806
[60,] 6.853188 8.625391
[61,] 6.896887 8.609239
[62,] 6.942118 8.582798
[63,] 6.988548 8.542751
[64,] 7.035863 8.486777
[65,] 7.083767 8.413516
[66,] 7.131977 8.322497
[67,] 7.180221 8.214094
[68,] 7.228230 8.089443
[69,] 7.275732 7.950377
[70,] 7.322448 7.799351
[71,] 7.368082 7.639386
[72,] 7.412324 7.473971
[73,] 7.454881 7.306728
[74,] 7.495541 7.140939
[75,] 7.534150 6.979617
[76,] 7.570612 6.825490
[77,] 7.604872 6.681020
[78,] 7.636915 6.548434
[79,] 7.666750 6.429744
[80,] 7.694409 6.326782
[81,] 7.719935 6.241224
[82,] 7.743380 6.174627
[83,] 7.764785 6.128513
[84,] 7.784169 6.104481
[85,] 7.801521 6.104215
[86,] 7.816806 6.129501
[87,] 7.829955 6.182245
[88,] 7.840868 6.264478
[89,] 7.849418 6.378363
[90,] 7.855448 6.526200
[91,] 7.858772 6.710422

$DO_BoundLinDecompOp.I.list2
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.088248 6.027416
 [3,] 5.178074 6.021515
 [4,] 5.268429 5.987722
 [5,] 5.358397 5.931200
 [6,] 5.447193 5.856803
 [7,] 5.534152 5.769043
 [8,] 5.618723 5.672079
 [9,] 5.700458 5.569695
[10,] 5.779008 5.465310
[11,] 5.854107 5.361976
[12,] 5.925562 5.262403
[13,] 5.993244 5.169043
[14,] 6.057070 5.084178
[15,] 6.116995 5.009952
[16,] 6.173002 4.948384
[17,] 6.225095 4.901395
[18,] 6.273292 4.870826
[19,] 6.317617 4.858469
[20,] 6.358096 4.866077
[21,] 6.394748 4.895394
[22,] 6.427592 4.948128
[23,] 6.456649 5.025637
[24,] 6.481973 5.128570
[25,] 6.503639 5.256862
[26,] 6.521753 5.409742
[27,] 6.536445 5.585726
[28,] 6.547876 5.782598
[29,] 6.556242 5.997388
[30,] 6.561771 6.226346
[31,] 6.564739 6.464910
[32,] 6.565463 6.707732
[33,] 6.564273 6.949375
[34,] 6.561483 7.185029
[35,] 6.557391 7.410540
[36,] 6.552288 7.622410
[37,] 6.546468 7.817805
[38,] 6.540229 7.994571
[39,] 6.533885 8.151261
[40,] 6.527772 8.287172
[41,] 6.522252 8.402379
[42,] 6.517718 8.497740
[43,] 6.514555 8.574560
[44,] 6.513101 8.634211
[45,] 6.513648 8.678139
[46,] 6.516447 8.707909
[47,] 6.521711 8.725210
[48,] 6.529619 8.731876
[49,] 6.540318 8.729894
[50,] 6.553929 8.721405
[51,] 6.570543 8.708707
[52,] 6.590230 8.694201
[53,] 6.613023 8.680022
[54,] 6.638911 8.667617
[55,] 6.667838 8.657735
[56,] 6.699704 8.650444
[57,] 6.734370 8.645139
[58,] 6.771657 8.640557
[59,] 6.811348 8.634806
[60,] 6.853188 8.625391
[61,] 6.896887 8.609239
[62,] 6.942118 8.582798
[63,] 6.988548 8.542751
[64,] 7.035863 8.486777
[65,] 7.083767 8.413516
[66,] 7.131977 8.322497
[67,] 7.180221 8.214094
[68,] 7.228230 8.089443
[69,] 7.275732 7.950377
[70,] 7.322448 7.799351
[71,] 7.368082 7.639386
[72,] 7.412324 7.473971
[73,] 7.454881 7.306728
[74,] 7.495541 7.140939
[75,] 7.534150 6.979617
[76,] 7.570612 6.825490
[77,] 7.604872 6.681020
[78,] 7.636915 6.548434
[79,] 7.666750 6.429744
[80,] 7.694409 6.326782
[81,] 7.719935 6.241224
[82,] 7.743380 6.174627
[83,] 7.764785 6.128513
[84,] 7.784169 6.104481
[85,] 7.801521 6.104215
[86,] 7.816806 6.129501
[87,] 7.829955 6.182245
[88,] 7.840868 6.264478
[89,] 7.849418 6.378363
[90,] 7.855448 6.526200
[91,] 7.858772 6.710422

$DO_BoundLinDecompOp.I.timeMap
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.085286 6.033771
 [3,] 5.167281 6.044484
 [4,] 5.246450 6.034170
 [5,] 5.323289 6.004834
 [6,] 5.398322 5.958457
 [7,] 5.472093 5.896952
 [8,] 5.545163 5.822129
 [9,] 5.618101 5.735683
[10,] 5.691478 5.639162
[11,] 5.765863 5.533950
[12,] 5.837663 5.431843
[13,] 5.903378 5.343910
[14,] 5.963682 5.270283
[15,] 6.019206 5.211034
[16,] 6.070536 5.166193
[17,] 6.118203 5.135756
[18,] 6.162683 5.119689
[19,] 6.204391 5.117942
[20,] 6.243676 5.130446
[21,] 6.280825 5.157126
[22,] 6.315409 5.201806
[23,] 6.346939 5.268192
[24,] 6.375506 5.356023
[25,] 6.401129 5.465068
[26,] 6.423755 5.595109
[27,] 6.443252 5.745930
[28,] 6.459426 5.917300
[29,] 6.472010 6.108957
[30,] 6.480677 6.320587
[31,] 6.485044 6.551779
[32,] 6.488129 6.788130
[33,] 6.492907 7.015165
[34,] 6.498833 7.232268
[35,] 6.505328 7.438616
[36,] 6.511790 7.633190
[37,] 6.517595 7.814799
[38,] 6.522103 7.982095
[39,] 6.524666 8.133608
[40,] 6.524637 8.267776
[41,] 6.521388 8.383008
[42,] 6.518647 8.485275
[43,] 6.520261 8.580696
[44,] 6.525609 8.667578
[45,] 6.534118 8.744328
[46,] 6.545245 8.809457
[47,] 6.558485 8.861605
[48,] 6.573370 8.899585
[49,] 6.589482 8.922404
[50,] 6.606454 8.929296
[51,] 6.623973 8.919744
[52,] 6.643068 8.901036
[53,] 6.664812 8.880514
[54,] 6.689051 8.858061
[55,] 6.715685 8.833748
[56,] 6.744679 8.807833
[57,] 6.776058 8.780754
[58,] 6.809908 8.753102
[59,] 6.846371 8.725615
[60,] 6.885647 8.699156
[61,] 6.927990 8.674693
[62,] 6.970703 8.639431
[63,] 7.011214 8.581387
[64,] 7.050039 8.502859
[65,] 7.087737 8.406206
[66,] 7.124907 8.293795
[67,] 7.162176 8.167951
[68,] 7.200193 8.030921
[69,] 7.239625 7.884843
[70,] 7.281141 7.731711
[71,] 7.325411 7.573359
[72,] 7.368616 7.415432
[73,] 7.406986 7.263223
[74,] 7.441352 7.117677
[75,] 7.472500 6.979596
[76,] 7.501169 6.849633
[77,] 7.528052 6.728301
[78,] 7.553786 6.615982
[79,] 7.578951 6.512943
[80,] 7.604063 6.419341
[81,] 7.629573 6.335237
[82,] 7.653978 6.271130
[83,] 7.675742 6.237038
[84,] 7.695148 6.232300
[85,] 7.712397 6.256315
[86,] 7.727609 6.308545
[87,] 7.740813 6.388511
[88,] 7.751957 6.495779
[89,] 7.760910 6.629949
[90,] 7.767459 6.790635
[91,]       NA       NA

$DO_BoundLinDecompOp.I.ConstInFluxes
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.397703  6.344735
 [3,]  5.785152  6.669726
 [4,]  6.162746  6.976450
 [5,]  6.531006  7.266552
 [6,]  6.890577  7.541849
 [7,]  7.242212  7.804285
 [8,]  7.586762  8.055891
 [9,]  7.925155  8.298753
[10,]  8.258393  8.534988
[11,]  8.587532  8.766711
[12,]  8.913667  8.996017
[13,]  9.237922  9.224961
[14,]  9.561436  9.455540
[15,]  9.885349  9.689683
[16,] 10.210788  9.929236
[17,] 10.538857 10.175954
[18,] 10.870626 10.431496
[19,] 11.207118 10.697412
[20,] 11.549295 10.975139
[21,] 11.898056 11.265991
[22,] 12.254215 11.571148
[23,] 12.618498 11.891651
[24,] 12.991530 12.228383
[25,] 13.373823 12.582055
[26,] 13.765765 12.953195
[27,] 14.167614 13.342123
[28,] 14.579479 13.748931
[29,] 15.001319 14.173466
[30,] 15.432927 14.615301
[31,] 15.873924 15.073717
[32,] 16.323752 15.547676
[33,] 16.781669 16.035805
[34,] 17.246743 16.536378
[35,] 17.717853 17.047302
[36,] 18.193690 17.566114
[37,] 18.672763 18.089980
[38,] 19.153406 18.615707
[39,] 19.633793 19.139767
[40,] 20.111953 19.658329
[41,] 20.585795 20.167302
[42,] 21.053127 20.662399
[43,] 21.511691 21.139203
[44,] 21.959195 21.593252
[45,] 22.393348 22.020126
[46,] 22.811897 22.415549
[47,] 23.212674 22.775489
[48,] 23.593627 23.096261
[49,] 23.952869 23.374623
[50,] 24.288709 23.607871
[51,] 24.599695 23.793916
[52,] 24.884638 23.931348
[53,] 25.142647 24.019483
[54,] 25.373143 24.058392
[55,] 25.575879 24.048900
[56,] 25.750944 23.992572
[57,] 25.898766 23.891673
[58,] 26.020108 23.749112
[59,] 26.116051 23.568368
[60,] 26.187978 23.353404
[61,] 26.237549 23.108568
[62,] 26.266672 22.838495
[63,] 26.277471 22.548005
[64,] 26.272251 22.242006
[65,] 26.253461 21.925396
[66,] 26.223657 21.602986
[67,] 26.185469 21.279424
[68,] 26.141559 20.959136
[69,] 26.094596 20.646276
[70,] 26.047219 20.344697
[71,] 26.002014 20.057924
[72,] 25.961489 19.789144
[73,] 25.928050 19.541207
[74,] 25.903988 19.316630
[75,] 25.891462 19.117613
[76,] 25.892486 18.946054
[77,] 25.908925 18.803571
[78,] 25.942482 18.691524
[79,] 25.994694 18.611039
[80,] 26.066932 18.563027
[81,] 26.160390 18.548203
[82,] 26.276090 18.567101
[83,] 26.414873 18.620088
[84,] 26.577400 18.707370
[85,] 26.764144 18.828995
[86,] 26.975389 18.984854
[87,] 27.211227 19.174671
[88,] 27.471544 19.397995
[89,] 27.756025 19.654185
[90,] 28.064139 19.942388
[91,] 28.395134 20.261523

$DO_BoundLinDecompOp.I.UnBoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.087489 6.037289
 [3,] 5.175461 6.056213
 [4,] 5.263392 6.055659
 [5,] 5.350782 6.035239
 [6,] 5.437151 5.995305
 [7,] 5.522048 5.936957
 [8,] 5.605053 5.861991
 [9,] 5.685781 5.772864
[10,] 5.763884 5.672605
[11,] 5.839051 5.564719
[12,] 5.911011 5.453069
[13,] 5.979531 5.341758
[14,] 6.044413 5.234994
[15,] 6.105500 5.136965
[16,] 6.162669 5.051703
[17,] 6.215828 4.982965
[18,] 6.264921 4.934133
[19,] 6.309922 4.908101
[20,] 6.350831 4.907200
[21,] 6.387679 4.933128
[22,] 6.420520 4.986902
[23,] 6.449435 5.068826
[24,] 6.474525 5.178485
[25,] 6.495918 5.314750
[26,] 6.513759 5.475812
[27,] 6.528216 5.659227
[28,] 6.539477 5.861986
[29,] 6.547750 6.080594
[30,] 6.553260 6.311173
[31,] 6.556252 6.549573
[32,] 6.556988 6.791487
[33,] 6.555747 7.032585
[34,] 6.552823 7.268641
[35,] 6.548526 7.495661
[36,] 6.543176 7.710006
[37,] 6.537105 7.908506
[38,] 6.530653 8.088553
[39,] 6.524165 8.248185
[40,] 6.517987 8.386133
[41,] 6.512465 8.501854
[42,] 6.507939 8.595523
[43,] 6.504738 8.668007
[44,] 6.503179 8.720799
[45,] 6.503558 8.755930
[46,] 6.506149 8.775853
[47,] 6.511199 8.783307
[48,] 6.518922 8.781171
[49,] 6.529497 8.772308
[50,] 6.543065 8.759416
[51,] 6.559726 8.744880
[52,] 6.579537 8.730653
[53,] 6.602512 8.718155
[54,] 6.628619 8.708204
[55,] 6.657784 8.700984
[56,] 6.689893 8.696043
[57,] 6.724790 8.692338
[58,] 6.762286 8.688305
[59,] 6.802156 8.681956
[60,] 6.844152 8.671012
[61,] 6.888000 8.653038
[62,] 6.933408 8.625591
[63,] 6.980071 8.586376
[64,] 7.027678 8.533377
[65,] 7.075912 8.464994
[66,] 7.124462 8.380139
[67,] 7.173018 8.278325
[68,] 7.221284 8.159715
[69,] 7.268974 8.025148
[70,] 7.315821 7.876133
[71,] 7.361573 7.714818
[72,] 7.406000 7.543932
[73,] 7.448892 7.366705
[74,] 7.490063 7.186774
[75,] 7.529348 7.008069
[76,] 7.566602 6.834695
[77,] 7.601706 6.670808
[78,] 7.634561 6.520491
[79,] 7.665088 6.387628
[80,] 7.693228 6.275796
[81,] 7.718941 6.188152
[82,] 7.742208 6.127347
[83,] 7.763023 6.095447
[84,] 7.781400 6.093867
[85,] 7.797367 6.123334
[86,] 7.810967 6.183854
[87,] 7.822257 6.274715
[88,] 7.831310 6.394495
[89,] 7.838212 6.541097
[90,] 7.843060 6.711798
[91,] 7.845966 6.903325

$DO_BoundLinDecompOp.I.BoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.087489 6.037289
 [3,] 5.175461 6.056213
 [4,] 5.263392 6.055659
 [5,] 5.350782 6.035239
 [6,] 5.437151 5.995305
 [7,] 5.522048 5.936957
 [8,] 5.605053 5.861991
 [9,] 5.685781 5.772864
[10,] 5.763884 5.672605
[11,] 5.839051 5.564719
[12,] 5.911011 5.453069
[13,] 5.979531 5.341758
[14,] 6.044413 5.234994
[15,] 6.105500 5.136965
[16,] 6.162669 5.051703
[17,] 6.215828 4.982965
[18,] 6.264921 4.934133
[19,] 6.309922 4.908101
[20,] 6.350831 4.907200
[21,] 6.387679 4.933128
[22,] 6.420520 4.986902
[23,] 6.449435 5.068826
[24,] 6.474525 5.178485
[25,] 6.495918 5.314750
[26,] 6.513759 5.475812
[27,] 6.528216 5.659227
[28,] 6.539477 5.861986
[29,] 6.547750 6.080594
[30,] 6.553260 6.311173
[31,] 6.556252 6.549573
[32,] 6.556988 6.791487
[33,] 6.555747 7.032585
[34,] 6.552823 7.268641
[35,] 6.548526 7.495661
[36,] 6.543176 7.710006
[37,] 6.537105 7.908506
[38,] 6.530653 8.088553
[39,] 6.524165 8.248185
[40,] 6.517987 8.386133
[41,] 6.512465 8.501854
[42,] 6.507939 8.595523
[43,] 6.504738 8.668007
[44,] 6.503179 8.720799
[45,] 6.503558 8.755930
[46,] 6.506149 8.775853
[47,] 6.511199 8.783307
[48,] 6.518922 8.781171
[49,] 6.529497 8.772308
[50,] 6.543065 8.759416
[51,] 6.559726 8.744880
[52,] 6.579537 8.730653
[53,] 6.602512 8.718155
[54,] 6.628619 8.708204
[55,] 6.657784 8.700984
[56,] 6.689893 8.696043
[57,] 6.724790 8.692338
[58,] 6.762286 8.688305
[59,] 6.802156 8.681956
[60,] 6.844152 8.671012
[61,] 6.888000 8.653038
[62,] 6.933408 8.625591
[63,] 6.980071 8.586376
[64,] 7.027678 8.533377
[65,] 7.075912 8.464994
[66,] 7.124462 8.380139
[67,] 7.173018 8.278325
[68,] 7.221284 8.159715
[69,] 7.268974 8.025148
[70,] 7.315821 7.876133
[71,] 7.361573 7.714818
[72,] 7.406000 7.543932
[73,] 7.448892 7.366705
[74,] 7.490063 7.186774
[75,] 7.529348 7.008069
[76,] 7.566602 6.834695
[77,] 7.601706 6.670808
[78,] 7.634561 6.520491
[79,] 7.665088 6.387628
[80,] 7.693228 6.275796
[81,] 7.718941 6.188152
[82,] 7.742208 6.127347
[83,] 7.763023 6.095447
[84,] 7.781400 6.093867
[85,] 7.797367 6.123334
[86,] 7.810967 6.183854
[87,] 7.822257 6.274715
[88,] 7.831310 6.394495
[89,] 7.838212 6.541097
[90,] 7.843060 6.711798
[91,] 7.845966 6.903325

$DO_UnBoundLinDecompOp.I.vec
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.397703  6.344735
 [3,]  5.785152  6.669726
 [4,]  6.162746  6.976450
 [5,]  6.531006  7.266552
 [6,]  6.890577  7.541849
 [7,]  7.242212  7.804285
 [8,]  7.586762  8.055891
 [9,]  7.925155  8.298753
[10,]  8.258393  8.534988
[11,]  8.587532  8.766711
[12,]  8.913667  8.996017
[13,]  9.237922  9.224961
[14,]  9.561436  9.455540
[15,]  9.885349  9.689683
[16,] 10.210788  9.929236
[17,] 10.538857 10.175954
[18,] 10.870626 10.431496
[19,] 11.207118 10.697412
[20,] 11.549295 10.975139
[21,] 11.898056 11.265991
[22,] 12.254215 11.571148
[23,] 12.618498 11.891651
[24,] 12.991530 12.228383
[25,] 13.373823 12.582055
[26,] 13.765765 12.953195
[27,] 14.167614 13.342123
[28,] 14.579479 13.748931
[29,] 15.001319 14.173466
[30,] 15.432927 14.615301
[31,] 15.873924 15.073717
[32,] 16.323752 15.547676
[33,] 16.781669 16.035805
[34,] 17.246743 16.536378
[35,] 17.717853 17.047302
[36,] 18.193690 17.566114
[37,] 18.672763 18.089980
[38,] 19.153406 18.615707
[39,] 19.633793 19.139767
[40,] 20.111953 19.658329
[41,] 20.585795 20.167302
[42,] 21.053127 20.662399
[43,] 21.511691 21.139203
[44,] 21.959195 21.593252
[45,] 22.393348 22.020126
[46,] 22.811897 22.415549
[47,] 23.212674 22.775489
[48,] 23.593627 23.096261
[49,] 23.952869 23.374623
[50,] 24.288709 23.607871
[51,] 24.599695 23.793916
[52,] 24.884638 23.931348
[53,] 25.142647 24.019483
[54,] 25.373143 24.058392
[55,] 25.575879 24.048900
[56,] 25.750944 23.992572
[57,] 25.898766 23.891673
[58,] 26.020108 23.749112
[59,] 26.116051 23.568368
[60,] 26.187978 23.353404
[61,] 26.237549 23.108568
[62,] 26.266672 22.838495
[63,] 26.277471 22.548005
[64,] 26.272251 22.242006
[65,] 26.253461 21.925396
[66,] 26.223657 21.602986
[67,] 26.185469 21.279424
[68,] 26.141559 20.959136
[69,] 26.094596 20.646276
[70,] 26.047219 20.344697
[71,] 26.002014 20.057924
[72,] 25.961489 19.789144
[73,] 25.928050 19.541207
[74,] 25.903988 19.316630
[75,] 25.891462 19.117613
[76,] 25.892486 18.946054
[77,] 25.908925 18.803571
[78,] 25.942482 18.691524
[79,] 25.994694 18.611039
[80,] 26.066932 18.563027
[81,] 26.160390 18.548203
[82,] 26.276090 18.567101
[83,] 26.414873 18.620088
[84,] 26.577400 18.707370
[85,] 26.764144 18.828995
[86,] 26.975389 18.984854
[87,] 27.211227 19.174671
[88,] 27.471544 19.397995
[89,] 27.756025 19.654185
[90,] 28.064139 19.942388
[91,] 28.395134 20.261523

$DO_UnBoundLinDecompOp.I.vecFunc
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.087489 6.037289
 [3,] 5.175461 6.056213
 [4,] 5.263392 6.055659
 [5,] 5.350782 6.035239
 [6,] 5.437151 5.995305
 [7,] 5.522048 5.936957
 [8,] 5.605053 5.861991
 [9,] 5.685781 5.772864
[10,] 5.763884 5.672605
[11,] 5.839051 5.564719
[12,] 5.911011 5.453069
[13,] 5.979531 5.341758
[14,] 6.044413 5.234994
[15,] 6.105500 5.136965
[16,] 6.162669 5.051703
[17,] 6.215828 4.982965
[18,] 6.264921 4.934133
[19,] 6.309922 4.908101
[20,] 6.350831 4.907200
[21,] 6.387679 4.933128
[22,] 6.420520 4.986902
[23,] 6.449435 5.068826
[24,] 6.474525 5.178485
[25,] 6.495918 5.314750
[26,] 6.513759 5.475812
[27,] 6.528216 5.659227
[28,] 6.539477 5.861986
[29,] 6.547750 6.080594
[30,] 6.553260 6.311173
[31,] 6.556252 6.549573
[32,] 6.556988 6.791487
[33,] 6.555747 7.032585
[34,] 6.552823 7.268641
[35,] 6.548526 7.495661
[36,] 6.543176 7.710006
[37,] 6.537105 7.908506
[38,] 6.530653 8.088553
[39,] 6.524165 8.248185
[40,] 6.517987 8.386133
[41,] 6.512465 8.501854
[42,] 6.507939 8.595523
[43,] 6.504738 8.668007
[44,] 6.503179 8.720799
[45,] 6.503558 8.755930
[46,] 6.506149 8.775853
[47,] 6.511199 8.783307
[48,] 6.518922 8.781171
[49,] 6.529497 8.772308
[50,] 6.543065 8.759416
[51,] 6.559726 8.744880
[52,] 6.579537 8.730653
[53,] 6.602512 8.718155
[54,] 6.628619 8.708204
[55,] 6.657784 8.700984
[56,] 6.689893 8.696043
[57,] 6.724790 8.692338
[58,] 6.762286 8.688305
[59,] 6.802156 8.681956
[60,] 6.844152 8.671012
[61,] 6.888000 8.653038
[62,] 6.933408 8.625591
[63,] 6.980071 8.586376
[64,] 7.027678 8.533377
[65,] 7.075912 8.464994
[66,] 7.124462 8.380139
[67,] 7.173018 8.278325
[68,] 7.221284 8.159715
[69,] 7.268974 8.025148
[70,] 7.315821 7.876133
[71,] 7.361573 7.714818
[72,] 7.406000 7.543932
[73,] 7.448892 7.366705
[74,] 7.490063 7.186774
[75,] 7.529348 7.008069
[76,] 7.566602 6.834695
[77,] 7.601706 6.670808
[78,] 7.634561 6.520491
[79,] 7.665088 6.387628
[80,] 7.693228 6.275796
[81,] 7.718941 6.188152
[82,] 7.742208 6.127347
[83,] 7.763023 6.095447
[84,] 7.781400 6.093867
[85,] 7.797367 6.123334
[86,] 7.810967 6.183854
[87,] 7.822257 6.274715
[88,] 7.831310 6.394495
[89,] 7.838212 6.541097
[90,] 7.843060 6.711798
[91,] 7.845966 6.903325

$DO_UnBoundLinDecompOp.I.list1
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.088248 6.027416
 [3,] 5.178074 6.021515
 [4,] 5.268429 5.987722
 [5,] 5.358397 5.931200
 [6,] 5.447193 5.856803
 [7,] 5.534152 5.769043
 [8,] 5.618723 5.672079
 [9,] 5.700458 5.569695
[10,] 5.779008 5.465310
[11,] 5.854107 5.361976
[12,] 5.925562 5.262403
[13,] 5.993244 5.169043
[14,] 6.057070 5.084178
[15,] 6.116995 5.009952
[16,] 6.173002 4.948384
[17,] 6.225095 4.901395
[18,] 6.273292 4.870826
[19,] 6.317617 4.858469
[20,] 6.358096 4.866077
[21,] 6.394748 4.895394
[22,] 6.427592 4.948128
[23,] 6.456649 5.025637
[24,] 6.481973 5.128570
[25,] 6.503639 5.256862
[26,] 6.521753 5.409742
[27,] 6.536445 5.585726
[28,] 6.547876 5.782598
[29,] 6.556242 5.997388
[30,] 6.561771 6.226346
[31,] 6.564739 6.464910
[32,] 6.565463 6.707732
[33,] 6.564273 6.949375
[34,] 6.561483 7.185029
[35,] 6.557391 7.410540
[36,] 6.552288 7.622410
[37,] 6.546468 7.817805
[38,] 6.540229 7.994571
[39,] 6.533885 8.151261
[40,] 6.527772 8.287172
[41,] 6.522252 8.402379
[42,] 6.517718 8.497740
[43,] 6.514555 8.574560
[44,] 6.513101 8.634211
[45,] 6.513648 8.678139
[46,] 6.516447 8.707909
[47,] 6.521711 8.725210
[48,] 6.529619 8.731876
[49,] 6.540318 8.729894
[50,] 6.553929 8.721405
[51,] 6.570543 8.708707
[52,] 6.590230 8.694201
[53,] 6.613023 8.680022
[54,] 6.638911 8.667617
[55,] 6.667838 8.657735
[56,] 6.699704 8.650444
[57,] 6.734370 8.645139
[58,] 6.771657 8.640557
[59,] 6.811348 8.634806
[60,] 6.853188 8.625391
[61,] 6.896887 8.609239
[62,] 6.942118 8.582798
[63,] 6.988548 8.542751
[64,] 7.035863 8.486777
[65,] 7.083767 8.413516
[66,] 7.131977 8.322497
[67,] 7.180221 8.214094
[68,] 7.228230 8.089443
[69,] 7.275732 7.950377
[70,] 7.322448 7.799351
[71,] 7.368082 7.639386
[72,] 7.412324 7.473971
[73,] 7.454881 7.306728
[74,] 7.495541 7.140939
[75,] 7.534150 6.979617
[76,] 7.570612 6.825490
[77,] 7.604872 6.681020
[78,] 7.636915 6.548434
[79,] 7.666750 6.429744
[80,] 7.694409 6.326782
[81,] 7.719935 6.241224
[82,] 7.743380 6.174627
[83,] 7.764785 6.128513
[84,] 7.784169 6.104481
[85,] 7.801521 6.104215
[86,] 7.816806 6.129501
[87,] 7.829955 6.182245
[88,] 7.840868 6.264478
[89,] 7.849418 6.378363
[90,] 7.855448 6.526200
[91,] 7.858772 6.710422

$DO_UnBoundLinDecompOp.I.list2
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.088248 6.027416
 [3,] 5.178074 6.021515
 [4,] 5.268429 5.987722
 [5,] 5.358397 5.931200
 [6,] 5.447193 5.856803
 [7,] 5.534152 5.769043
 [8,] 5.618723 5.672079
 [9,] 5.700458 5.569695
[10,] 5.779008 5.465310
[11,] 5.854107 5.361976
[12,] 5.925562 5.262403
[13,] 5.993244 5.169043
[14,] 6.057070 5.084178
[15,] 6.116995 5.009952
[16,] 6.173002 4.948384
[17,] 6.225095 4.901395
[18,] 6.273292 4.870826
[19,] 6.317617 4.858469
[20,] 6.358096 4.866077
[21,] 6.394748 4.895394
[22,] 6.427592 4.948128
[23,] 6.456649 5.025637
[24,] 6.481973 5.128570
[25,] 6.503639 5.256862
[26,] 6.521753 5.409742
[27,] 6.536445 5.585726
[28,] 6.547876 5.782598
[29,] 6.556242 5.997388
[30,] 6.561771 6.226346
[31,] 6.564739 6.464910
[32,] 6.565463 6.707732
[33,] 6.564273 6.949375
[34,] 6.561483 7.185029
[35,] 6.557391 7.410540
[36,] 6.552288 7.622410
[37,] 6.546468 7.817805
[38,] 6.540229 7.994571
[39,] 6.533885 8.151261
[40,] 6.527772 8.287172
[41,] 6.522252 8.402379
[42,] 6.517718 8.497740
[43,] 6.514555 8.574560
[44,] 6.513101 8.634211
[45,] 6.513648 8.678139
[46,] 6.516447 8.707909
[47,] 6.521711 8.725210
[48,] 6.529619 8.731876
[49,] 6.540318 8.729894
[50,] 6.553929 8.721405
[51,] 6.570543 8.708707
[52,] 6.590230 8.694201
[53,] 6.613023 8.680022
[54,] 6.638911 8.667617
[55,] 6.667838 8.657735
[56,] 6.699704 8.650444
[57,] 6.734370 8.645139
[58,] 6.771657 8.640557
[59,] 6.811348 8.634806
[60,] 6.853188 8.625391
[61,] 6.896887 8.609239
[62,] 6.942118 8.582798
[63,] 6.988548 8.542751
[64,] 7.035863 8.486777
[65,] 7.083767 8.413516
[66,] 7.131977 8.322497
[67,] 7.180221 8.214094
[68,] 7.228230 8.089443
[69,] 7.275732 7.950377
[70,] 7.322448 7.799351
[71,] 7.368082 7.639386
[72,] 7.412324 7.473971
[73,] 7.454881 7.306728
[74,] 7.495541 7.140939
[75,] 7.534150 6.979617
[76,] 7.570612 6.825490
[77,] 7.604872 6.681020
[78,] 7.636915 6.548434
[79,] 7.666750 6.429744
[80,] 7.694409 6.326782
[81,] 7.719935 6.241224
[82,] 7.743380 6.174627
[83,] 7.764785 6.128513
[84,] 7.784169 6.104481
[85,] 7.801521 6.104215
[86,] 7.816806 6.129501
[87,] 7.829955 6.182245
[88,] 7.840868 6.264478
[89,] 7.849418 6.378363
[90,] 7.855448 6.526200
[91,] 7.858772 6.710422

$DO_UnBoundLinDecompOp.I.timeMap
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.085286 6.033771
 [3,] 5.167281 6.044484
 [4,] 5.246450 6.034170
 [5,] 5.323289 6.004834
 [6,] 5.398322 5.958457
 [7,] 5.472093 5.896952
 [8,] 5.545163 5.822129
 [9,] 5.618101 5.735683
[10,] 5.691478 5.639162
[11,] 5.765863 5.533950
[12,] 5.837663 5.431843
[13,] 5.903378 5.343910
[14,] 5.963682 5.270283
[15,] 6.019206 5.211034
[16,] 6.070536 5.166193
[17,] 6.118203 5.135756
[18,] 6.162683 5.119689
[19,] 6.204391 5.117942
[20,] 6.243676 5.130446
[21,] 6.280825 5.157126
[22,] 6.315409 5.201806
[23,] 6.346939 5.268192
[24,] 6.375506 5.356023
[25,] 6.401129 5.465068
[26,] 6.423755 5.595109
[27,] 6.443252 5.745930
[28,] 6.459426 5.917300
[29,] 6.472010 6.108957
[30,] 6.480677 6.320587
[31,] 6.485044 6.551779
[32,] 6.488129 6.788130
[33,] 6.492907 7.015165
[34,] 6.498833 7.232268
[35,] 6.505328 7.438616
[36,] 6.511790 7.633190
[37,] 6.517595 7.814799
[38,] 6.522103 7.982095
[39,] 6.524666 8.133608
[40,] 6.524637 8.267776
[41,] 6.521388 8.383008
[42,] 6.518647 8.485275
[43,] 6.520261 8.580696
[44,] 6.525609 8.667578
[45,] 6.534118 8.744328
[46,] 6.545245 8.809457
[47,] 6.558485 8.861605
[48,] 6.573370 8.899585
[49,] 6.589482 8.922404
[50,] 6.606454 8.929296
[51,] 6.623973 8.919744
[52,] 6.643068 8.901036
[53,] 6.664812 8.880514
[54,] 6.689051 8.858061
[55,] 6.715685 8.833748
[56,] 6.744679 8.807833
[57,] 6.776058 8.780754
[58,] 6.809908 8.753102
[59,] 6.846371 8.725615
[60,] 6.885647 8.699156
[61,] 6.927990 8.674693
[62,] 6.970703 8.639431
[63,] 7.011214 8.581387
[64,] 7.050039 8.502859
[65,] 7.087737 8.406206
[66,] 7.124907 8.293795
[67,] 7.162176 8.167951
[68,] 7.200193 8.030921
[69,] 7.239625 7.884843
[70,] 7.281141 7.731711
[71,] 7.325411 7.573359
[72,] 7.368616 7.415432
[73,] 7.406986 7.263223
[74,] 7.441352 7.117677
[75,] 7.472500 6.979596
[76,] 7.501169 6.849633
[77,] 7.528052 6.728301
[78,] 7.553786 6.615982
[79,] 7.578951 6.512943
[80,] 7.604063 6.419341
[81,] 7.629573 6.335237
[82,] 7.653978 6.271130
[83,] 7.675742 6.237038
[84,] 7.695148 6.232300
[85,] 7.712397 6.256315
[86,] 7.727609 6.308545
[87,] 7.740813 6.388511
[88,] 7.751957 6.495779
[89,] 7.760910 6.629949
[90,] 7.767459 6.790635
[91,]       NA       NA

$DO_UnBoundLinDecompOp.I.ConstInFluxes
           [,1]      [,2]
 [1,]  5.000000  6.000000
 [2,]  5.397703  6.344735
 [3,]  5.785152  6.669726
 [4,]  6.162746  6.976450
 [5,]  6.531006  7.266552
 [6,]  6.890577  7.541849
 [7,]  7.242212  7.804285
 [8,]  7.586762  8.055891
 [9,]  7.925155  8.298753
[10,]  8.258393  8.534988
[11,]  8.587532  8.766711
[12,]  8.913667  8.996017
[13,]  9.237922  9.224961
[14,]  9.561436  9.455540
[15,]  9.885349  9.689683
[16,] 10.210788  9.929236
[17,] 10.538857 10.175954
[18,] 10.870626 10.431496
[19,] 11.207118 10.697412
[20,] 11.549295 10.975139
[21,] 11.898056 11.265991
[22,] 12.254215 11.571148
[23,] 12.618498 11.891651
[24,] 12.991530 12.228383
[25,] 13.373823 12.582055
[26,] 13.765765 12.953195
[27,] 14.167614 13.342123
[28,] 14.579479 13.748931
[29,] 15.001319 14.173466
[30,] 15.432927 14.615301
[31,] 15.873924 15.073717
[32,] 16.323752 15.547676
[33,] 16.781669 16.035805
[34,] 17.246743 16.536378
[35,] 17.717853 17.047302
[36,] 18.193690 17.566114
[37,] 18.672763 18.089980
[38,] 19.153406 18.615707
[39,] 19.633793 19.139767
[40,] 20.111953 19.658329
[41,] 20.585795 20.167302
[42,] 21.053127 20.662399
[43,] 21.511691 21.139203
[44,] 21.959195 21.593252
[45,] 22.393348 22.020126
[46,] 22.811897 22.415549
[47,] 23.212674 22.775489
[48,] 23.593627 23.096261
[49,] 23.952869 23.374623
[50,] 24.288709 23.607871
[51,] 24.599695 23.793916
[52,] 24.884638 23.931348
[53,] 25.142647 24.019483
[54,] 25.373143 24.058392
[55,] 25.575879 24.048900
[56,] 25.750944 23.992572
[57,] 25.898766 23.891673
[58,] 26.020108 23.749112
[59,] 26.116051 23.568368
[60,] 26.187978 23.353404
[61,] 26.237549 23.108568
[62,] 26.266672 22.838495
[63,] 26.277471 22.548005
[64,] 26.272251 22.242006
[65,] 26.253461 21.925396
[66,] 26.223657 21.602986
[67,] 26.185469 21.279424
[68,] 26.141559 20.959136
[69,] 26.094596 20.646276
[70,] 26.047219 20.344697
[71,] 26.002014 20.057924
[72,] 25.961489 19.789144
[73,] 25.928050 19.541207
[74,] 25.903988 19.316630
[75,] 25.891462 19.117613
[76,] 25.892486 18.946054
[77,] 25.908925 18.803571
[78,] 25.942482 18.691524
[79,] 25.994694 18.611039
[80,] 26.066932 18.563027
[81,] 26.160390 18.548203
[82,] 26.276090 18.567101
[83,] 26.414873 18.620088
[84,] 26.577400 18.707370
[85,] 26.764144 18.828995
[86,] 26.975389 18.984854
[87,] 27.211227 19.174671
[88,] 27.471544 19.397995
[89,] 27.756025 19.654185
[90,] 28.064139 19.942388
[91,] 28.395134 20.261523

$DO_UnBoundLinDecompOp.I.UnBoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.087489 6.037289
 [3,] 5.175461 6.056213
 [4,] 5.263392 6.055659
 [5,] 5.350782 6.035239
 [6,] 5.437151 5.995305
 [7,] 5.522048 5.936957
 [8,] 5.605053 5.861991
 [9,] 5.685781 5.772864
[10,] 5.763884 5.672605
[11,] 5.839051 5.564719
[12,] 5.911011 5.453069
[13,] 5.979531 5.341758
[14,] 6.044413 5.234994
[15,] 6.105500 5.136965
[16,] 6.162669 5.051703
[17,] 6.215828 4.982965
[18,] 6.264921 4.934133
[19,] 6.309922 4.908101
[20,] 6.350831 4.907200
[21,] 6.387679 4.933128
[22,] 6.420520 4.986902
[23,] 6.449435 5.068826
[24,] 6.474525 5.178485
[25,] 6.495918 5.314750
[26,] 6.513759 5.475812
[27,] 6.528216 5.659227
[28,] 6.539477 5.861986
[29,] 6.547750 6.080594
[30,] 6.553260 6.311173
[31,] 6.556252 6.549573
[32,] 6.556988 6.791487
[33,] 6.555747 7.032585
[34,] 6.552823 7.268641
[35,] 6.548526 7.495661
[36,] 6.543176 7.710006
[37,] 6.537105 7.908506
[38,] 6.530653 8.088553
[39,] 6.524165 8.248185
[40,] 6.517987 8.386133
[41,] 6.512465 8.501854
[42,] 6.507939 8.595523
[43,] 6.504738 8.668007
[44,] 6.503179 8.720799
[45,] 6.503558 8.755930
[46,] 6.506149 8.775853
[47,] 6.511199 8.783307
[48,] 6.518922 8.781171
[49,] 6.529497 8.772308
[50,] 6.543065 8.759416
[51,] 6.559726 8.744880
[52,] 6.579537 8.730653
[53,] 6.602512 8.718155
[54,] 6.628619 8.708204
[55,] 6.657784 8.700984
[56,] 6.689893 8.696043
[57,] 6.724790 8.692338
[58,] 6.762286 8.688305
[59,] 6.802156 8.681956
[60,] 6.844152 8.671012
[61,] 6.888000 8.653038
[62,] 6.933408 8.625591
[63,] 6.980071 8.586376
[64,] 7.027678 8.533377
[65,] 7.075912 8.464994
[66,] 7.124462 8.380139
[67,] 7.173018 8.278325
[68,] 7.221284 8.159715
[69,] 7.268974 8.025148
[70,] 7.315821 7.876133
[71,] 7.361573 7.714818
[72,] 7.406000 7.543932
[73,] 7.448892 7.366705
[74,] 7.490063 7.186774
[75,] 7.529348 7.008069
[76,] 7.566602 6.834695
[77,] 7.601706 6.670808
[78,] 7.634561 6.520491
[79,] 7.665088 6.387628
[80,] 7.693228 6.275796
[81,] 7.718941 6.188152
[82,] 7.742208 6.127347
[83,] 7.763023 6.095447
[84,] 7.781400 6.093867
[85,] 7.797367 6.123334
[86,] 7.810967 6.183854
[87,] 7.822257 6.274715
[88,] 7.831310 6.394495
[89,] 7.838212 6.541097
[90,] 7.843060 6.711798
[91,] 7.845966 6.903325

$DO_UnBoundLinDecompOp.I.BoundInFluxes
          [,1]     [,2]
 [1,] 5.000000 6.000000
 [2,] 5.087489 6.037289
 [3,] 5.175461 6.056213
 [4,] 5.263392 6.055659
 [5,] 5.350782 6.035239
 [6,] 5.437151 5.995305
 [7,] 5.522048 5.936957
 [8,] 5.605053 5.861991
 [9,] 5.685781 5.772864
[10,] 5.763884 5.672605
[11,] 5.839051 5.564719
[12,] 5.911011 5.453069
[13,] 5.979531 5.341758
[14,] 6.044413 5.234994
[15,] 6.105500 5.136965
[16,] 6.162669 5.051703
[17,] 6.215828 4.982965
[18,] 6.264921 4.934133
[19,] 6.309922 4.908101
[20,] 6.350831 4.907200
[21,] 6.387679 4.933128
[22,] 6.420520 4.986902
[23,] 6.449435 5.068826
[24,] 6.474525 5.178485
[25,] 6.495918 5.314750
[26,] 6.513759 5.475812
[27,] 6.528216 5.659227
[28,] 6.539477 5.861986
[29,] 6.547750 6.080594
[30,] 6.553260 6.311173
[31,] 6.556252 6.549573
[32,] 6.556988 6.791487
[33,] 6.555747 7.032585
[34,] 6.552823 7.268641
[35,] 6.548526 7.495661
[36,] 6.543176 7.710006
[37,] 6.537105 7.908506
[38,] 6.530653 8.088553
[39,] 6.524165 8.248185
[40,] 6.517987 8.386133
[41,] 6.512465 8.501854
[42,] 6.507939 8.595523
[43,] 6.504738 8.668007
[44,] 6.503179 8.720799
[45,] 6.503558 8.755930
[46,] 6.506149 8.775853
[47,] 6.511199 8.783307
[48,] 6.518922 8.781171
[49,] 6.529497 8.772308
[50,] 6.543065 8.759416
[51,] 6.559726 8.744880
[52,] 6.579537 8.730653
[53,] 6.602512 8.718155
[54,] 6.628619 8.708204
[55,] 6.657784 8.700984
[56,] 6.689893 8.696043
[57,] 6.724790 8.692338
[58,] 6.762286 8.688305
[59,] 6.802156 8.681956
[60,] 6.844152 8.671012
[61,] 6.888000 8.653038
[62,] 6.933408 8.625591
[63,] 6.980071 8.586376
[64,] 7.027678 8.533377
[65,] 7.075912 8.464994
[66,] 7.124462 8.380139
[67,] 7.173018 8.278325
[68,] 7.221284 8.159715
[69,] 7.268974 8.025148
[70,] 7.315821 7.876133
[71,] 7.361573 7.714818
[72,] 7.406000 7.543932
[73,] 7.448892 7.366705
[74,] 7.490063 7.186774
[75,] 7.529348 7.008069
[76,] 7.566602 6.834695
[77,] 7.601706 6.670808
[78,] 7.634561 6.520491
[79,] 7.665088 6.387628
[80,] 7.693228 6.275796
[81,] 7.718941 6.188152
[82,] 7.742208 6.127347
[83,] 7.763023 6.095447
[84,] 7.781400 6.093867
[85,] 7.797367 6.123334
[86,] 7.810967 6.183854
[87,] 7.822257 6.274715
[88,] 7.831310 6.394495
[89,] 7.838212 6.541097
[90,] 7.843060 6.711798
[91,] 7.845966 6.903325

> 
> # inst/examples/ModelExamples.R CorrectNonautonomousLinearModelExplicit:
> 
>   # This example describes the creation and use of a Model object that 
>   # is defined by time dependent functions for decomposition and influx.
>   # The constructor of the Model-class  (see  ?Model) 
>   # works for different combinations of 
>   # arguments.
>   # Although Model (the constructor function for objects of this class 
>   # accepts many many more convenient kinds of arguments,
>   # we will in this example call the constructor whith arguments which 
>   # are of the same type as one of hte current internal 
>   # representations in the 
>   # Model object and create these arguments explicitly beforehand 
>   # to demonstrate the approach with the most flexibility.
>   # We start with the Decomposition Operator.
>   # For this example we assume that we are able to describe the
>   # decomposition ofperator  by explicit R functions that are valid 
>   # for a finite time interval.
>   # Therefore we choose the appropriate  sub class BoundLinDecompOp
>   # of DecompOp explicitly.  (see ?'BoundLinDecompOp-class') 
>   A=BoundLinDecompOp(
+     ## We call the generic constructor (see ?BoundLindDcompOp) 
+     ## which has a method  
+     ## that takes a matrix-valued function of time as its first argument.
+     ## (Although Model accepts time series data directly and 
+     ## will derive the internally used interpolating for you, 
+     ## the function argument could for instance represent the result
+     ## of a very sophisticated interpolation performed by yourself)
+     function(t){
+       matrix(nrow=3,ncol=3,byrow=TRUE,
+          c(
+            -1,    0,        0,
+           0.5,   -2,        0,
+             0,    1, sin(t)-1 
+         )
+       )    
+     },
+     ## The other two arguments describe the time interval where the 
+     ## function is valid (the domain of the function)
+     ## The interval will be checked against the domain of the InFlux
+     ## argument of Model and against its 't' argument to avoid 
+     ## invalid computations outside the domain. 
+     ## (Inf and -Inf are possible values, but should only be used 
+     ## if the function is really valid for all times, which is 
+     ## especially untrue for functions resulting from interpolations,
+     ## which are usually extremely misleading for arguments outside the 
+     ## domain covered by the data that has been used for the interpolation.)
+     ## This is a safety net against wrong results origination from unitendet EXTRApolation )
+     starttime=0,
+     endtime=20
+   )  
>   I=BoundInFluxes(
+      ## The first argument is a vector-valued function of time
+      function(t){
+        matrix(nrow=3,ncol=1,byrow=TRUE,
+            c(-1,    0,    0)
+        )
+      },
+      ## The other two arguments describe the time interval where the 
+      ## function is valid (the domain of the function)
+      starttime=0,
+      endtime=40
+   )
>   ## No we specify the points in time where we want 
>   ## to compute results
>   t_start=0 
>   t_end=10 
>   tn=50
>   timestep <- (t_end-t_start)/tn 
>   times <- seq(t_start,t_end,timestep) 
>   ## and the start values
>   sv=c(0,0,0)
>   mod=Model(t=times,A,sv,I)
> 
>   ## No we use the model to compute some results
>   getC(mod)
            [,1]         [,2]         [,3]
 [1,]  0.0000000  0.000000000  0.000000000
 [2,] -0.1812689 -0.008215504 -0.000550927
 [3,] -0.3296798 -0.027172203 -0.003719337
 [4,] -0.4511884 -0.050892324 -0.010783621
 [5,] -0.5506709 -0.075810207 -0.022329267
 [6,] -0.6321204 -0.099894381 -0.038646957
 [7,] -0.6988056 -0.122082633 -0.059836311
 [8,] -0.7534029 -0.141904323 -0.085748144
 [9,] -0.7981033 -0.159242487 -0.115827382
[10,] -0.8347009 -0.174181627 -0.148930474
[11,] -0.8646646 -0.186911355 -0.183202434
[12,] -0.8891968 -0.197667790 -0.216111640
[13,] -0.9092821 -0.206698468 -0.244712326
[14,] -0.9257265 -0.214242361 -0.266153445
[15,] -0.9391900 -0.220519458 -0.278302053
[16,] -0.9502129 -0.225726185 -0.280289301
[17,] -0.9592378 -0.230034307 -0.272755650
[18,] -0.9666267 -0.233591821 -0.257663413
[19,] -0.9726763 -0.236524795 -0.237777892
[20,] -0.9776292 -0.238939730 -0.216001715
[21,] -0.9816844 -0.240926046 -0.194803358
[22,] -0.9850044 -0.242558427 -0.175924752
[23,] -0.9877226 -0.243899010 -0.160328443
[24,] -0.9899482 -0.244999338 -0.148357189
[25,] -0.9917702 -0.245902053 -0.139953709
[26,] -0.9932620 -0.246642370 -0.134873988
[27,] -0.9944834 -0.247249319 -0.132840709
[28,] -0.9954834 -0.247746802 -0.133638398
[29,] -0.9963021 -0.248154480 -0.137161142
[30,] -0.9969724 -0.248488508 -0.143431029
[31,] -0.9975212 -0.248762154 -0.152601605
[32,] -0.9979706 -0.248986309 -0.164953243
[33,] -0.9983384 -0.249169906 -0.180881674
[34,] -0.9986396 -0.249320273 -0.200875446
[35,] -0.9988862 -0.249443418 -0.225471986
[36,] -0.9990881 -0.249544262 -0.255179647
[37,] -0.9992534 -0.249626842 -0.290349377
[38,] -0.9993887 -0.249694463 -0.330984200
[39,] -0.9994995 -0.249749834 -0.376488551
[40,] -0.9995903 -0.249795172 -0.425388956
[41,] -0.9996645 -0.249832295 -0.475100388
[42,] -0.9997253 -0.249862690 -0.521867737
[43,] -0.9997751 -0.249887577 -0.561013478
[44,] -0.9998159 -0.249907954 -0.587590747
[45,] -0.9998493 -0.249924638 -0.597376579
[46,] -0.9998766 -0.249938298 -0.587979792
[47,] -0.9998990 -0.249949482 -0.559649904
[48,] -0.9999173 -0.249958639 -0.515437256
[49,] -0.9999323 -0.249966136 -0.460553744
[50,] -0.9999445 -0.249972275 -0.401157846
[51,] -0.9999546 -0.249977300 -0.343009072
>   getReleaseFlux(mod)
             [,1]         [,2]          [,3]
 [1,]  0.00000000  0.000000000  0.000000e+00
 [2,] -0.09063443 -0.008215504 -4.414747e-04
 [3,] -0.16483991 -0.027172203 -2.270959e-03
 [4,] -0.22559418 -0.050892324 -4.694731e-03
 [5,] -0.27533544 -0.075810207 -6.311231e-03
 [6,] -0.31606020 -0.099894381 -6.126664e-03
 [7,] -0.34940282 -0.122082633 -4.066530e-03
 [8,] -0.37670143 -0.141904323 -1.247659e-03
 [9,] -0.39905166 -0.159242487 -4.938844e-05
[10,] -0.41735047 -0.174181627 -3.894885e-03
[11,] -0.43233228 -0.186911355 -1.661693e-02
[12,] -0.44459838 -0.197667790 -4.138616e-02
[13,] -0.45464103 -0.206698468 -7.941816e-02
[14,] -0.46286324 -0.214242361 -1.289510e-01
[15,] -0.46959501 -0.220519458 -1.850742e-01
[16,] -0.47510647 -0.225726185 -2.407349e-01
[17,] -0.47961891 -0.230034307 -2.886775e-01
[18,] -0.48331337 -0.233591821 -3.235070e-01
[19,] -0.48633814 -0.236524795 -3.429995e-01
[20,] -0.48881461 -0.238939730 -3.481641e-01
[21,] -0.49084218 -0.240926046 -3.422310e-01
[22,] -0.49250221 -0.242558427 -3.292565e-01
[23,] -0.49386132 -0.243899010 -3.128973e-01
[24,] -0.49497408 -0.244999338 -2.957784e-01
[25,] -0.49588512 -0.245902053 -2.793706e-01
[26,] -0.49663102 -0.246642370 -2.642079e-01
[27,] -0.49724171 -0.247249319 -2.501995e-01
[28,] -0.49774170 -0.247746802 -2.369094e-01
[29,] -0.49815106 -0.248154480 -2.237464e-01
[30,] -0.49848622 -0.248488508 -2.100694e-01
[31,] -0.49876062 -0.248762154 -1.952409e-01
[32,] -0.49898528 -0.248986309 -1.786591e-01
[33,] -0.49916922 -0.249169906 -1.598001e-01
[34,] -0.49931981 -0.249320273 -1.382944e-01
[35,] -0.49944311 -0.249443418 -1.140633e-01
[36,] -0.49954405 -0.249544262 -8.753004e-02
[37,] -0.49962670 -0.249626842 -5.990841e-02
[38,] -0.49969437 -0.249694463 -3.352602e-02
[39,] -0.49974977 -0.249749834 -1.207788e-02
[40,] -0.49979513 -0.249795172 -6.196448e-04
[41,] -0.49983227 -0.249832295 -5.055901e-03
[42,] -0.49986267 -0.249862690 -3.093081e-02
[43,] -0.49988756 -0.249887577 -8.157197e-02
[44,] -0.49990795 -0.249907954 -1.560658e-01
[45,] -0.49992463 -0.249924638 -2.479607e-01
[46,] -0.49993829 -0.249938298 -3.456625e-01
[47,] -0.49994948 -0.249949482 -4.349096e-01
[48,] -0.49995864 -0.249958639 -5.026671e-01
[49,] -0.49996614 -0.249966136 -5.408406e-01
[50,] -0.49997227 -0.249972275 -5.481738e-01
[51,] -0.49997730 -0.249977300 -5.296132e-01
>   #also look at the methods section of Model-class 
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Model_14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("OnepModel")
> ### * OnepModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: OnepModel
> ### Title: Implementation of a one pool model
> ### Aliases: OnepModel
> 
> ### ** Examples
> 
> t_start=0 
> t_end=10 
> tn=50
> timestep=(t_end-t_start)/tn 
> t=seq(t_start,t_end,timestep) 
> k=0.8
> C0=100
> In = 30
> 
> 
> Ex=OnepModel(t,k,C0,In)
> Ct=getC(Ex)
> Rt=getReleaseFlux(Ex)
> Rc=getAccumulatedRelease(Ex)
> 
> plot(
+ t,
+ Ct,
+ type="l",
+ ylab="Carbon stocks (arbitrary units)",
+ xlab="Time (arbitrary units)",
+ lwd=2
+ ) 
> 
> plot(
+ t,
+ Rt,
+ type="l",
+ ylab="Carbon released (arbitrary units)",
+ xlab="Time (arbitrary units)",
+ lwd=2
+ ) 
> 
> plot(
+ t,
+ Rc,
+ type="l",
+ ylab="Cummulative carbon released (arbitrary units)",
+ xlab="Time (arbitrary units)",
+ lwd=2
+ ) 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("OnepModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("OnepModel14")
> ### * OnepModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: OnepModel14
> ### Title: Implementation of a one-pool C14 model
> ### Aliases: OnepModel14
> 
> ### ** Examples
> 
> years=seq(1901,2009,by=0.5)
> LitterInput=700 
> 
> Ex=OnepModel14(t=years,k=1/10,C0=500, F0=0,In=LitterInput, inputFc=C14Atm_NH)
> C14t=getF14(Ex)
> 
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years, C14t[,1], col=4)
> legend(
+ "topright",
+ c("Delta 14C Atmosphere", "Delta 14C in SOM"),
+ lty=c(1,1),
+ col=c(1,4),
+ lwd=c(1,1),
+ bty="n"
+ )
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("OnepModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("ParallelModel")
> ### * ParallelModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ParallelModel
> ### Title: models for unconnected pools
> ### Aliases: ParallelModel
> 
> ### ** Examples
> 
> t_start=0 
> t_end=10 
> tn=50
> timestep=(t_end-t_start)/tn 
> t=seq(t_start,t_end,timestep) 
> k=TimeMap(
+ function(times){c(-0.5,-0.2,-0.3)},
+ t_start,
+ t_end
+ )
> c0=c(1, 2, 3)
> #constant inputrates
> inputrates=BoundInFluxes(
+ function(t){matrix(nrow=3,ncol=1,c(1,1,1))},
+ t_start,
+ t_end
+ ) 
> mod=ParallelModel(t,k,c0,inputrates)
> Y=getC(mod)
> lt1=1 ;lt2=2 ;lt3=3 
> col1=1; col2=2; col3=3
> plot(t,Y[,1],type="l",lty=lt1,col=col1,
+ ylab="C stocks",xlab="Time") 
> lines(t,Y[,2],type="l",lty=lt2,col=col2) 
> lines(t,Y[,3],type="l",lty=lt3,col=col3) 
> legend(
+ "topleft",
+ c("C in pool 1",
+ "C in 2",
+ "C in pool 3"
+ ),
+ lty=c(lt1,lt2,lt3),
+ col=c(col1,col2,col3)
+ )
> Y=getAccumulatedRelease(mod)
> plot(t,Y[,1],type="l",lty=lt1,col=col1,ylab="C release",xlab="Time") 
> lines(t,Y[,2],lt2,type="l",lty=lt2,col=col2) 
> lines(t,Y[,3],type="l",lty=lt3,col=col3) 
> legend("topright",c("R1","R2","R3"),lty=c(lt1,lt2,lt3),col=c(col1,col2,col3))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ParallelModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("RothCModel")
> ### * RothCModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: RothCModel
> ### Title: Implementation of the RothCModel
> ### Aliases: RothCModel
> 
> ### ** Examples
> 
> t=0:500 
> Ex=RothCModel(t)
> Ct=getC(Ex)
> Rt=getReleaseFlux(Ex)
> 
> matplot(t,Ct,type="l",col=1:5, ylim=c(0,25),
+ ylab=expression(paste("Carbon stores (Mg C ", ha^-1,")")),
+ xlab="Time (years)", lty=1)
> lines(t,rowSums(Ct),lwd=2)
> legend("topleft",
+ c("Pool 1, DPM",
+ "Pool 2, RPM",
+ "Pool 3, BIO",
+ "Pool 4, HUM",
+ "Pool 5, IOM",
+ "Total Carbon"),
+ lty=1,
+ lwd=c(rep(1,5),2),
+ col=c(1:5,1),
+ bty="n"
+ )
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("RothCModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("SHCal20")
> ### * SHCal20
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: SHCal20
> ### Title: The SHCal20 southern hemisphere radiocarbon curve for the
> ###   0-55,000 yr BP period
> ### Aliases: SHCal20
> ### Keywords: datasets
> 
> ### ** Examples
> 
>     plot(SHCal20$CAL.BP, SHCal20$Delta.14C, type="l", 
+          xlab="cal BP", ylab="Delta14C (per mil)")
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("SHCal20", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("SeriesLinearModel")
> ### * SeriesLinearModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: SeriesLinearModel
> ### Title: General m-pool linear model with series structure
> ### Aliases: SeriesLinearModel
> 
> ### ** Examples
> 
> #A five-pool model
> t_start=0 
> t_end=10 
> tn=50
> timestep=(t_end-t_start)/tn 
> t=seq(t_start,t_end,timestep) 
> ks=c(k1=0.8,k2=0.4,k3=0.2, k4=0.1,k5=0.05)
> Ts=c(0.5,0.2,0.2,0.1)
> C0=c(C10=100,C20=150, C30=50, C40=50, C50=10)
> In = 50
> #
> Ex1=SeriesLinearModel(t=t,m.pools=5,ki=ks,Tij=Ts,C0=C0,In=In,xi=fT.Q10(15))
> Ct=getC(Ex1)
> #
> matplot(t,Ct,type="l",col=2:6,lty=1,ylim=c(0,sum(C0)))
> lines(t,rowSums(Ct),lwd=2)
> legend("topright",c("Total C","C in pool 1", "C in pool 2","C in pool 3",
+ "C in pool 4","C in pool 5"),
+ lty=1,col=1:6,lwd=c(2,rep(1,5)),bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("SeriesLinearModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("SeriesLinearModel14")
> ### * SeriesLinearModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: SeriesLinearModel14
> ### Title: General m-pool linear C14 model with series structure
> ### Aliases: SeriesLinearModel14
> 
> ### ** Examples
> 
> years=seq(1901,2009,by=0.5)
> LitterInput=700 
> 
> Ex=SeriesLinearModel14(
+ t=years,ki=c(k1=1/2.8, k2=1/35, k3=1/100), m.pools=3,
+ C0=c(200,5000,500), F0_Delta14C=c(0,0,0),
+ In=LitterInput, Tij=c(0.5, 0.1),inputFc=C14Atm_NH
+ )
> R14m=getF14R(Ex)
> C14m=getF14C(Ex)
> C14t=getF14(Ex)
> 
> par(mfrow=c(2,1))
> plot(C14Atm_NH,type="l",xlab="Year",
+ ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years, C14t[,1], col=4)
> lines(years, C14t[,2],col=4,lwd=2)
> lines(years, C14t[,3],col=4,lwd=3)
> legend(
+ "topright",
+ c("Delta 14C Atmosphere", "Delta 14C pool 1", "Delta 14C pool 2", "Delta 14C pool 3"),
+ lty=rep(1,4),col=c(1,4,4,4),lwd=c(1,1,2,3),bty="n")
> 
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years,C14m,col=4)
> lines(years,R14m,col=2)
> legend("topright",c("Delta 14C Atmosphere","Delta 14C SOM", "Delta 14C Respired"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> par(mfrow=c(1,1))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("SeriesLinearModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("ThreepFeedbackModel")
> ### * ThreepFeedbackModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ThreepFeedbackModel
> ### Title: Implementation of a three pool model with feedback structure
> ### Aliases: ThreepFeedbackModel
> 
> ### ** Examples
> 
> t_start=0 
> t_end=10 
> tn=50
> timestep=(t_end-t_start)/tn 
> t=seq(t_start,t_end,timestep) 
> ks=c(k1=0.8,k2=0.4,k3=0.2)
> C0=c(C10=100,C20=150, C30=50)
> In = 60
> 
> Temp=rnorm(t,15,1)
> TempEffect=data.frame(t,fT.Daycent1(Temp))
> 
> Ex1=ThreepFeedbackModel(t=t,ks=ks,a21=0.5,a12=0.1,a32=0.2,a23=0.1,C0=C0,In=In,xi=TempEffect)
> Ct=getC(Ex1)
> Rt=getReleaseFlux(Ex1)
> 
> plot(
+ t,
+ rowSums(Ct),
+ type="l",
+ ylab="Carbon stocks (arbitrary units)",
+ xlab="Time (arbitrary units)",
+ lwd=2,
+ ylim=c(0,sum(Ct[51,]))
+ ) 
> lines(t,Ct[,1],col=2)
> lines(t,Ct[,2],col=4)
> lines(t,Ct[,3],col=3)
> legend(
+ "topleft",
+ c("Total C","C in pool 1", "C in pool 2","C in pool 3"),
+ lty=c(1,1,1,1),
+ col=c(1,2,4,3),
+ lwd=c(2,1,1,1),
+ bty="n"
+ )
> 
> plot(
+ t,
+ rowSums(Rt),
+ type="l",
+ ylab="Carbon released (arbitrary units)",
+ xlab="Time (arbitrary units)",
+ lwd=2,
+ ylim=c(0,sum(Rt[51,]))
+ ) 
> lines(t,Rt[,1],col=2)
> lines(t,Rt[,2],col=4)
> lines(t,Rt[,3],col=3)
> legend(
+ "topleft",
+ c("Total C release",
+ "C release from pool 1",
+ "C release from pool 2",
+ "C release from pool 3"),
+ lty=c(1,1,1,1),
+ col=c(1,2,4,3),
+ lwd=c(2,1,1,1),
+ bty="n"
+ )
> 
> Inr=data.frame(t,Random.inputs=rnorm(length(t),50,10))
> plot(Inr,type="l")
> 
> Ex2=ThreepFeedbackModel(t=t,ks=ks,a21=0.5,a12=0.1,a32=0.2,a23=0.1,C0=C0,In=Inr)
> Ctr=getC(Ex2)
> Rtr=getReleaseFlux(Ex2)
> 
> plot(
+ t,
+ rowSums(Ctr),
+ type="l",
+ ylab="Carbon stocks (arbitrary units)",
+ xlab="Time (arbitrary units)",
+ lwd=2,
+ ylim=c(0,sum(Ctr[51,]))
+ ) 
> lines(t,Ctr[,1],col=2)
> lines(t,Ctr[,2],col=4)
> lines(t,Ctr[,3],col=3)
> legend("topright",c("Total C","C in pool 1", "C in pool 2","C in pool 3"),
+ lty=c(1,1,1,1),col=c(1,2,4,3),lwd=c(2,1,1,1),bty="n")
> 
> plot(t,rowSums(Rtr),type="l",ylab="Carbon released (arbitrary units)",
+ xlab="Time (arbitrary units)",lwd=2,ylim=c(0,sum(Rtr[51,]))) 
> lines(t,Rtr[,1],col=2)
> lines(t,Rtr[,2],col=4)
> lines(t,Rtr[,3],col=3)
> legend(
+ "topright",
+ c("Total C release",
+ "C release from pool 1",
+ "C release from pool 2",
+ "C release from pool 3"
+ ),
+ lty=c(1,1,1,1),
+ col=c(1,2,4,3),
+ lwd=c(2,1,1,1),
+ bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ThreepFeedbackModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("ThreepFeedbackModel14")
> ### * ThreepFeedbackModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ThreepFeedbackModel14
> ### Title: Implementation of a three-pool C14 model with feedback structure
> ### Aliases: ThreepFeedbackModel14
> 
> ### ** Examples
> 
> #years=seq(1901,2009,by=0.5)
> years=seq(1904,2009,by=0.5)
> LitterInput=100
> k1=1/2; k2=1/10; k3=1/50
> a21=0.9*k1
> a12=0.4*k2
> a32=0.4*k2
> a23=0.7*k3
> 
> Feedback=ThreepFeedbackModel14(
+ t=years,
+ ks=c(k1=k1, k2=k2, k3=k3),
+ C0=c(100,500,1000),
+ F0_Delta14C=c(0,0,0),
+ In=LitterInput,
+ a21=a21,
+ a12=a12,
+ a32=a32,
+ a23=a23,
+ inputFc=C14Atm_NH
+ )
> F.R14m=getF14R(Feedback)
> F.C14m=getF14C(Feedback)
> F.C14t=getF14(Feedback)
> 
> Series=ThreepSeriesModel14(
+ t=years,
+ ks=c(k1=k1, k2=k2, k3=k3),
+ C0=c(100,500,1000),
+ F0_Delta14C=c(0,0,0),
+ In=LitterInput,
+ a21=a21,
+ a32=a32,
+ inputFc=C14Atm_NH
+ )
> S.R14m=getF14R(Series)
> S.C14m=getF14C(Series)
> S.C14t=getF14(Series)
> 
> Parallel=ThreepParallelModel14(
+ t=years,
+ ks=c(k1=k1, k2=k2, k3=k3),
+ C0=c(100,500,1000),
+ F0_Delta14C=c(0,0,0),
+ In=LitterInput,
+ gam1=0.6,
+ gam2=0.2,
+ inputFc=C14Atm_NH,
+ lag=2
+ )
> P.R14m=getF14R(Parallel)
> P.C14m=getF14C(Parallel)
> P.C14t=getF14(Parallel)
> 
> par(mfrow=c(3,2))
> plot(
+ C14Atm_NH,
+ type="l",
+ xlab="Year",
+ ylab=expression(paste(Delta^14,"C ","(\u2030)")),
+ xlim=c(1940,2010)
+ ) 
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
> lines(years, P.C14t[,1], col=4)
> lines(years, P.C14t[,2],col=4,lwd=2)
> lines(years, P.C14t[,3],col=4,lwd=3)
> legend(
+ "topright",
+ c("Atmosphere", "Pool 1", "Pool 2", "Pool 3"),
+ lty=rep(1,4),
+ col=c(1,4,4,4),
+ lwd=c(1,1,2,3),
+ bty="n"
+ )
> 
> plot(C14Atm_NH,type="l",xlab="Year",
+ ylab=expression(paste(Delta^14,"C ","(\u2030)")),xlim=c(1940,2010)) 
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
> lines(years,P.C14m,col=4)
> lines(years,P.R14m,col=2)
> legend("topright",c("Atmosphere","Bulk SOM", "Respired C"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> 
> plot(C14Atm_NH,type="l",xlab="Year",
+ ylab=expression(paste(Delta^14,"C ","(\u2030)")),xlim=c(1940,2010)) 
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
> lines(years, S.C14t[,1], col=4)
> lines(years, S.C14t[,2],col=4,lwd=2)
> lines(years, S.C14t[,3],col=4,lwd=3)
> legend("topright",c("Atmosphere", "Pool 1", "Pool 2", "Pool 3"),
+ lty=rep(1,4),col=c(1,4,4,4),lwd=c(1,1,2,3),bty="n")
> 
> plot(C14Atm_NH,type="l",xlab="Year",
+ ylab=expression(paste(Delta^14,"C ","(\u2030)")),xlim=c(1940,2010)) 
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
> lines(years,S.C14m,col=4)
> lines(years,S.R14m,col=2)
> legend("topright",c("Atmosphere","Bulk SOM", "Respired C"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> 
> plot(C14Atm_NH,type="l",xlab="Year",
+ ylab=expression(paste(Delta^14,"C ","(\u2030)")),xlim=c(1940,2010)) 
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
> lines(years, F.C14t[,1], col=4)
> lines(years, F.C14t[,2],col=4,lwd=2)
> lines(years, F.C14t[,3],col=4,lwd=3)
> legend("topright",c("Atmosphere", "Pool 1", "Pool 2", "Pool 3"),
+ lty=rep(1,4),col=c(1,4,4,4),lwd=c(1,1,2,3),bty="n")
> 
> plot(C14Atm_NH,type="l",xlab="Year",
+ ylab=expression(paste(Delta^14,"C ","(\u2030)")),xlim=c(1940,2010)) 
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  font metrics unknown for Unicode character U+2030
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <e2>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <80>
Warning in title(...) :
  conversion failure on '(‰)' in 'mbcsToSbcs': dot substituted for <b0>
> lines(years,F.C14m,col=4)
> lines(years,F.R14m,col=2)
> legend("topright",c("Atmosphere","Bulk SOM", "Respired C"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> 
> 
> par(mfrow=c(1,1))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ThreepFeedbackModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("ThreepParallelModel")
> ### * ThreepParallelModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ThreepParallelModel
> ### Title: Implementation of a three pool model with parallel structure
> ### Aliases: ThreepParallelModel
> 
> ### ** Examples
> 
> t_start=0 
> t_end=10 
> tn=50
> timestep=(t_end-t_start)/tn 
> t=seq(t_start,t_end,timestep) 
> 
> Ex=ThreepParallelModel(t,ks=c(k1=0.5,k2=0.2,k3=0.1),
+ C0=c(c10=100, c20=150,c30=50),In=20,gam1=0.7,gam2=0.1,xi=0.5)
> Ct=getC(Ex)
> 
> plot(t,rowSums(Ct),type="l",lwd=2,
+ ylab="Carbon stocks (arbitrary units)",xlab="Time",ylim=c(0,sum(Ct[1,]))) 
> lines(t,Ct[,1],col=2)
> lines(t,Ct[,2],col=4)
> lines(t,Ct[,3],col=3)
> legend("topright",c("Total C","C in pool 1", "C in pool 2","C in pool 3"),
+ lty=c(1,1,1,1),col=c(1,2,4,3),lwd=c(2,1,1,1),bty="n")
> 
> Rt=getReleaseFlux(Ex)
> plot(t,rowSums(Rt),type="l",ylab="Carbon released (arbitrary units)",
+ xlab="Time",lwd=2,ylim=c(0,sum(Rt[1,]))) 
> lines(t,Rt[,1],col=2)
> lines(t,Rt[,2],col=4)
> lines(t,Rt[,3],col=3)
> legend("topright",c("Total C release","C release from pool 1",
+ "C release from pool 2","C release from pool 3"),
+ lty=c(1,1,1,1),col=c(1,2,4,3),lwd=c(2,1,1,1),bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ThreepParallelModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("ThreepParallelModel14")
> ### * ThreepParallelModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ThreepParallelModel14
> ### Title: Implementation of a three-pool C14 model with parallel structure
> ### Aliases: ThreepParallelModel14
> 
> ### ** Examples
> 
> years=seq(1903,2009,by=0.5) # note that we 
> LitterInput=700 
> 
> Ex=ThreepParallelModel14(
+ t=years,
+ ks=c(k1=1/2.8, k2=1/35, k3=1/100),
+ C0=c(200,5000,500),
+ F0_Delta14C=c(0,0,0),
+ In=LitterInput,
+ gam1=0.7,
+ gam2=0.1,
+ inputFc=C14Atm_NH,
+ lag=2
+ )
> R14m=getF14R(Ex)
> C14m=getF14C(Ex)
> C14t=getF14(Ex)
> 
> par(mfrow=c(2,1))
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years, C14t[,1], col=4)
> lines(years, C14t[,2],col=4,lwd=2)
> lines(years, C14t[,3],col=4,lwd=3)
> legend(
+ "topright",
+ c(
+ "Delta 14C Atmosphere", 
+ "Delta 14C pool 1",
+ "Delta 14C pool 2", 
+ "Delta 14C pool 3"
+ ),
+ lty=rep(1,4),
+ col=c(1,4,4,4),
+ lwd=c(1,1,2,3),
+ bty="n"
+ )
> 
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years,C14m,col=4)
> lines(years,R14m,col=2)
> legend("topright",c("Delta 14C Atmosphere","Delta 14C SOM", "Delta 14C Respired"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> par(mfrow=c(1,1))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ThreepParallelModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("ThreepSeriesModel")
> ### * ThreepSeriesModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ThreepSeriesModel
> ### Title: Implementation of a three pool model with series structure
> ### Aliases: ThreepSeriesModel
> 
> ### ** Examples
> 
> t_start=0 
> t_end=10 
> tn=50
> timestep=(t_end-t_start)/tn 
> t=seq(t_start,t_end,timestep) 
> ks=c(k1=0.8,k2=0.4,k3=0.2)
> C0=c(C10=100,C20=150, C30=50)
> In = 50
> 
> Ex1=ThreepSeriesModel(t=t,ks=ks,a21=0.5,a32=0.2,C0=C0,In=In,xi=fT.Q10(15))
> Ct=getC(Ex1)
> Rt=getReleaseFlux(Ex1)
> 
> plot(t,rowSums(Ct),type="l",ylab="Carbon stocks (arbitrary units)",
+ xlab="Time (arbitrary units)",lwd=2,ylim=c(0,sum(Ct[1,]))) 
> lines(t,Ct[,1],col=2)
> lines(t,Ct[,2],col=4)
> lines(t,Ct[,3],col=3)
> legend("topright",c("Total C","C in pool 1", "C in pool 2","C in pool 3"),
+ lty=c(1,1,1,1),col=c(1,2,4,3),lwd=c(2,1,1,1),bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ThreepSeriesModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("ThreepSeriesModel14")
> ### * ThreepSeriesModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ThreepSeriesModel14
> ### Title: Implementation of a three-pool C14 model with series structure
> ### Aliases: ThreepSeriesModel14
> 
> ### ** Examples
> 
> years=seq(1901,2009,by=0.5)
> LitterInput=700 
> 
> Ex=ThreepSeriesModel14(
+ t=years,ks=c(k1=1/2.8, k2=1/35, k3=1/100),
+ C0=c(200,5000,500), F0_Delta14C=c(0,0,0),
+ In=LitterInput, a21=0.1, a32=0.01,inputFc=C14Atm_NH
+ )
> R14m=getF14R(Ex)
> C14m=getF14C(Ex)
> C14t=getF14(Ex)
> 
> par(mfrow=c(2,1))
> plot(C14Atm_NH,type="l",xlab="Year",
+ ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years, C14t[,1], col=4)
> lines(years, C14t[,2],col=4,lwd=2)
> lines(years, C14t[,3],col=4,lwd=3)
> legend(
+ "topright",
+ c("Delta 14C Atmosphere", "Delta 14C pool 1", "Delta 14C pool 2", "Delta 14C pool 3"),
+ lty=rep(1,4),col=c(1,4,4,4),lwd=c(1,1,2,3),bty="n")
> 
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years,C14m,col=4)
> lines(years,R14m,col=2)
> legend("topright",c("Delta 14C Atmosphere","Delta 14C SOM", "Delta 14C Respired"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> par(mfrow=c(1,1))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ThreepSeriesModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("ThreepairMMmodel")
> ### * ThreepairMMmodel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ThreepairMMmodel
> ### Title: Implementation of a 6-pool Michaelis-Menten model
> ### Aliases: ThreepairMMmodel
> 
> ### ** Examples
> 
> days=seq(0,1000)
> #Run the model with default parameter values
> MMmodel=ThreepairMMmodel(t=days,ival=rep(c(100,10),3),ks=c(0.1,0.05,0.01),
+ kb=c(0.005,0.001,0.0005),Km=c(100,150,200),r=c(0.9,0.9,0.9),
+ ADD=c(3,1,0.5))
> Cpools=getC(MMmodel)
> #Time solution
> matplot(days,Cpools,type="l",ylab="Concentrations",xlab="Days",lty=rep(1:2,3),
+ ylim=c(0,max(Cpools)*1.2),col=rep(1:3,each=2),
+ main="Multi-substrate microbial model")
> legend("topright",c("Substrate 1", "Microbial biomass 1", 
+ "Substrate 2", "Microbial biomass 2",
+ "Substrate 3", "Microbial biomass 3"),
+ lty=rep(1:2,3),col=rep(1:3,each=2),
+ bty="n")
> #State-space diagram
> plot(Cpools[,2],Cpools[,1],type="l",ylab="Substrate",xlab="Microbial biomass")
> lines(Cpools[,4],Cpools[,3],col=2)
> lines(Cpools[,6],Cpools[,5],col=3)
> legend("topright",c("Substrate-Enzyme pair 1","Substrate-Enzyme pair 2",
+ "Substrate-Enzyme pair 3"),col=1:3,lty=1,bty="n")
> #Microbial biomass over time
> plot(days,Cpools[,2],type="l",col=2,xlab="Days",ylab="Microbial biomass")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ThreepairMMmodel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("TwopFeedbackModel")
> ### * TwopFeedbackModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TwopFeedbackModel
> ### Title: Implementation of a two pool model with feedback structure
> ### Aliases: TwopFeedbackModel
> 
> ### ** Examples
> 
> #This example show the difference between the three types of two-pool models  
> times=seq(0,20,by=0.1)
> ks=c(k1=0.8,k2=0.00605)
> C0=c(C10=5,C20=5)
> 
> Temp=rnorm(times,15,2)
> WC=runif(times,10,20)
> TempEffect=data.frame(times,fT=fT.Daycent1(Temp))
> MoistEffect=data.frame(times, fW=fW.Daycent2(WC)[2])
> 
> Inmean=1
> InRand=data.frame(times,Random.inputs=rnorm(length(times),Inmean,0.2))
> InSin=data.frame(times,Inmean+0.5*sin(times*pi*2))
> 
> Parallel=TwopParallelModel(t=times,ks=ks,C0=C0,In=Inmean,gam=0.9,
+ xi=(fT.Daycent1(15)*fW.Demeter(15)))
> Series=TwopSeriesModel(t=times,ks=ks,a21=0.2*ks[1],C0=C0,In=InSin,
+ xi=(fT.Daycent1(15)*fW.Demeter(15)))
> Feedback=TwopFeedbackModel(t=times,ks=ks,a21=0.2*ks[1],a12=0.5*ks[2],C0=C0,
+ In=InRand,xi=MoistEffect)
> 
> CtP=getC(Parallel)
> CtS=getC(Series)
> CtF=getC(Feedback)
> 
> RtP=getReleaseFlux(Parallel)
> RtS=getReleaseFlux(Series)
> RtF=getReleaseFlux(Feedback)
> 
> par(mfrow=c(2,1),mar=c(4,4,1,1))
> plot(times,rowSums(CtP),type="l",ylim=c(0,20),ylab="Carbon stocks (arbitrary units)",xlab=" ")
> lines(times,rowSums(CtS),col=2)
> lines(times,rowSums(CtF),col=3)
> legend("topleft",c("Two-pool Parallel","Two-pool Series","Two-pool Feedback"),
+ lty=c(1,1,1),col=c(1,2,3),bty="n")
> 
> plot(times,rowSums(RtP),type="l",ylim=c(0,3),ylab="Carbon release (arbitrary units)", xlab="Time")
> lines(times,rowSums(RtS),col=2)
> lines(times,rowSums(RtF),col=3)
> par(mfrow=c(1,1))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TwopFeedbackModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("TwopFeedbackModel14")
> ### * TwopFeedbackModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TwopFeedbackModel14
> ### Title: Implementation of a two-pool C14 model with feedback structure
> ### Aliases: TwopFeedbackModel14
> 
> ### ** Examples
> 
> years=seq(1901,2009,by=0.5)
> LitterInput=700 
> 
> Ex=TwopFeedbackModel14(t=years,ks=c(k1=1/2.8, k2=1/35),C0=c(200,5000), 
+ F0_Delta14C=c(0,0),In=LitterInput, a21=0.1,a12=0.01,inputFc=C14Atm_NH)
> R14m=getF14R(Ex)
> C14m=getF14C(Ex)
> C14t=getF14(Ex)
> 
> par(mfrow=c(2,1))
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years, C14t[,1], col=4)
> lines(years, C14t[,2],col=4,lwd=2)
> legend("topright",c("Delta 14C Atmosphere", "Delta 14C pool 1", "Delta 14C pool 2"),
+ lty=c(1,1,1),col=c(1,4,4),lwd=c(1,1,2),bty="n")
> 
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years,C14m,col=4)
> lines(years,R14m,col=2)
> legend("topright",c("Delta 14C Atmosphere","Delta 14C SOM", "Delta 14C Respired"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> par(mfrow=c(1,1))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TwopFeedbackModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("TwopMMmodel")
> ### * TwopMMmodel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TwopMMmodel
> ### Title: Implementation of a two-pool Michaelis-Menten model
> ### Aliases: TwopMMmodel
> 
> ### ** Examples
> 
> days=seq(0,1000,0.5)
> MMmodel=TwopMMmodel(t=days,ival=c(100,10))
> Cpools=getC(MMmodel)
> matplot(days,Cpools,type="l",ylab="Concentrations",xlab="Days",lty=1,ylim=c(0,max(Cpools)*1.2))
> legend("topleft",c("SOM-C", "Microbial biomass"),lty=1,col=c(1,2),bty="n")
> ks=0.000018
> kb=0.007
> r=0.6
> ADD=3.2
> #Analytical solution of fixed points
> #Cs_=kb/((1-r)*ks) wrong look at the sympy test print twopMModel.pdf
> Km=900
> Af=1
> Cs=kb*Km/(Af*ks*(1-r)-kb)
> abline(h=Cs,lty=2)
> Cb=(ADD*(1-r))/(r*kb)
> abline(h=Cb,lty=2,col=2)
> #State-space diagram
> plot(Cpools[,2],Cpools[,1],type="l",ylab="SOM-C",xlab="Microbial biomass")
> plot(days,Cpools[,2],type="l",col=2,xlab="Days",ylab="Microbial biomass")
> 
> #The default parameterization exhaust the microbial biomass.
> #A different behavior is obtained by increasing ks and decreasing kb
> MMmodel=TwopMMmodel(t=days,ival=c(972,304) ,Af=3,kb=0.0000001)
> Cpools=getC(MMmodel)
> 
> matplot(days,Cpools,type="l",ylab="Concentrations",xlab="Days",lty=1,ylim=c(0,max(Cpools)*1.2))
> legend("topleft",c("SOM-C", "Microbial biomass"),lty=1,col=c(1,2),bty="n")
> 
> plot(Cpools[,2],Cpools[,1],type="l",ylab="SOM-C",xlab="Microbial biomass")
> 
> plot(days,Cpools[,2],type="l",col=2,xlab="Days",ylab="Microbial biomass")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TwopMMmodel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("TwopParallelModel")
> ### * TwopParallelModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TwopParallelModel
> ### Title: Implementation of a linear two pool model with parallel
> ###   structure
> ### Aliases: TwopParallelModel
> 
> ### ** Examples
> 
> t_start=0 
> t_end=10 
> tn=50
> timestep=(t_end-t_start)/tn 
> t=seq(t_start,t_end,timestep) 
> Ex=TwopParallelModel(t,ks=c(k1=0.5,k2=0.2),C0=c(c10=100, c20=150),In=10,gam=0.7,xi=0.5)
> Ct=getC(Ex)
> plot(t,rowSums(Ct),type="l",lwd=2,
+ ylab="Carbon stocks (arbitrary units)",xlab="Time",ylim=c(0,sum(Ct[1,]))) 
> lines(t,Ct[,1],col=2)
> lines(t,Ct[,2],col=4)
> legend("topright",c("Total C","C in pool 1", "C in pool 2"),
+ lty=c(1,1,1),col=c(1,2,4),lwd=c(2,1,1),bty="n")
> 
> Rt=getReleaseFlux(Ex)
> plot(t,rowSums(Rt),type="l",ylab="Carbon released (arbitrary units)",
+ xlab="Time",lwd=2,ylim=c(0,sum(Rt[1,]))) 
> lines(t,Rt[,1],col=2)
> lines(t,Rt[,2],col=4) 
> legend("topleft",c("Total C release","C release from pool 1", "C release from pool 2"),
+ lty=c(1,1,1),col=c(1,2,4),lwd=c(2,1,1),bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TwopParallelModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("TwopParallelModel14")
> ### * TwopParallelModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TwopParallelModel14
> ### Title: Implementation of a two-pool C14 model with parallel structure
> ### Aliases: TwopParallelModel14
> 
> ### ** Examples
> 
> lag <- 2
> years=seq(1901+lag,2009,by=0.5)
> LitterInput=700 
> Ex=TwopParallelModel14(t=years,ks=c(k1=1/2.8, k2=1/35),C0=c(200,5000), 
+ F0_Delta14C=c(0,0),In=LitterInput, gam=0.7,inputFc=C14Atm_NH,lag=lag)
> R14m=getF14R(Ex)
> C14m=getF14C(Ex)
> C14t=getF14(Ex)
> par(mfrow=c(2,1))
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years, C14t[,1], col=4)
> lines(years, C14t[,2],col=4,lwd=2)
> legend("topright",c("Delta 14C Atmosphere", "Delta 14C pool 1", "Delta 14C pool 2"),
+ lty=c(1,1,1),col=c(1,4,4),lwd=c(1,1,2),bty="n")
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years,C14m,col=4)
> lines(years,R14m,col=2)
> legend("topright",c("Delta 14C Atmosphere","Delta 14C SOM", "Delta 14C Respired"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> par(mfrow=c(1,1))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TwopParallelModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("TwopSeriesModel")
> ### * TwopSeriesModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TwopSeriesModel
> ### Title: Implementation of a two pool model with series structure
> ### Aliases: TwopSeriesModel
> 
> ### ** Examples
> 
> t_start=0 
> t_end=10 
> tn=50
> timestep=(t_end-t_start)/tn 
> t=seq(t_start,t_end,timestep) 
> ks=c(k1=0.8,k2=0.4)
> a21=0.5
> C0=c(C10=100,C20=150)
> In = 30
> #
> Temp=rnorm(t,15,1)
> TempEffect=data.frame(t,fT.Daycent1(Temp))
> #
> Ex1=TwopSeriesModel(t,ks,a21,C0,In,xi=TempEffect)
> Ct=getC(Ex1)
> Rt=getReleaseFlux(Ex1)
> #
> plot(t,rowSums(Ct),type="l",ylab="Carbon stocks (arbitrary units)",
+ xlab="Time (arbitrary units)",lwd=2,ylim=c(0,sum(Ct[1,]))) 
> lines(t,Ct[,1],col=2)
> lines(t,Ct[,2],col=4) 
> legend("bottomright",c("Total C","C in pool 1", "C in pool 2"),
+ lty=c(1,1,1),col=c(1,2,4),lwd=c(2,1,1),bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TwopSeriesModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("TwopSeriesModel14")
> ### * TwopSeriesModel14
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TwopSeriesModel14
> ### Title: Implementation of a two-pool C14 model with series structure
> ### Aliases: TwopSeriesModel14
> 
> ### ** Examples
> 
> years=seq(1901,2009,by=0.5)
> LitterInput=700 
> #
> Ex=TwopSeriesModel14(t=years,ks=c(k1=1/2.8, k2=1/35),
+ C0=c(200,5000), F0_Delta14C=c(0,0),
+ In=LitterInput, a21=0.1,inputFc=C14Atm_NH)
> R14m=getF14R(Ex)
> C14m=getF14C(Ex)
> C14t=getF14(Ex)
> #
> par(mfrow=c(2,1))
> plot(C14Atm_NH,type="l",xlab="Year",
+ ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years, C14t[,1], col=4)
> lines(years, C14t[,2],col=4,lwd=2)
> legend("topright",c("Delta 14C Atmosphere", "Delta 14C pool 1", "Delta 14C pool 2"),
+ lty=c(1,1,1),col=c(1,4,4),lwd=c(1,1,2),bty="n")
> #
> plot(C14Atm_NH,type="l",xlab="Year",ylab="Delta 14C (per mil)",xlim=c(1940,2010)) 
> lines(years,C14m,col=4)
> lines(years,R14m,col=2)
> legend("topright",c("Delta 14C Atmosphere","Delta 14C SOM", "Delta 14C Respired"),
+ lty=c(1,1,1), col=c(1,4,2),bty="n")
> par(mfrow=c(1,1))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TwopSeriesModel14", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("Yasso07Model")
> ### * Yasso07Model
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Yasso07Model
> ### Title: Implementation of the Yasso07 model
> ### Aliases: Yasso07Model
> 
> ### ** Examples
> 
> years=seq(0,50,0.1) 
> C0=rep(100,5)
> In=0
> 
> Ex1=Yasso07Model(t=years,C0=C0,In=In)
> Ct=getC(Ex1)
> Rt=getReleaseFlux(Ex1)
> 
> plotCPool(years,Ct,col=1:5,xlab="years",ylab="C pool",
+ ylim=c(0,max(Ct)))
> legend("topright",c("xA","xW","xE","xN","xH"),lty=1,col=1:5,bty="n")
> 
> plotCPool(years,Rt,col=1:5,xlab="years",ylab="Respiration",ylim=c(0,50))
> legend("topright",c("xA","xW","xE","xN","xH"),lty=1,col=1:5,bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Yasso07Model", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("YassoModel")
> ### * YassoModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: YassoModel
> ### Title: Implementation of the Yasso model.
> ### Aliases: YassoModel
> 
> ### ** Examples
> 
> years=seq(0,500,0.5) 
> C0=rep(100,7)
> #
> Ex1=YassoModel(t=years,C0=C0)
> Ct=getC(Ex1)
> Rt=getReleaseFlux(Ex1)
> #
> plotCPool(years,Ct,col=1:7,xlab="years",ylab="C pool",ylim=c(0,200))
> legend("topright",c("fwl","cwl","ext","cel","lig","hum1","hum2"),lty=1,col=1:7,bty="n")
> #
> plotCPool(years,Rt,col=1:7,xlab="years",ylab="Respiration",ylim=c(0,50))
> legend("topright",c("fwl","cwl","ext","cel","lig","hum1","hum2"),lty=1,col=1:7,bty="n")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("YassoModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("bacwaveModel")
> ### * bacwaveModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: bacwaveModel
> ### Title: Implementation of the microbial model Bacwave (bacterial waves)
> ### Aliases: bacwaveModel
> 
> ### ** Examples
> 
> hours=seq(0,800,0.1)
> #
> #Run the model with default parameter values
> bcmodel=bacwaveModel(t=hours)
> Cpools=getC(bcmodel)
> #
> #Time solution
> matplot(hours,Cpools,type="l",ylab="Concentrations",xlab="Hours",lty=1,ylim=c(0,max(Cpools)*1.2))
> legend("topleft",c("Substrate", "Microbial biomass"),lty=1,col=c(1,2),bty="n")
> #
> #State-space diagram
> plot(Cpools[,2],Cpools[,1],type="l",ylab="Substrate",xlab="Microbial biomass")
> #
> #Microbial biomass over time
> plot(hours,Cpools[,2],type="l",col=2,xlab="Hours",ylab="Microbial biomass")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("bacwaveModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("by_PoolIndex-function-character-character-method")
> ### * by_PoolIndex-function-character-character-method
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: by_PoolIndex,function,character,character-method
> ### Title: convert a function f of to f_vec
> ### Aliases: by_PoolIndex,function,character,character-method
> 
> ### ** Examples
> 
> leaf_resp=function(leaf_pool_content){leaf_pool_content*4}
> leaf_resp(1)
[1] 4
> poolNames=c(
+    "some_thing"
+   ,"some_thing_else"
+   ,"some_thing_altogther"
+   ,"leaf_pool_content"
+ )
> leaf_resp_vec=by_PoolIndex(leaf_resp,poolNames,timeSymbol='t')
> # The result is the same since the only the forth position in the vector
> leaf_resp_vec(c(1,27,3,1),5) 
[1] 4
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("by_PoolIndex-function-character-character-method", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("eCO2")
> ### * eCO2
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: eCO2
> ### Title: Soil CO2 efflux from an incubation experiment
> ### Aliases: eCO2
> ### Keywords: datasets
> 
> ### ** Examples
> 
> head(eCO2)
  Days eCO2mean    eCO2sd
1    1 34.94853 1.9741380
2    3 30.04433 1.2197519
3    5 27.31103 1.8155063
4    7 21.04280 1.3845725
5    9 21.84829 1.3994999
6   11 19.71887 0.6986336
> 
> plot(eCO2[,1:2],type="o",ylim=c(0,50),ylab="CO2 efflux (ug C g-1 soil day-1)")
> arrows(eCO2[,1],eCO2[,2]-eCO2[,3],eCO2[,1],eCO2[,2]+eCO2[,3], angle=90,length=0.3,code=3)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("eCO2", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("entropyRatePerJump")
> ### * entropyRatePerJump
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: entropyRatePerJump
> ### Title: Entropy rate per jump
> ### Aliases: entropyRatePerJump
> 
> ### ** Examples
> 
> B6=matrix(c(-1,1,0,0,-1,1,0,0,-1),3,3); u6=matrix(c(1,0,0))
> entropyRatePerJump(A=B6, u=u6)
[1] 0.75
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("entropyRatePerJump", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("entropyRatePerTime")
> ### * entropyRatePerTime
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: entropyRatePerTime
> ### Title: Entropy rate per time
> ### Aliases: entropyRatePerTime
> 
> ### ** Examples
> 
> B6=matrix(c(-1,1,0,0,-1,1,0,0,-1),3,3); u6=matrix(c(1,0,0))
> entropyRatePerTime(A=B6, u=u6)
[1] 1
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("entropyRatePerTime", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("incubation_experiment")
> ### * incubation_experiment
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: incubation_experiment
> ### Title: Soil CO2 efflux from an incubation experiment, along with the
> ###   soil mass and carbon concentration measurements.
> ### Aliases: incubation_experiment
> ### Keywords: datasets
> 
> ### ** Examples
> 
> eCO2=incubation_experiment$eCO2
> head(eCO2)
  Days eCO2mean    eCO2sd
1    1 34.94853 1.9741380
2    3 30.04433 1.2197519
3    5 27.31103 1.8155063
4    7 21.04280 1.3845725
5    9 21.84829 1.3994999
6   11 19.71887 0.6986336
> 
> plot(eCO2[,1:2],type="o",ylim=c(0,50),ylab="CO2 efflux (ug C g-1 soil day-1)")
> arrows(eCO2[,1],eCO2[,2]-eCO2[,3],eCO2[,1],eCO2[,2]+eCO2[,3], angle=90,length=0.3,code=3)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("incubation_experiment", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("linearScalarModel")
> ### * linearScalarModel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: linearScalarModel
> ### Title: Implementation of a general model for linear non-autonomous
> ###   systems with scalar modifiers
> ### Aliases: linearScalarModel
> 
> ### ** Examples
> 
> t=seq(0,52*200,1) # Fix me! Add an example.  
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("linearScalarModel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("listProduct")
> ### * listProduct
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: listProduct
> ### Title: tensor product of lists
> ### Aliases: listProduct
> 
> ### ** Examples
> 
> listProduct(list('a','b'),list(1,2))
[[1]]
[[1]][[1]]
[1] "a"

[[1]][[2]]
[1] 1


[[2]]
[[2]][[1]]
[1] "a"

[[2]][[2]]
[1] 2


[[3]]
[[3]][[1]]
[1] "b"

[[3]][[2]]
[1] 1


[[4]]
[[4]][[1]]
[1] "b"

[[4]][[2]]
[1] 2


> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("listProduct", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("pathEntropy")
> ### * pathEntropy
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: pathEntropy
> ### Title: Path Entropy
> ### Aliases: pathEntropy
> 
> ### ** Examples
> 
> B6=matrix(c(-1,1,0,0,-1,1,0,0,-1),3,3); u6=matrix(c(1,0,0))
> pathEntropy(A=B6, u=u6)
[1] 3
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("pathEntropy", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  13.682 0.397 14.204 0.148 0.099 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
